{"version":3,"sources":["util/translations.js","hooks/useTranslation.js","util/hasIncompleteSets.js","util/timeFormat.js","util/workoutPersistence.js","util/serializeWorkout.js","ui.js","components/Actions.js","util/hasIncompleteExercises.js","components/AddExercise.js","components/SetDisplay.js","components/RPEScale.js","components/Exercise.js","util/genHash.js","util/reducer.js","components/Workout.js","components/WorkoutHistory.js","components/AddWorkout.js","components/WorkoutDisplay.js","components/WorkoutList.js","App.js","index.js"],"names":["en","pt","useTranslation","useState","language","setLanguage","useEffect","navigatorLanguage","window","navigator","split","includes","fallback","translations","t","key","hasIncompleteSets","exercise","sets","some","s","stage","timeFormat","seconds","Math","abs","pad","val","padStart","minutes","floor","hours","getWorkoutList","json","localStorage","getItem","JSON","parse","loadWorkout","logKey","workout","date","Date","saveWorkout","id","toISOString","isComplete","activeSetId","activeExerciseId","name","document","querySelector","textContent","trim","duration","Number","dataset","value","exercises","$exercises","querySelectorAll","$exercise","$sets","$set","set","defaultDurationTime","defaultReps","defaultWeight","defaultRestTime","push","rpe","stringify","serializeWorkout","setItem","Container","props","children","className","Footer","Button","Icon","type","label","buttonProps","colorClasses","primary","neutral","success","colorClass","DecoratedBlock","TextLabel","small","sizeClass","SingleInputForm","onSubmit","onChange","placeholder","required","Block","isActive","List","ListItem","itemProps","ring","TitleH3","EmptyMessage","LightButton","BlockActions","locales","CycleButton","onClick","labels","IDLE","ACTIVE","RESTING","COMPLETE","icons","BiPlay","BiPause","BiCheck","BiRefresh","Actions","state","dispatch","isReadOnly","history","useHistory","timer","setTimer","setIsComplete","timerIsRunning","setTimerIsRunning","interval","setInterval","clearInterval","onGoBack","footerButtons","find","e","hasActiveSet","Boolean","hasExercises","length","hasSets","BiArrowBack","BiStar","BiTrophy","confirm","payload","exerciseId","setId","timerType","locale","formatOptions","data-value","format","AddExercise","setName","ev","preventDefault","target","SetInputField","inputProps","labelText","formatFunction","isEdit","onToggleEdit","inputColorClass","danger","highlight","autoFocus","onFocus","select","onBlur","tabIndex","SetDisplay","durationTime","setDurationTime","restTime","setRestTime","reps","setReps","weight","setWeight","isEditTime","setIsEditTime","isEditReps","setIsEditReps","isEditWeight","setIsEditWeight","isEditRest","setIsEditRest","prevStageRef","useRef","current","numericInputProps","pattern","min","inputMode","baseType","data-id","defaultValue","RPEScale","defaultRPE","setValue","expand","setExpand","rpeTitles","rpeDescriptions","max","step","Array","from","keys","map","i","Exercise","isFirst","isLast","isWorkoutComplete","onActivateSet","moveExercise","factor","disabled","genHash","crypto","getRandomValues","Uint32Array","toString","reducer","action","cloneDeep","ex","hash","addNewSet","setIndex","findIndex","splice","removeSet","updateActiveSet","currentStage","nextStage","stages","index","getNextStageFor","nextIndex","updateSetStage","nextExerciseIdx","nextExercise","updateActiveExercise","addNewExercise","completeWorkout","exerciseIndex","newIndex","exerciseA","exerciseB","Error","Workout","baseWorkout","readOnly","useReducer","to","WorkoutHistory","list","Object","persistenceKey","workoutHistoryList","workoutsList","setWorkoutsList","onClickRemove","removeItem","eraseLogEntry","filter","w","pathname","search","AddWorkout","onAddWorkout","WorkoutDisplay","onRemoveWorkout","lastRun","lastLogKey","entry","sort","reverse","getLastRunDate","formatDistance","WorkoutList","workouts","setWorkouts","removeWorkoutFromList","location","reload","addWorkoutToList","concat","App","renderWorkout","routeProps","URLSearchParams","get","createNew","match","path","loadWorkoutById","basename","process","exact","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efb03e13.chunk.js","sourcesContent":["export const en = {\n    'no_exercise': 'No exercises to list.',\n    'start': 'Start',\n    'close': 'Close',\n    'complete': 'Complete',\n    'reset': 'Reset',\n    'sets': 'Sets',\n    'reps': 'Reps',\n    'history': 'History',\n    'view': 'View',\n    'last_run': 'Last run',\n    'time': 'Time',\n    'rest': 'Rest',\n    'weight': 'Weight',\n    'confirm_delete': 'Are you sure you want to delete this workout and all its past registries?',\n    'save_progress': 'Would you like to save your progress?',\n    'erase_workout': 'Are you sure you want to erase the current workout?',\n    'back': 'Back',\n    'reset_workout': 'Reset workout',\n    'finish_workout': 'Finish Workout',\n    'finish_exercise': 'Finish exercise',\n    'start_workout': 'Start workout',\n    'add_exercise': 'Add exercise',\n    'exercise_name': 'Exercise name',\n    'no_sets': 'No sets for this exercise.',\n    'remove_set': 'Remove set',\n    'add_set': 'Add set',\n    'rpe_title_1': 'Very light activity',\n    'rpe_title_2': 'Light activity',\n    'rpe_title_3': 'Light activity',\n    'rpe_title_4': 'Moderate activity',\n    'rpe_title_5': 'Moderate activity',\n    'rpe_title_6': 'Moderate activity',\n    'rpe_title_7': 'Vigorous activity',\n    'rpe_title_8': 'Vigorous activity',\n    'rpe_title_9': 'Very hard activity',\n    'rpe_title_10': 'Max effort activity',\n    'rpe_desc_1': 'Hardly any exertion, but more than sleeping, watching TV, etc.',\n    'rpe_desc_2': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_3': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_4': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_5': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_6': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_7': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_8': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_9': 'Very difficult to mantain, can barely breathe, can speak a few words',\n    'rpe_desc_10': 'Almost impossible to keep going. Out of breath, unable to talk.',\n    'rpe': 'Rate of perceived exertion ',\n    'workouts_list': 'Workouts list',\n    'workout_name': 'Workout name',\n    'add_workout': 'Add workout',\n    'remove_workout': 'Remove workout',\n    'no_workout': 'No workout'\n};\n\nexport const pt = {\n    'no_exercise': 'Nenhum exercício para listar.',\n    'start': 'Iniciar',\n    'close': 'Fechar',\n    'complete': 'Completar',\n    'reset': 'Reiniciar',\n    'sets': 'Séries',\n    'reps': 'Repet.',\n    'time': 'Tempo',\n    'history': 'Histórico',\n    'view': 'Ver',\n    'last_run': 'Última vez',\n    'rest': 'Descanso',\n    'weight': 'Peso',\n    'confirm_delete': 'Tem certeza que deseja remover este treino e todos os registros dele?',\n    'save_progress': 'Você gostaria de salvar seu progresso?',\n    'erase_workout': 'Tem certeza que deseja apagar o treino atual?',\n    'back': 'Voltar',\n    'reset_workout': 'Apagar treino',\n    'finish_workout': 'Concluir treino',\n    'finish_exercise': 'Concluir exercício',\n    'start_workout': 'Iniciar treino',\n    'add_exercise': 'Adicionar exercício',\n    'exercise_name': 'Nome do exercício',\n    'no_sets': 'Nenhuma série para este exercício.',\n    'remove_set': 'Remover série',\n    'add_set': 'Adicionar série',\n    'rpe_title_1': 'Atividade muito leve',\n    'rpe_title_2': 'Atividade leve',\n    'rpe_title_3': 'Atividade leve',\n    'rpe_title_4': 'Atividade moderada',\n    'rpe_title_5': 'Atividade moderada',\n    'rpe_title_6': 'Atividade moderada',\n    'rpe_title_7': 'Atividade vigorosa',\n    'rpe_title_8': 'Atividade vigorosa',\n    'rpe_title_9': 'Atividade muito difícil',\n    'rpe_title_10': 'Esforço máximo',\n    'rpe_desc_1': 'Quase nenhum esforço, porém mais que assistir TV ou dormir.',\n    'rpe_desc_2': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_3': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_4': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_5': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_6': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_7': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_8': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_9': 'Muito difícil de manter, mal consegue respirar, consegue dizer apenas algumas palavras.',\n    'rpe_desc_10': 'Impossível continuar, totalmente sem fôlego, não consegue falar.',\n    'rpe': 'Escala de esforço ',\n    'workouts_list': 'Lista de treinos',\n    'workout_name': 'Nome do treino',\n    'add_workout': 'Adicionar treino',\n    'remove_workout': 'Remover treino',\n    'no_workout': 'Nenhum treino disponível'\n};\n","import { useEffect, useState } from 'react';\nimport * as translations from '../util/translations';\n\nexport default function useTranslation() {\n    const [language, setLanguage] = useState('en');\n\n    useEffect(() => {\n        const navigatorLanguage = window.navigator.language.split('-')[0];\n        if (['en', 'pt'].includes(navigatorLanguage)) {\n            setLanguage(navigatorLanguage);\n        } else {\n            setLanguage('en');\n        }\n    }, []);\n\n    const fallback = translations.en;\n\n    const t = (key) => {\n        const translation = translations[language];\n\n        return translation[key] || fallback[key] || key;\n    };\n\n    return { t, language };\n}","export default function hasIncompleteSets(exercise) {\n    return exercise.sets.some(s => s.stage !== 'COMPLETE');\n}","export default function timeFormat(seconds) {\n    if (seconds < 0) {\n        return `-${timeFormat(Math.abs(seconds))}`;\n    }\n    const pad = (val) => `${val % 60}`.padStart(2, '0');\n    const minutes = Math.floor(seconds / 60);\n    if (minutes === 0) {\n        return `${seconds}`;\n    }\n    if (minutes >= 60) {\n        const hours = Math.floor(minutes / 60);\n        return `${hours}:${pad(minutes)}:${pad(seconds)}`;\n    }\n    return `${minutes}:${pad(seconds)}`;\n}","import serializeWorkout from '../util/serializeWorkout';\n\nexport function workoutHistoryList() {\n    const { localStorage } = window;\n\n    const list = [];\n    for (const key of Object.keys(localStorage)) {\n        const [date, id] = key.split('_');\n        if (!Date.parse(date) || !id) {\n            continue;\n        }\n        const workout = JSON.parse(localStorage.getItem(key));\n        workout.persistenceKey = key;\n        list.push(workout);\n    }\n\n    return list;\n}\n\nexport function getWorkoutList() {\n    const { localStorage } = window;\n\n    const json = localStorage.getItem('workouts');\n    if (!json) {\n        return [];\n    }\n    return JSON.parse(json);\n}\n\nexport function addWorkoutToList(workout) {\n    const { localStorage } = window;\n\n    const json = localStorage.getItem('workouts');\n    const workouts = json ? JSON.parse(json) : [];\n    workouts.push(workout);\n    localStorage.setItem('workouts', JSON.stringify(workouts));\n}\n\nexport function removeWorkoutFromList(id) {\n    const { localStorage } = window;\n\n    const json = localStorage.getItem('workouts');\n    const workouts = json ? JSON.parse(json) : [];\n    localStorage.setItem('workouts', JSON.stringify(\n        workouts.filter(w => w.id !== id)\n    ));\n\n    for (const key of Object.keys(localStorage)) {\n        if (key.includes(id)) {\n            localStorage.removeItem(key);\n        }\n    }\n}\n\nexport function getLastRunDate(id) {\n    const { localStorage } = window;\n\n    const lastLogKey = Object.keys(localStorage)\n        .filter(entry => entry.includes(id))\n        .sort()\n        .reverse()[0];\n    \n    if (!lastLogKey) {\n        return null;\n    }\n\n    return new Date(loadWorkout(lastLogKey).date);\n}\n\nexport function loadWorkoutById(id, createNew = true) {\n    const { localStorage } = window;\n\n    const lastLogKey = Object.keys(localStorage)\n        .filter(entry => entry.includes(id))\n        .sort()\n        .reverse()[0];\n\n    const workout = loadWorkout(lastLogKey) || getWorkoutList().find(\n        entry => entry.id === id\n    );\n\n    if (createNew) {\n        workout.date = new Date();\n        workout.isComplete = false;\n        workout.duration = 0;\n    } else {\n        workout.date = new Date(workout.date);\n    }\n\n    for (const exercise of workout.exercises) {\n        for (const set of exercise.sets) {\n            set.stage = createNew ? 'IDLE' : 'COMPLETE';\n        }\n    }\n\n    return workout;\n}\n\nexport function loadWorkout(logKey) {\n    const { localStorage } = window;\n\n    const json = localStorage.getItem(logKey);\n\n    if (!json) {\n        return null;\n    }\n\n    const workout = JSON.parse(json);\n    workout.date = new Date(workout.date);\n\n    return workout;\n}\n\n\nexport function eraseLogEntry(logKey) {\n    const { localStorage } = window;\n\n    localStorage.removeItem(logKey);\n}\n\nexport function eraseWorkout(id) {\n    const { localStorage } = window;\n\n    const logKey = `${(new Date()).toISOString().split('T')[0]}_${id}`;\n    localStorage.removeItem(logKey);\n}\n\nexport function saveWorkout(id) {\n    const { localStorage } = window;\n\n    const logKey = `${(new Date()).toISOString().split('T')[0]}_${id}`;\n\n    const json = serializeWorkout(id);\n\n    localStorage.setItem(logKey, json);\n}","\nexport default function serializeWorkout(id) {\n    const workout = {\n        id,\n        isComplete: true,\n        activeSetId: null,\n        activeExerciseId: null\n    };\n\n    workout.date = new Date();\n    workout.name = document.querySelector('.workout-name').textContent.trim();\n    workout.duration = Number(\n        document.querySelector('.workout-duration').dataset.value\n    );\n    workout.exercises = [];\n\n    const $exercises = document.querySelectorAll('.exercise');\n    for (const $exercise of $exercises) {\n        const exercise = {};\n        exercise.name = $exercise.querySelector(\n            '.exercise-name'\n        ).textContent.trim();\n        exercise.id = $exercise.dataset.id;\n        exercise.sets = [];\n\n        const $sets = $exercise.querySelectorAll('.set-display');\n        for (const $set of $sets) {\n            const set = {};\n            set.id = $set.dataset.id;\n            set.defaultDurationTime = Number(\n                $set.querySelector('.time .value').dataset.value\n            );\n            set.defaultReps = Number(\n                $set.querySelector('.reps .value').dataset.value\n            );\n            set.defaultWeight = Number(\n                $set.querySelector('.weight .value').dataset.value\n            );\n            set.defaultRestTime = Number(\n                $set.querySelector('.rest .value').dataset.value\n            );\n            set.stage = 'COMPLETE';\n            exercise.sets.push(set);\n        }\n        exercise.rpe = Number($exercise.querySelector('.rpe').value);\n        workout.exercises.push(exercise);\n    }\n\n    return JSON.stringify(workout);\n}","export function Container(props) {\n    const { children } = props;\n    return <div className='container bg-white max-w-5xl min-h-screen m-auto border shadow-md place-self-center'>{children}</div>;\n}\n\nexport function Footer(props) {\n    const { children } = props;\n    return <div className='fixed flex justify-center bottom-0 w-screen left-0'>\n        <div className='flex justify-end items-center border-t border-indigo-200 bg-white w-full max-w-5xl p-3 pb-8'>{children}</div>\n    </div>;\n}\n\nexport function Button(props) {\n    const { Icon, type='neutral', label, ...buttonProps } = props;\n\n    const colorClasses = {\n        primary: 'bg-blue-500 ml-2 border-blue-600 focus:ring-blue-200 active:bg-blue-700',\n        neutral: 'bg-indigo-500 ml-2 border-indigo-600 focus:ring-indigo-200 active:bg-indigo-700',\n        success: 'bg-green-500 ml-2 border-green-600 focus:ring-green-200 active:bg-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <button {...buttonProps} className={`border flex uppercase focus:ring-2 text-sm items-center text-white px-3 py-2 rounded-md ${colorClass}`}>\n            {Icon && <Icon className='mr-1 text-lg' />} {label}\n        </button>\n    );\n}\n\nexport function DecoratedBlock(props) {\n    const { type = 'neutral', children } = props;\n\n    const colorClasses = {\n        primary: 'border-blue-500 text-blue-700',\n        neutral: 'border-indigo-500 text-indigo-700',\n        success: 'border-green-500 text-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <div className={`text-xl mr-auto border-l-2 pl-2 bg-white ${colorClass}`}>\n            {children}\n        </div>\n    );\n}\n\nexport function TextLabel(props) {\n    const { small = false, className, children } = props;\n\n    const sizeClass = small ? 'text-xs' : 'text-sm';\n\n    return (\n        <p className={`${sizeClass} uppercase tracking-wider ${className}`}>{children}</p>\n    );\n}\n\nexport function SingleInputForm(props) {\n    const { onSubmit, value, onChange, placeholder, label } = props;\n\n    return (\n        <form onSubmit={onSubmit} className='m-3 pt-3 border-t border-indigo-200'>\n            <div className='flex p-2 items-center bg-indigo-50 rounded-xl border border-indigo-200'>\n                <input required value={value} onChange={onChange}\n                    className='text-indigo-800 px-2 w-2 flex-1 py-1 rounded border border-indigo-200 placeholder-indigo-400 focus:ring-2 focus:ring-indigo-200'\n                    type='text' placeholder={placeholder} />\n            </div>\n            <div className='flex justify-end mt-1'>\n                <button\n                    className='text-indigo-500 text-sm px-1'> {label}\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport function Block(props) {\n    const { isActive = false, type='neutral', children } = props;\n\n    const colorClasses = {\n        primary: `border-blue-200 bg-blue-50 ${isActive ? 'ring-2 ring-blue-200' : ''}`,\n        neutral: `border-indigo-200 bg-indigo-50 ${isActive ? 'ring-2 ring-indigo-200' : ''}`,\n        success: `border-green-200 bg-green-50 ${isActive ? 'ring-2 ring-green-200' : ''}`,\n    };\n\n    let colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return <div className={`p-2 border ${colorClass} rounded-xl`}>{children}</div>;\n}\n\nexport function List(props) {\n    const { children } = props;\n    return <ul className='flex flex-col space-y-3'>{children}</ul>;\n}\n\nexport function ListItem(props) {\n    const { isActive, children, className, ...itemProps } = props;\n    const ring = isActive ? 'ring-2 ring-indigo-200 border-indigo-400' : '';\n    return <div {...itemProps} className={`bg-white p-2 rounded-md shadow border border-indigo-200 ${ring} ${className}`}>{children}</div>;\n}\n\nexport function TitleH3(props) {\n    const { children, className } = props;\n    return <h3 className={`text-lg font-semibold text-indigo-800 ${className}`}>{children}</h3>;\n}\n\nexport function EmptyMessage(props) {\n    const { children } = props;\n    return <p className='text-indigo-500 text-sm pb-1'>{children}</p>;\n}\n\nexport function LightButton(props) {\n    const { children, ...buttonProps } = props;\n    return <button {...buttonProps} className='text-indigo-500 text-sm px-1'>{children}</button>;\n}\n\nexport function BlockActions(props) {\n    const { children } = props;\n    return <div className='flex justify-end mt-1 space-x-4'>{children}</div>;\n}","import { format } from 'date-fns';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useEffect, useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport {\n    BiArrowBack,\n    BiCheck,\n    BiPause,\n    BiPlay,\n    BiRefresh,\n    BiStar,\n    BiStopwatch,\n    BiTrophy\n} from 'react-icons/bi';\nimport hasIncompleteExercises from '../util/hasIncompleteExercises';\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport timeFormat from '../util/timeFormat';\n\nimport { saveWorkout } from '../util/workoutPersistence';\nimport { useHistory } from 'react-router';\nimport { Button, DecoratedBlock, Footer, TextLabel } from '../ui';\n\nfunction CycleButton({ stage, onClick = () => {} }) {\n    const { t } = useTranslation();\n    \n    const labels = {\n        IDLE: t('start'),\n        ACTIVE: t('rest'),\n        RESTING: t('complete'),\n        COMPLETE: t('reset')\n    };\n\n    const icons = {\n        IDLE: BiPlay,\n        ACTIVE: BiPause,\n        RESTING: BiCheck,\n        COMPLETE: BiRefresh\n    };\n\n    const types = {\n        IDLE: 'neutral',\n        ACTIVE: 'neutral',\n        RESTING: 'neutral',\n        COMPLETE: 'primary'\n    };\n\n    const label = labels[stage];\n    const Icon = icons[stage];\n    const type = types[stage];\n\n    return (\n        <Button\n            onClick={onClick}\n            type={type}\n            label={label}\n            Icon={Icon}\n        />\n    );\n}\n\nexport default function Actions(props) {\n    const { state, dispatch, isReadOnly } = props;\n\n    const { t, language } = useTranslation();\n    const history = useHistory();\n\n    const [timer, setTimer] = useState(state.duration || 0);\n    const [isComplete, setIsComplete] = useState(false);\n    const [timerIsRunning, setTimerIsRunning] = useState(false);\n\n    useEffect(() => {\n        if (!timerIsRunning) {\n            return;\n        }\n        const interval = setInterval(() => {\n            setTimer(t => t + 1);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [timerIsRunning]);\n\n    const updateStage = () => {\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    const completeExercise = () => {\n        dispatch({\n            type: 'COMPLETE_EXERCISE'\n        });\n    };\n\n    const completeWorkout = () => {\n        const willSave = window.confirm(\n            t('save_progress')\n        );\n        if (willSave) {\n            saveWorkout(state.id);\n        }\n        setIsComplete(true);\n        setTimerIsRunning(false);\n        dispatch({\n            type: 'COMPLETE_WORKOUT'\n        });\n    };\n\n    const onStartWorkout = () => {\n        setTimerIsRunning(true);\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: state.exercises[0]?.id,\n                setId: state.exercises[0]?.sets[0]?.id,\n            }\n        });\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    const onGoBack = () => {\n        history.push('/');\n    };\n\n    let footerButtons = [null, null];\n\n    const exercise = state.exercises.find(\n        e => e.id === state.activeExerciseId\n    );\n\n    const set = exercise ? exercise.sets.find(\n        s => s.id === state.activeSetId\n    ) : null;\n\n    const hasActiveSet = Boolean(set);\n    const hasExercises = state.exercises.length > 0;\n    const hasSets = state.exercises[0]?.sets.length > 0;\n\n    if (isReadOnly) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('back')}\n            onClick={onGoBack}\n            Icon={BiArrowBack}\n        />;\n    } else if (isComplete) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('back')}\n            onClick={onGoBack}\n            Icon={BiArrowBack}\n        />;\n    } else if (timerIsRunning) {\n        if (hasActiveSet) {\n            footerButtons[0] = <CycleButton\n                onClick={updateStage}\n                stage={set.stage}\n            />;\n        }\n    \n        if (!hasIncompleteExercises(state)) {\n            footerButtons[1] = <Button\n                type='success'\n                label={t('finish_workout')}\n                Icon={BiTrophy}\n                onClick={completeWorkout}\n            />;\n        } else if (!hasIncompleteSets(exercise)) {\n            footerButtons[1] = <Button\n                type='success'\n                label={t('finish_exercise')}\n                Icon={BiStar}\n                onClick={completeExercise}\n            />;\n        }\n    } else if (hasExercises && hasSets && !isComplete) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('start_workout')}\n            onClick={onStartWorkout}\n            Icon={BiPlay}\n        />;\n    }\n\n    const timerType = timerIsRunning || !isComplete ? 'neutral' : 'success';\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    const date = state.date || new Date();\n    return (\n        <Footer>\n            <DecoratedBlock type={timerType}>\n                <BiStopwatch className='inline -mt-1 mr-1 -ml-1' />\n                <time\n                    className='workout-duration'\n                    data-value={timer}\n                >{timeFormat(timer)}</time>\n                <TextLabel small>\n                    {format(date, 'PP', formatOptions)}\n                </TextLabel>\n            </DecoratedBlock>\n            {footerButtons[0]} {footerButtons[1]}\n        </Footer>\n    );\n}","import hasIncompleteSets from './hasIncompleteSets';\n\nexport default function hasIncompleteExercises(workout) {\n    return workout.exercises.some(hasIncompleteSets);\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport { SingleInputForm } from '../ui';\n\nexport default function AddExercise(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n    const { dispatch } = props;\n\n    const onAddExercise = (ev) => {\n        ev.preventDefault();\n        setName('');\n        dispatch({\n            type: 'ADD_EXERCISE',\n            payload: { name }\n        });\n    };\n\n    return <SingleInputForm\n        onSubmit={onAddExercise}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('exercise_name')}\n        label={t('add_exercise')}\n        value={name}\n    />;\n}","import { useEffect, useRef, useState } from 'react';\nimport timeFormat from '../util/timeFormat';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem, TextLabel } from '../ui';\n\nfunction SetInputField(props) {\n    const {\n        inputProps,\n        labelText,\n        value = null,\n        formatFunction = val => val,\n        type = 'neutral',\n        isEdit = false,\n        onToggleEdit = () => {},\n        onChange = () => {}\n    } = props;\n\n    const labelColorClass = {\n        primary: 'text-blue-800',\n        neutral: 'text-indigo-800',\n        success: 'text-green-800',\n        danger: 'text-red-800',\n        highlight: 'text-cyan-800'\n    };\n    \n    const inputColorClass = {\n        primary: 'text-blue-800 bg-blue-50 border-blue-200 focus:ring-blue-100',\n        neutral: 'text-indigo-800 bg-indigo-50 border-indigo-200 focus:ring-indigo-100',\n        success: 'text-green-800 bg-green-50 border-green-200 focus:ring-green-100',\n        danger: 'text-red-800 bg-red-50 border-red-200 focus:ring-red-100',\n        highlight: 'text-cyan-800 bg-cyan-50 border-cyan-200 focus:ring-cyan-100'\n    };\n\n    return (\n        <label className={labelColorClass[type]}>\n            <TextLabel className='mb-1'>{labelText}</TextLabel>\n            {\n                isEdit ? (\n                    <input\n                        {...inputProps}\n                        className={`block tabuler-nums w-full px-1 rounded shadow-sm border focus:ring-2 ${inputColorClass[type]}`}\n                        value={value}\n                        autoFocus\n                        onFocus={ev => ev.target.select()}\n                        onBlur={() => isEdit && onToggleEdit(false)}\n                        onChange={ev => onChange(Number(ev.target.value))}\n                    ></input>\n                ) : (\n                    <span data-value={value} tabIndex={0} onFocus={() => isEdit || onToggleEdit(true)} className={`value block tabuler-nums w-full px-1 rounded shadow-sm border ${inputColorClass[type]}`}>\n                        {formatFunction(Number(value))}\n                    </span>\n                )\n            }\n        </label>\n    );\n}\n\nexport default function SetDisplay(props) {\n    const {\n        id,\n        exerciseId,\n        defaultDurationTime = 0,\n        defaultRestTime = 30,\n        defaultReps = 8,\n        defaultWeight = 10,\n        isReadOnly = false,\n        onClick = () => {},\n        dispatch = () => {},\n        isActive = true,\n        stage = 'IDLE'\n    } = props;\n\n    const [durationTime, setDurationTime] = useState(defaultDurationTime);\n    const [restTime, setRestTime] = useState(defaultRestTime);\n    const [reps, setReps] = useState(defaultReps);\n    const [weight, setWeight] = useState(defaultWeight);\n\n    const [isEditTime, setIsEditTime] = useState(false);\n    const [isEditReps, setIsEditReps] = useState(false);\n    const [isEditWeight, setIsEditWeight] = useState(false);\n    const [isEditRest, setIsEditRest] = useState(false);\n\n    const prevStageRef = useRef();\n\n    const { t } = useTranslation();\n    useEffect(() => {\n        if (isEditTime || isEditReps || isEditWeight || isEditRest) {\n            dispatch({\n                type: 'UPDATE_ACTIVE_SET',\n                payload: {\n                    setId: id,\n                    exerciseId\n                }\n            });\n\n        }\n    }, [\n        dispatch, isEditTime, isEditReps, isEditRest,\n        isEditWeight, id, exerciseId\n    ]);\n\n    useEffect(() => {\n        if (stage === 'IDLE' && prevStageRef.current === 'COMPLETE') {\n            setDurationTime(0);\n            setRestTime(defaultRestTime);\n            setReps(defaultReps);\n            setWeight(defaultWeight);\n        }\n    }, [defaultRestTime, defaultReps, defaultWeight, stage]);\n\n    useEffect(() => {\n        prevStageRef.current = stage;        \n    }, [stage]);\n\n    useEffect(() => {\n        if (stage === 'ACTIVE' && !isEditTime) {\n            const interval = setInterval(() => {\n                setDurationTime((t) => Number(t) + 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [stage, isEditTime]);\n\n    useEffect(() => {\n        if (stage === 'RESTING' && !isEditRest) {\n            const interval = setInterval(() => {\n                setRestTime((t) => Number(t) - 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [stage, defaultRestTime, isEditRest]);\n\n    const numericInputProps = {\n        type: 'number',\n        pattern: '\\\\d+',\n        min: '0',\n        inputMode: 'numeric',\n    };\n\n    const baseType = stage === 'COMPLETE' ? 'success' : 'neutral';\n\n    const getRestingType = () => {\n        if (stage === 'RESTING') {\n            return restTime < 0 ? 'danger' : 'highlight';\n        }\n        return baseType;\n    };\n\n    return (\n        <ListItem\n            onClick={onClick}\n            data-id={id}\n            className='set-display flex space-x-2'\n            isActive={isActive && !isReadOnly}\n        >\n            <div className='time flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditTime && !isReadOnly}\n                    onToggleEdit={setIsEditTime}\n                    onChange={setDurationTime}\n                    value={durationTime}\n                    formatFunction={timeFormat}\n                    type={stage === 'ACTIVE' ? 'highlight' : baseType}\n                    labelText={t('time')}\n                    defaultValue='0'\n                />\n            </div>\n            <div className='reps flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditReps && !isReadOnly}\n                    onToggleEdit={setIsEditReps}\n                    onChange={setReps}\n                    value={reps}\n                    type={baseType}\n                    labelText={t('reps')}\n                    defaultValue='8'\n                />\n            </div>\n            <div className='weight flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditWeight && !isReadOnly}\n                    onToggleEdit={setIsEditWeight}\n                    onChange={setWeight}\n                    value={weight}\n                    type={baseType}\n                    labelText={t('weight')}\n                    defaultValue='10'\n                />\n            </div>\n            <div className='rest flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditRest && !isReadOnly}\n                    onToggleEdit={setIsEditRest}\n                    onChange={setRestTime}\n                    value={restTime}\n                    type={getRestingType()}\n                    formatFunction={timeFormat}\n                    labelText={t('rest')}\n                    defaultValue={defaultRestTime}\n                />\n            </div>\n        </ListItem>\n    );\n}","import { BiInfoCircle } from 'react-icons/bi';\nimport { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem } from '../ui';\n\nexport default function RPEScale(props) {\n    const { defaultRPE = 5, isReadOnly } = props;\n\n    const { t } = useTranslation();\n    const [value, setValue] = useState(defaultRPE);\n    const [expand, setExpand] = useState(false);\n\n    const rpeTitles = [\n        t('rpe_title_1'),\n        t('rpe_title_2'),\n        t('rpe_title_3'),\n        t('rpe_title_4'),\n        t('rpe_title_5'),\n        t('rpe_title_6'),\n        t('rpe_title_7'),\n        t('rpe_title_8'),\n        t('rpe_title_9'),\n        t('rpe_title_10')\n    ];\n\n    const rpeDescriptions = [\n        t('rpe_desc_1'),\n        t('rpe_desc_2'),\n        t('rpe_desc_3'),\n        t('rpe_desc_4'),\n        t('rpe_desc_5'),\n        t('rpe_desc_6'),\n        t('rpe_desc_7'),\n        t('rpe_desc_8'),\n        t('rpe_desc_9'),\n        t('rpe_desc_10')\n    ];\n\n    return (\n        <>\n            <hr className='border-t border-indigo-200'></hr>\n            <ListItem>\n                <span className='uppercase text-sm tracking-wider text-indigo-700'>{t('rpe')}\n                <button onClick={() => setExpand(!expand)}><BiInfoCircle className='inline ml-1 mb-1' /></button></span>\n                <input\n                    className={`rpe val-${value}`}\n                    type='range'\n                    min='1'\n                    value={value}\n                    onChange={ev => isReadOnly || setValue(ev.target.value)}\n                    max='10'\n                    step='1'\n                />\n                <ul className='tracks flex w-full justify-between text-xs -mt-1 text-indigo-700'>\n                    {Array.from(Array(10).keys()).map((i) => \n                        <li key={i}>{i + 1}</li>\n                    )}\n                </ul>\n                {\n                    expand && (\n                        <>\n                            <hr className='mt-2 border-t border-indigo-200' />\n                            <h4 className='text-xs font-semibold mb-1 mt-2 text-indigo-700'>{rpeTitles[value - 1]}</h4>\n                            <p className='text-xs text-indigo-700'>{rpeDescriptions[value - 1]}</p>\n                        </>\n                    )\n                }\n            </ListItem>\n        </>\n    );\n}","import { BiChevronDown, BiChevronUp, BiDumbbell } from 'react-icons/bi';\n\nimport SetDisplay from './SetDisplay';\nimport RPEScale from './RPEScale';\n\nimport '../range.css';\nimport useTranslation from '../hooks/useTranslation';\nimport {\n    Block,\n    EmptyMessage,\n    List,\n    TitleH3,\n    LightButton,\n    BlockActions\n} from '../ui';\n\nexport default function Exercise(props) {\n    const {\n        id,\n        name,\n        sets,\n        isFirst = false,\n        isLast = false,\n        isActive = false,\n        isComplete = false,\n        isReadOnly=false,\n        defaultRPE=5,\n        isWorkoutComplete = false,\n        activeSetId = null,\n        dispatch = () => {},\n    } = props;\n\n    const { t } = useTranslation();\n\n    const onRemoveSet = () => {\n        dispatch({\n            type: 'REMOVE_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onAddSet = () => {\n        dispatch({\n            type: 'ADD_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onActivateSet = (setId) => {\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: id,\n                setId\n            }\n        });\n    };\n\n    const moveExercise = (factor) => {\n        dispatch({\n            type: 'MOVE_EXERCISE',\n            payload: {\n                exerciseId: id,\n                factor\n            }\n        });\n    };\n\n    return (\n        <div className='exercise relative' data-id={id}>\n            {isWorkoutComplete || isReadOnly || (\n                <div className='absolute top-1 right-1 text-indigo-500'>\n                    <button\n                        disabled={isLast}\n                        onClick={() => moveExercise(1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronDown /></button>\n                    <button\n                        disabled={isFirst}\n                        onClick={() => moveExercise(-1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronUp /></button>\n                </div>\n            )}\n            <Block isActive={isActive}>\n                <List>\n                    <TitleH3 className='exercise-name'>\n                        <BiDumbbell className='inline text-xl mb-1'/> {name}\n                    </TitleH3>\n                    {sets.length ? sets.map((set) =>\n                        <SetDisplay\n                            key={set.id}\n                            id={set.id}\n                            exerciseId={id}\n                            defaultDurationTime={set.defaultDurationTime}\n                            defaultWeight={set.defaultWeight}\n                            defaultRestTime={set.defaultRestTime}\n                            defaultReps={set.defaultReps}\n                            onClick={() => onActivateSet(set.id)}\n                            onActivateSet={onActivateSet}\n                            isActive={set.id === activeSetId}\n                            isReadOnly={isReadOnly}\n                            stage={set.stage}\n                            dispatch={dispatch}\n                        ></SetDisplay>\n                    ) : (\n                        <EmptyMessage>{t('no_sets')}</EmptyMessage>\n                    )}\n                    {\n                        isComplete && sets.length > 0 &&\n                        <RPEScale\n                            defaultRPE={defaultRPE}\n                            isReadOnly={isReadOnly}\n                        />\n                    }\n                </List>\n            </Block>\n            {isWorkoutComplete || isReadOnly || (\n                <BlockActions>\n                    {\n                        isActive && activeSetId !== null &&\n                        <LightButton onClick={onRemoveSet}>\n                            {t('remove_set')}\n                        </LightButton>\n                    }\n                    <LightButton onClick={onAddSet}>{t('add_set')}</LightButton>\n                </BlockActions>\n            )}\n        </div>\n    );\n}","export default function genHash() {\n    return crypto.getRandomValues(new Uint32Array(1))[0].toString(16);\n}","import { cloneDeep } from 'lodash';\nimport genHash from './genHash';\nimport hasIncompleteSets from './hasIncompleteSets';\n\nfunction getNextStageFor(stage) {\n    const stages = ['IDLE', 'ACTIVE', 'RESTING', 'COMPLETE'];\n    const index = stages.findIndex(s => s === stage);\n\n    return stages[(index + 1) % stages.length];\n}\n\nfunction addNewSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const hash = genHash();\n    exercise.sets = [\n        ...exercise.sets,\n        { id: hash, stage: 'IDLE' }\n    ];\n    workout.activeSetId = hash;\n    return workout;\n}\n\nfunction removeSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const setIndex = exercise.sets.findIndex(s => s.id === workout.activeSetId);\n    if (setIndex !== -1) {\n        exercise.sets.splice(setIndex, 1);\n        workout.activeSetId = null;\n    }\n    return workout;\n}\n\nfunction updateActiveSet(workout, payload) {\n    const { setId, exerciseId } = payload;\n\n    workout.activeSetId = setId;\n    workout.activeExerciseId = exerciseId;\n\n    return workout;\n}\n\nfunction updateSetStage(workout, stage) {\n    const exercise = workout.exercises.find(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const setIndex = exercise.sets.findIndex(\n        s => s.id === workout.activeSetId\n    );\n    if (setIndex === -1) {\n        return workout;\n    }\n\n    const currentStage = exercise.sets[setIndex].stage;\n    const nextStage = stage || getNextStageFor(\n        currentStage\n    );\n\n    if (nextStage === 'COMPLETE' && !stage) {\n        const nextIndex = (setIndex + 1) % exercise.sets.length;\n        workout.activeSetId = nextIndex > 0 ?\n            exercise.sets[\n                (setIndex + 1) % exercise.sets.length\n            ].id :\n            null;\n    }\n\n    exercise.sets[setIndex].stage = nextStage;\n\n    if (!hasIncompleteSets(exercise)) {\n        workout.activeSetId = null;\n    }\n\n    return workout;\n}\n\nfunction updateActiveExercise(workout) {\n    const activeExerciseIdx = workout.exercises.findIndex(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const nextExerciseIdx = (activeExerciseIdx + 1) % workout.exercises.length;\n    const nextExercise = workout.exercises[nextExerciseIdx];\n    workout.activeExerciseId = nextExercise.id;\n    workout.activeSetId = nextExercise.sets[0]?.id || null;\n\n    return workout;\n}\n\nfunction addNewExercise(workout, payload) {\n    const { name } = payload;\n    workout.exercises.push({\n        id: genHash(),\n        name,\n        sets: []\n    });\n    return workout;\n}\n\nfunction completeWorkout(workout) {\n    workout.isComplete = true;\n    return workout;\n}\n\nfunction moveExercise(workout, payload) {\n    const { exerciseId, factor } = payload;\n\n    const exerciseIndex = workout.exercises.findIndex(e => e.id === exerciseId);\n\n    if (exerciseIndex === -1) {\n        return workout;\n    }\n\n    const newIndex = Math.min(\n        Math.max(0, exerciseIndex + factor), workout.exercises.length - 1\n    );\n\n    const exerciseA = workout.exercises[exerciseIndex];\n    const exerciseB = workout.exercises[newIndex];\n\n    workout.exercises[exerciseIndex] = exerciseB;\n    workout.exercises[newIndex] = exerciseA;\n\n    return workout;\n}\n\nexport default function reducer(state, action) {\n    const workout = cloneDeep(state);\n\n    switch(action.type) {\n        case 'ADD_SET':\n            return addNewSet(workout, action.payload);\n        case 'REMOVE_SET':\n            return removeSet(workout, action.payload);\n        case 'UPDATE_ACTIVE_SET':\n            return updateActiveSet(workout, action.payload);\n        case 'UPDATE_SET_STAGE':\n            return updateSetStage(workout);\n        case 'COMPLETE_EXERCISE':\n            return updateActiveExercise(workout);\n        case 'ADD_EXERCISE':\n            return addNewExercise(workout, action.payload);\n        case 'COMPLETE_WORKOUT':\n            return completeWorkout(workout);\n        case 'MOVE_EXERCISE':\n            return moveExercise(workout, action.payload);\n        default:\n            throw new Error();\n    }\n}","import { useReducer } from 'react';\n\nimport Actions from './Actions';\nimport AddExercise from './AddExercise';\nimport Exercise from './Exercise';\n\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport reducer from '../util/reducer';\nimport useTranslation from '../hooks/useTranslation';\nimport { Link } from 'react-router-dom';\n\nexport default function Workout(props) {\n    const { t } = useTranslation();\n    const { baseWorkout, readOnly = false } = props;\n\n    const [state, dispatch] = useReducer(reducer, baseWorkout);\n\n    return (\n        <div>\n            <header className='flex items-center'>\n                <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pt-4'>\n                    {state.name}\n                </h2>\n                <Link className='text-blue-500 ml-auto px-3 pt-4' to='/'>{t('close')}</Link>\n            </header>\n            <main>\n                {\n                    state.exercises.length > 0 ? (\n                        <ul className='flex flex-col space-y-4 p-3'>\n                            {\n                                state.exercises.map((exercise, i) =>\n                                <li key={exercise.id}>\n                                    <Exercise\n                                        id={exercise.id}\n                                        isFirst={i === 0}\n                                        isWorkoutComplete={state.isComplete}\n                                        isLast={i === state.exercises.length - 1}\n                                        isActive={exercise.id === state.activeExerciseId && !readOnly}\n                                        isComplete={!hasIncompleteSets(exercise)}\n                                        isReadOnly={readOnly}\n                                        name={exercise.name}\n                                        sets={exercise.sets}\n                                        defaultRPE={exercise.rpe}\n                                        activeSetId={state.activeSetId}\n                                        dispatch={dispatch}\n                                    />\n                                </li>)\n                            }\n                        </ul>\n                    ) : (\n                        <p className='px-3 my-2 text-indigo-500'>{t('no_exercise')}</p>\n                    )\n                }\n                {state.isComplete || readOnly || <AddExercise dispatch={dispatch} />}\n            </main>\n            <Actions\n                isReadOnly={readOnly}\n                state={state}\n                dispatch={dispatch}\n            />\n        </div>\n    );\n}","import { format } from 'date-fns';\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport { eraseLogEntry, workoutHistoryList } from '../util/workoutPersistence';\n\nexport default function WorkoutHistory() {\n    const [workoutsList, setWorkoutsList] = useState(workoutHistoryList());\n\n    const { t, language } = useTranslation();\n\n    const onClickRemove = (logKey) => {\n        eraseLogEntry(logKey);\n        setWorkoutsList(workoutsList.filter(w => w.persistenceKey !== logKey));\n    };\n\n    if (!workoutsList.length) {\n        return null;\n    }\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    return <div>\n        <h2 className='workout-name text-2xl text-blue-800 font-semibold px-3 pt-4'>\n            {t('history')}\n        </h2>\n        <ul className='flex flex-col space-y-4 p-3'>{\n            workoutsList.map((workout) => \n                <Link to={{\n                    pathname: '/viewWorkout',\n                    search: `?id=${workout.id}`\n                }} key={workout.id} className='p-2 border border-blue-200 relative flex flex-wrap bg-blue-50 rounded-xl'>\n                    <button\n                        onClick={() => onClickRemove(workout.persistenceKey)}\n                        className='absolute p-2 top-0 right-0 text-blue-400'><BiTrash /></button>\n                    <h2 className='text-blue-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {workout.name}</h2>\n                    <p className='text-blue-600 text-sm'>{format(new Date(workout.date), 'PP', formatOptions)}</p>\n                </Link>\n            )\n        }</ul>\n    </div>;\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { SingleInputForm } from '../ui';\n\nexport default function AddWorkout(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n\n    const { onAddWorkout = () => {} } = props;\n\n    const onSubmit = (ev) => {\n        ev.preventDefault();\n        onAddWorkout(name);\n        setName('');\n    };\n\n    return <SingleInputForm\n        onSubmit={onSubmit}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('workout_name')}\n        label={t('add_workout')}\n        value={name}\n    />;\n}","import { formatDistance } from 'date-fns';\nimport useTranslation from '../hooks/useTranslation';\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport { getLastRunDate } from '../util/workoutPersistence';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nexport default function WorkoutDisplay(props) {\n    const { name, onRemoveWorkout, id } = props;\n\n    const { t, language } = useTranslation();\n\n    const lastRun = getLastRunDate(id);\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    return (\n        <Link to={{ pathname: '/newWorkout', search: `?id=${id}` }} className='p-2 border border-indigo-200 relative flex flex-wrap bg-indigo-50 rounded-xl'>\n            <button onClick={() => onRemoveWorkout(id)} className='p-2 absolute top-0 right-0 text-indigo-400'><BiTrash /></button>\n            <h2 className='text-indigo-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {name}</h2>\n            {lastRun && (\n                <p className='text-indigo-600 text-sm'>\n                    {t('last_run')}: {formatDistance(lastRun, new Date(), formatOptions)}\n                </p>\n            )}\n        </Link>\n    );\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport AddWorkout from './AddWorkout';\nimport WorkoutDisplay from './WorkoutDisplay';\n\nimport genHash from '../util/genHash';\nimport {\n    addWorkoutToList,\n    getWorkoutList,\n    removeWorkoutFromList\n} from '../util/workoutPersistence';\n\nexport default function WorkoutList() {\n    const { t } = useTranslation();\n    const [workouts, setWorkouts] = useState(getWorkoutList());\n\n    const onAddWorkout = (name) => {\n        const workout = {\n            id: genHash(), name, exercises: []\n        };\n        addWorkoutToList(workout);\n        setWorkouts(workouts.concat([workout]));\n    };\n\n    const onRemoveWorkout = (id) => {\n        const willRemove = window.confirm(t('confirm_delete'));\n        if (willRemove) {\n            removeWorkoutFromList(id);\n            setWorkouts(workouts.filter(w => w.id !== id));\n\n            // Lazy solution to refresh history list\n            window.location.reload();\n        }\n    };\n\n    return (\n        <div>\n            <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pt-4'>\n                {t('workouts_list')}\n            </h2>\n            {\n                workouts.length > 0 ? (\n                    <ul className='flex flex-col space-y-4 p-3'>\n                        {\n                            workouts.map((workout) =>\n                                <WorkoutDisplay\n                                    key={workout.id}\n                                    id={workout.id}\n                                    name={workout.name}\n                                    onRemoveWorkout={onRemoveWorkout}\n                                />)\n                        }\n                    </ul>\n                ) : (\n                    <p className='px-3 my-2 text-indigo-500'>{t('no_workout')}</p>\n                )\n            }\n            <AddWorkout onAddWorkout={onAddWorkout} />\n        </div>\n    );\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Workout from './components/Workout';\nimport WorkoutHistory from './components/WorkoutHistory';\nimport WorkoutList from './components/WorkoutList';\n\nimport { loadWorkoutById } from './util/workoutPersistence';\n\nimport { Container } from './ui';\n\nfunction App() {\n    const renderWorkout = (routeProps) => {\n        const id = new URLSearchParams(routeProps.location.search).get('id');\n\n        const createNew = routeProps.match.path === '/newWorkout';\n        const workout = loadWorkoutById(id, createNew);\n\n        return <Workout baseWorkout={workout} readOnly={!createNew} />;\n    };\n    return (\n        <Container>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/'>\n                        <WorkoutList />\n                        <WorkoutHistory />\n                    </Route>\n                    <Route path='/viewWorkout' render={renderWorkout} />\n                    <Route path='/newWorkout' render={renderWorkout} />\n                </Switch>\n            </Router>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}