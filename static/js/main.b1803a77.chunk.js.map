{"version":3,"sources":["util/translations.js","hooks/useTranslation.js","util/hasIncompleteSets.js","util/timeFormat.js","ui.js","util/workoutPersistence.js","hooks/usePersistence.js","util/serializeWorkout.js","components/Actions.js","hooks/useTimer.js","util/hasIncompleteExercises.js","components/AddExercise.js","hooks/useNotification.js","components/SetDisplay.js","components/RPEScale.js","components/Exercise.js","util/genHash.js","util/reducer.js","components/Workout.js","components/WorkoutHistory.js","components/AddWorkout.js","components/WorkoutDisplay.js","components/WorkoutList.js","App.js","index.js"],"names":["en","pt","useTranslation","useState","language","setLanguage","useEffect","navigatorLanguage","window","navigator","split","includes","fallback","translations","t","key","hasIncompleteSets","exercise","sets","some","s","stage","timeFormat","seconds","Math","abs","pad","val","padStart","minutes","floor","hours","Container","props","children","className","Footer","Button","Icon","type","label","buttonProps","colorClasses","primary","neutral","success","colorClass","DecoratedBlock","TextLabel","small","sizeClass","SingleInputForm","onSubmit","value","onChange","placeholder","required","Block","isActive","List","ListItem","itemProps","ring","TitleH3","EmptyMessage","LightButton","BlockActions","Database","this","db","a","alert","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","storeName","data","transaction","store","objectStore","openCursor","cursor","persistenceKey","push","continue","get","operation","complete","logEntry","runInLogs","add","delete","workout","runInWorkouts","id","workoutId","getAllData","lastLogEntry","filter","entry","sort","b","date","getLastLogEntry","getData","Date","isComplete","duration","exercises","createNew","loadNewWorkout","loadWorkoutFromLogs","usePersistence","setDb","database","init","then","getWorkout","activeSetId","activeExerciseId","name","document","querySelector","textContent","trim","Number","dataset","$exercises","querySelectorAll","$exercise","$sets","$set","set","defaultDurationTime","defaultReps","defaultWeight","defaultRestTime","rpe","locales","CycleButton","onClick","labels","IDLE","ACTIVE","RESTING","COMPLETE","icons","BiPlay","BiPause","BiCheck","BiRefresh","Actions","state","dispatch","isReadOnly","history","useHistory","timer","initialTimer","setTimer","isRunning","setIsRunning","visibilityState","isBackground","setIsBackground","localStorage","play","pause","interval","setInterval","clearInterval","onVisibilityChange","addEventListener","removeEventListener","setItem","now","lastTimer","getItem","ellapsed","useTimer","setIsComplete","onGoBack","footerButtons","find","e","hasActiveSet","Boolean","hasExercises","length","hasSets","BiArrowBack","BiStar","BiTrophy","confirm","saveLogEntry","payload","exerciseId","setId","timerType","locale","formatOptions","data-value","format","AddExercise","setName","ev","preventDefault","target","useNotification","hasAskedPermission","setHasAskedPermission","hasNotificationPermission","setHasNotificationPermission","notify","requestNotificationPermission","Notification","requestPermission","permission","msg","body","vibrate","SetInputField","inputProps","labelText","formatFunction","isEdit","onToggleEdit","inputColorClass","danger","highlight","autoFocus","onFocus","select","onBlur","tabIndex","SetDisplay","durationTime","setDurationTime","restTime","setRestTime","reps","setReps","weight","setWeight","isEditTime","setIsEditTime","isEditReps","setIsEditReps","isEditWeight","setIsEditWeight","isEditRest","setIsEditRest","prevStageRef","useRef","current","numericInputProps","pattern","min","inputMode","baseType","data-id","defaultValue","RPEScale","defaultRPE","setValue","expand","setExpand","rpeTitles","rpeDescriptions","max","step","Array","from","keys","map","i","Exercise","isFirst","isLast","isWorkoutComplete","onActivateSet","moveExercise","factor","disabled","genHash","crypto","getRandomValues","Uint32Array","toString","reducer","action","cloneDeep","ex","hash","addNewSet","setIndex","findIndex","splice","removeSet","updateActiveSet","currentStage","nextStage","stages","index","getNextStageFor","nextIndex","updateSetStage","nextExerciseIdx","nextExercise","updateActiveExercise","addNewExercise","completeWorkout","exerciseIndex","newIndex","exerciseA","exerciseB","Error","Workout","useReducer","loadWorkoutLogById","to","WorkoutHistory","workoutsList","setWorkoutsList","onClickRemove","logKey","eraseLogEntry","w","pathname","search","AddWorkout","onAddWorkout","WorkoutDisplay","onRemoveWorkout","lastRun","setLastRun","lastEntry","formatDistance","WorkoutList","workouts","setWorkouts","saveWorkout","concat","eraseWorkout","App","renderWorkout","routeProps","URLSearchParams","location","match","path","basename","process","exact","render","ReactDOM","StrictMode","getElementById"],"mappings":"2VAAaA,EAAK,CACd,YAAe,wBACf,MAAS,QACT,MAAS,QACT,SAAY,WACZ,MAAS,QACT,KAAQ,OACR,KAAQ,OACR,QAAW,UACX,KAAQ,OACR,SAAY,WACZ,KAAQ,OACR,KAAQ,OACR,OAAU,SACV,eAAkB,gDAClB,cAAiB,wCACjB,cAAiB,sDACjB,KAAQ,OACR,cAAiB,gBACjB,eAAkB,iBAClB,gBAAmB,kBACnB,cAAiB,gBACjB,aAAgB,eAChB,cAAiB,gBACjB,QAAW,6BACX,WAAc,aACd,QAAW,UACX,YAAe,sBACf,YAAe,iBACf,YAAe,iBACf,YAAe,oBACf,YAAe,oBACf,YAAe,oBACf,YAAe,oBACf,YAAe,oBACf,YAAe,qBACf,aAAgB,sBAChB,WAAc,iEACd,WAAc,qEACd,WAAc,qEACd,WAAc,uEACd,WAAc,uEACd,WAAc,uEACd,WAAc,8DACd,WAAc,8DACd,WAAc,uEACd,YAAe,kEACf,IAAO,8BACP,cAAiB,gBACjB,aAAgB,eAChB,YAAe,cACf,eAAkB,iBAClB,WAAc,aACd,WAAc,sBACd,SAAY,kBACZ,cAAiB,uBAGRC,EAAK,CACd,YAAe,mCACf,MAAS,UACT,MAAS,SACT,SAAY,YACZ,MAAS,YACT,KAAQ,YACR,KAAQ,SACR,KAAQ,QACR,QAAW,eACX,KAAQ,MACR,SAAY,gBACZ,KAAQ,WACR,OAAU,OACV,eAAkB,8CAClB,cAAiB,4CACjB,cAAiB,gDACjB,KAAQ,SACR,cAAiB,gBACjB,eAAkB,kBAClB,gBAAmB,wBACnB,cAAiB,iBACjB,aAAgB,yBAChB,cAAiB,uBACjB,QAAW,2CACX,WAAc,mBACd,QAAW,qBACX,YAAe,uBACf,YAAe,iBACf,YAAe,iBACf,YAAe,qBACf,YAAe,qBACf,YAAe,qBACf,YAAe,qBACf,YAAe,qBACf,YAAe,6BACf,aAAgB,uBAChB,WAAc,oEACd,WAAc,qFACd,WAAc,qFACd,WAAc,uFACd,WAAc,uFACd,WAAc,uFACd,WAAc,mFACd,WAAc,mFACd,WAAc,6FACd,YAAe,4EACf,IAAO,wBACP,cAAiB,mBACjB,aAAgB,iBAChB,YAAe,mBACf,eAAkB,iBAClB,WAAc,8BACd,SAAY,4BACZ,WAAc,2CACd,cAAiB,qDC9GN,SAASC,IACpB,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACN,IAAMC,EAAoBC,OAAOC,UAAUL,SAASM,MAAM,KAAK,GAC3D,CAAC,KAAM,MAAMC,SAASJ,GACtBF,EAAYE,GAEZF,EAAY,QAEjB,IAEH,IAAMO,EAAWC,EAQjB,MAAO,CAAEC,EANC,SAACC,GAGP,OAFoBF,EAAaT,GAEdW,IAAQH,EAASG,IAAQA,GAGpCX,Y,WCvBD,SAASY,EAAkBC,GACtC,OAAOA,EAASC,KAAKC,MAAK,SAAAC,GAAC,MAAgB,aAAZA,EAAEC,SCDtB,SAASC,EAAWC,GAC/B,GAAIA,EAAU,EACV,MAAM,IAAN,OAAWD,EAAWE,KAAKC,IAAIF,KAEnC,IAAMG,EAAM,SAACC,GAAD,MAAS,UAAGA,EAAM,IAAKC,SAAS,EAAG,MACzCC,EAAUL,KAAKM,MAAMP,EAAU,IACrC,GAAgB,IAAZM,EACA,MAAM,GAAN,OAAUN,GAEd,GAAIM,GAAW,GAAI,CACf,IAAME,EAAQP,KAAKM,MAAMD,EAAU,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAmBL,EAAIG,GAAvB,YAAmCH,EAAIH,IAE3C,MAAM,GAAN,OAAUM,EAAV,YAAqBH,EAAIH,I,2BCbtB,SAASS,EAAUC,GACtB,IAAQC,EAAaD,EAAbC,SACR,OAAO,qBAAKC,UAAU,4FAAf,SAA4GD,IAGhH,SAASE,EAAOH,GACnB,IAAQC,EAAaD,EAAbC,SACR,OAAO,qBAAKC,UAAU,qDAAf,SACH,qBAAKA,UAAU,8FAAf,SAA8GD,MAI/G,SAASG,EAAOJ,GACnB,IAAQK,EAAgDL,EAAhDK,KAAR,EAAwDL,EAA1CM,YAAd,MAAmB,UAAnB,EAA8BC,EAA0BP,EAA1BO,MAAUC,EAAxC,YAAwDR,EAAxD,yBAEMS,EAAe,CACjBC,QAAS,0EACTC,QAAS,kFACTC,QAAS,+EAGPC,EAAaJ,EAAaH,IAASG,EAAaE,QAEtD,OACI,mDAAYH,GAAZ,IAAyBN,UAAS,kGAA6FW,GAA/H,UACKR,GAAQ,cAACA,EAAD,CAAMH,UAAU,iBAD7B,IACiDK,MAKlD,SAASO,EAAed,GAC3B,MAAuCA,EAA/BM,YAAR,MAAe,UAAf,EAA0BL,EAAaD,EAAbC,SAEpBQ,EAAe,CACjBC,QAAS,gCACTC,QAAS,oCACTC,QAAS,mCAGPC,EAAaJ,EAAaH,IAASG,EAAaE,QAEtD,OACI,qBAAKT,UAAS,mDAA8CW,GAA5D,SACKZ,IAKN,SAASc,EAAUf,GACtB,MAA+CA,EAAvCgB,aAAR,SAAuBd,EAAwBF,EAAxBE,UAAWD,EAAaD,EAAbC,SAE5BgB,EAAYD,EAAQ,UAAY,UAEtC,OACI,mBAAGd,UAAS,UAAKe,EAAL,qCAA2Cf,GAAvD,SAAqED,IAItE,SAASiB,EAAgBlB,GAC5B,IAAQmB,EAAkDnB,EAAlDmB,SAAUC,EAAwCpB,EAAxCoB,MAAOC,EAAiCrB,EAAjCqB,SAAUC,EAAuBtB,EAAvBsB,YAAaf,EAAUP,EAAVO,MAEhD,OACI,uBAAMY,SAAUA,EAAUjB,UAAU,sCAApC,UACI,qBAAKA,UAAU,yEAAf,SACI,uBAAOqB,UAAQ,EAACH,MAAOA,EAAOC,SAAUA,EACpCnB,UAAU,kIACVI,KAAK,OAAOgB,YAAaA,MAEjC,qBAAKpB,UAAU,wBAAf,SACI,yBACIA,UAAU,+BADd,cAC+CK,UAOxD,SAASiB,EAAMxB,GAClB,MAAuDA,EAA/CyB,gBAAR,WAAuDzB,EAA7BM,YAA1B,MAA+B,UAA/B,EAA0CL,EAAaD,EAAbC,SAEpCQ,EAAe,CACjBC,QAAQ,8BAAD,OAAgCe,EAAW,uBAAyB,IAC3Ed,QAAQ,kCAAD,OAAoCc,EAAW,yBAA2B,IACjFb,QAAQ,gCAAD,OAAkCa,EAAW,wBAA0B,KAG9EZ,EAAaJ,EAAaH,IAASG,EAAaE,QAEpD,OAAO,qBAAKT,UAAS,qBAAgBW,EAAhB,eAAd,SAAwDZ,IAG5D,SAASyB,EAAK1B,GACjB,IAAQC,EAAaD,EAAbC,SACR,OAAO,oBAAIC,UAAU,0BAAd,SAAyCD,IAG7C,SAAS0B,EAAS3B,GACrB,IAAQyB,EAAgDzB,EAAhDyB,SAAUxB,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,UAAc0B,EAA1C,YAAwD5B,EAAxD,qCACM6B,EAAOJ,EAAW,2CAA6C,GACrE,OAAO,+CAASG,GAAT,IAAoB1B,UAAS,kEAA6D2B,EAA7D,YAAqE3B,GAAlG,SAAgHD,KAGpH,SAAS6B,EAAQ9B,GACpB,IAAQC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,UAClB,OAAO,oBAAIA,UAAS,gDAA2CA,GAAxD,SAAsED,IAG1E,SAAS8B,EAAa/B,GACzB,IAAQC,EAAaD,EAAbC,SACR,OAAO,mBAAGC,UAAU,+BAAb,SAA6CD,IAGjD,SAAS+B,EAAYhC,GACxB,IAAQC,EAA6BD,EAA7BC,SAAaO,EAArB,YAAqCR,EAArC,cACA,OAAO,kDAAYQ,GAAZ,IAAyBN,UAAU,+BAAnC,SAAmED,KAGvE,SAASgC,EAAajC,GACzB,IAAQC,EAAaD,EAAbC,SACR,OAAO,qBAAKC,UAAU,kCAAf,SAAkDD,I,2DCrHxCiC,E,WACjB,aAAe,oBACXC,KAAKC,GAAK,K,+EAEd,sBAAAC,EAAA,yDACU,cAAe9D,OADzB,uBAEQ+D,MAAM,4CAFd,0CAKoBC,YAAO,iBAAkB,EAAG,CACxCC,QADwC,SAChCJ,GACCA,EAAGK,iBAAiBC,SAAS,aAC9BN,EAAGO,kBAAkB,WAAY,CAAEC,QAAS,OAE3CR,EAAGK,iBAAiBC,SAAS,SAC9BN,EAAGO,kBAAkB,OAAQ,CAAEE,eAAe,OAX9D,OAKIV,KAAKC,GALT,uD,qHAiBA,WAAiBU,GAAjB,uBAAAT,EAAA,6DACUU,EAAO,GAEPC,EAAcb,KAAKC,GAAGY,YAAYF,EAAW,YAC7CG,EAAQD,EAAYE,YAAYJ,GAJ1C,SAMuBG,EAAME,aAN7B,OAMQC,EANR,kBAOUA,EAPV,wBAQchC,EAAQgC,EAAOhC,OACfiC,eAAiBD,EAAOtE,IAC9BiE,EAAKO,KAAKlC,GAVlB,UAWuBgC,EAAOG,WAX9B,QAWQH,EAXR,uDAcWL,GAdX,iD,4EAiBA,SAAQD,EAAWhE,GAGf,OAFoBqD,KAAKC,GAAGY,YAAYF,EAAW,YACzBI,YAAYJ,GACzBU,IAAI1E,K,2BAGrB,SAAc2E,GACV,IAAMT,EAAcb,KAAKC,GAAGY,YAAY,WAAY,aAGpD,OADAS,EADcT,EAAYE,YAAY,aAE/BF,EAAYU,W,uBAGvB,SAAUD,GACN,IAAMT,EAAcb,KAAKC,GAAGY,YAAY,OAAQ,aAGhD,OADAS,EADcT,EAAYE,YAAY,SAE/BF,EAAYU,W,0BAGvB,SAAaC,GACT,OAAOxB,KAAKyB,WAAU,SAACX,GAAD,OAAWA,EAAMY,IAAIF,Q,2BAG/C,SAAc7E,GACV,OAAOqD,KAAKyB,WAAU,SAACX,GAAD,OAAWA,EAAMa,OAAOhF,Q,yBAGlD,SAAYiF,GACR,OAAO5B,KAAK6B,eAAc,SAACf,GAAD,OAAWA,EAAMY,IAAIE,Q,0BAGnD,SAAaE,GACT,OAAO9B,KAAK6B,eAAc,SAACf,GAAD,OAAWA,EAAMa,OAAOG,Q,oEAGtD,WAAsBC,GAAtB,iBAAA7B,EAAA,sEACuBF,KAAKgC,WAAW,QADvC,cACUpB,EADV,OAGUqB,EAAerB,EAChBsB,QAAO,SAAAC,GAAK,OAAIA,EAAML,KAAOC,KAC7BK,MAAK,SAAClC,EAAGmC,GAAJ,OAAUA,EAAEC,KAAOpC,EAAEoC,QALnC,kBAOWL,EAAa,IAPxB,gD,0HAUA,WAAqBH,GAArB,2BAAA5B,EAAA,sEAC+BF,KAAKuC,gBAAgBT,GADpD,UACUG,EADV,YAEoBA,EAFpB,qCAE0CjC,KAAKwC,QAAQ,WAAYV,GAFnE,2BAEUF,EAFV,MAIYU,KAAO,IAAIG,KACnBb,EAAQc,YAAa,EACrBd,EAAQe,SAAW,EANvB,cAQ2Bf,EAAQgB,WARnC,IAQI,2BAA0C,CAA/B/F,EAA+B,sBACpBA,EAASC,MADW,IACtC,2BAAiC,QACzBG,MAAQ,OAFsB,gCAR9C,uDAcW2E,GAdX,iD,+HAiBA,WAA0BE,GAA1B,yBAAA5B,EAAA,sEAC0BF,KAAKwC,QAAQ,OAAQV,GAD/C,QACUF,EADV,QAGYU,KAAO,IAAIG,KAAKb,EAAQU,MAHpC,cAK2BV,EAAQgB,WALnC,IAKI,2BAA0C,CAA/B/F,EAA+B,sBACpBA,EAASC,MADW,IACtC,2BAAiC,QACzBG,MAAQ,WAFsB,gCAL9C,uDAWW2E,GAXX,gD,uFAcA,SAAmBE,GAAuB,IAAnBe,IAAkB,yDACrC,OAAIA,EACO7C,KAAK8C,eAAehB,GAExB9B,KAAK+C,oBAAoBjB,O,KCtHzB,SAASkB,IACpB,MAAoBjH,mBAAS,MAA7B,mBAAOkE,EAAP,KAAWgD,EAAX,KAOA,OALA/G,qBAAU,WACN,IAAMgH,EAAW,IAAInD,EACrBmD,EAASC,OAAOC,MAAK,kBAAMH,EAAMC,QAClC,IAEIjD,ECXJ,SAASoD,EAAWvB,GACvB,IAAMF,EAAU,CACZE,KACAY,YAAY,EACZY,YAAa,KACbC,iBAAkB,MAGtB3B,EAAQU,KAAO,IAAIG,KACnBb,EAAQ4B,KAAOC,SAASC,cAAc,iBAAiBC,YAAYC,OACnEhC,EAAQe,SAAWkB,OACfJ,SAASC,cAAc,qBAAqBI,QAAQ7E,OAExD2C,EAAQgB,UAAY,GAEpB,IAf2B,EAerBmB,EAAaN,SAASO,iBAAiB,aAflB,cAgBHD,GAhBG,IAgB3B,2BAAoC,CAAC,IAA1BE,EAAyB,QAC1BpH,EAAW,GACjBA,EAAS2G,KAAOS,EAAUP,cACtB,kBACFC,YAAYC,OACd/G,EAASiF,GAAKmC,EAAUH,QAAQhC,GAChCjF,EAASC,KAAO,GAEhB,IARgC,EAQ1BoH,EAAQD,EAAUD,iBAAiB,gBART,cASbE,GATa,IAShC,2BAA0B,CAAC,IAAhBC,EAAe,QAChBC,EAAM,GACZA,EAAItC,GAAKqC,EAAKL,QAAQhC,GACtBsC,EAAIC,oBAAsBR,OACtBM,EAAKT,cAAc,gBAAgBI,QAAQ7E,OAE/CmF,EAAIE,YAAcT,OACdM,EAAKT,cAAc,gBAAgBI,QAAQ7E,OAE/CmF,EAAIG,cAAgBV,OAChBM,EAAKT,cAAc,kBAAkBI,QAAQ7E,OAEjDmF,EAAII,gBAAkBX,OAClBM,EAAKT,cAAc,gBAAgBI,QAAQ7E,OAE/CmF,EAAInH,MAAQ,WACZJ,EAASC,KAAKqE,KAAKiD,IAzBS,8BA2BhCvH,EAAS4H,IAAMZ,OAAOI,EAAUP,cAAc,QAAQzE,OACtD2C,EAAQgB,UAAUzB,KAAKtE,IA5CA,8BA+C3B,OAAO+E,EC1CX,IAAM8C,EAAU,CAAE7I,OAAID,QAyBtB,SAAS+I,EAAT,GAAqD,IAA9B1H,EAA6B,EAA7BA,MAA6B,IAAtB2H,eAAsB,MAAZ,aAAY,EACxClI,EAAMZ,IAANY,EAEFmI,EAAS,CACXC,KAAMpI,EAAE,SACRqI,OAAQrI,EAAE,QACVsI,QAAStI,EAAE,YACXuI,SAAUvI,EAAE,UAGVwI,EAAQ,CACVJ,KAAMK,IACNJ,OAAQK,IACRJ,QAASK,IACTJ,SAAUK,KAURlH,EAAQyG,EAAO5H,GACfiB,EAAOgH,EAAMjI,GACbkB,EATQ,CACV2G,KAAM,UACNC,OAAQ,UACRC,QAAS,UACTC,SAAU,WAKKhI,GAEnB,OACI,cAACgB,EAAD,CACI2G,QAASA,EACTzG,KAAMA,EACNC,MAAOA,EACPF,KAAMA,IAKH,SAASqH,EAAQ1H,GAAQ,IAAD,EAC3B2H,EAAgC3H,EAAhC2H,MAAOC,EAAyB5H,EAAzB4H,SAAUC,EAAe7H,EAAf6H,WAEzB,EAAwB5J,IAAhBY,EAAR,EAAQA,EAAGV,EAAX,EAAWA,SACLiE,EAAK+C,IAEL2C,EAAUC,cAEVC,EC1EK,WAAqC,IAAnBC,EAAkB,uDAAH,EAC5C,EAA0B/J,mBAAS+J,GAAnC,mBAAOD,EAAP,KAAcE,EAAd,KACA,EAAkChK,oBAAS,GAA3C,mBAAOiK,EAAP,KAAkBC,EAAlB,KACA,EAAwClK,mBACP,YAA7B0H,SAASyC,iBADb,mBAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAejK,OAAOiK,aAEtBC,EAAO,kBAAML,GAAa,IAC1BM,EAAQ,kBAAMN,GAAa,IAsCjC,OApCA/J,qBAAU,WACN,GAAI8J,IAAcG,EAAc,CAC5B,IAAMK,EAAWC,aAAY,WACzBV,GAAS,SAACrJ,GAAD,OAAOA,EAAI,OACrB,KACH,OAAO,kBAAMgK,cAAcF,OAEhC,CAACR,EAAWG,IAEfjK,qBAAU,WACN,IAAMyK,EAAqB,WACvBP,EACiC,YAA7B3C,SAASyC,kBAOjB,OAJA9J,OAAOwK,iBACH,mBAAoBD,GAGjB,kBAAMvK,OAAOyK,oBAChB,mBAAoBF,MAEzB,IAEHzK,qBAAU,WACN,GAAIiK,EACAE,EAAaS,QAAQ,YAAarE,KAAKsE,YACpC,GAAIf,EAAW,CAClB,IAAMgB,EAAYnD,OAAOwC,EAAaY,QAAQ,cAC9C,GAAID,GAAahB,EAAW,CACxB,IAAMkB,EAAW9J,KAAKM,OAAO+E,KAAKsE,MAAQC,GAAa,KACvDjB,GAAS,SAAArJ,GAAC,OAAIA,EAAIwK,SAG3B,CAACf,IAEG,CAAEG,OAAMC,QAAOtH,MAAO4G,EAAOG,aD2BtBmB,CAAS3B,EAAM7C,UAAY,GACzC,EAAoC5G,oBAAS,GAA7C,mBAAO2G,EAAP,KAAmB0E,EAAnB,KA4CMC,EAAW,WACb1B,EAAQxE,KAAK,MAGbmG,EAAgB,CAAC,KAAM,MAErBzK,EAAW2I,EAAM5C,UAAU2E,MAC7B,SAAAC,GAAC,OAAIA,EAAE1F,KAAO0D,EAAMjC,oBAGlBa,EAAMvH,EAAWA,EAASC,KAAKyK,MACjC,SAAAvK,GAAC,OAAIA,EAAE8E,KAAO0D,EAAMlC,eACpB,KAEEmE,EAAeC,QAAQtD,GACvBuD,EAAenC,EAAM5C,UAAUgF,OAAS,EACxCC,GAAU,UAAArC,EAAM5C,UAAU,UAAhB,eAAoB9F,KAAK8K,QAAS,EAE9ClC,GAOOhD,EANP4E,EAAc,GAAK,cAACrJ,EAAD,CACfE,KAAK,UACLC,MAAO1B,EAAE,QACTkI,QAASyC,EACTnJ,KAAM4J,MASHjC,EAAMG,WACTyB,IACAH,EAAc,GAAK,cAAC3C,EAAD,CACfC,QA7EQ,WAChBa,EAAS,CACLtH,KAAM,sBA4EFlB,MAAOmH,EAAInH,SAISuI,EE9JjB5C,UAAU7F,KAAKH,GFqKdA,EAAkBC,KAC1ByK,EAAc,GAAK,cAACrJ,EAAD,CACfE,KAAK,UACLC,MAAO1B,EAAE,mBACTwB,KAAM6J,IACNnD,QAxFa,WACrBa,EAAS,CACLtH,KAAM,0BA2ENmJ,EAAc,GAAK,cAACrJ,EAAD,CACfE,KAAK,UACLC,MAAO1B,EAAE,kBACTwB,KAAM8J,IACNpD,QA3EY,WAIpB,GAHiBxI,OAAO6L,QACpBvL,EAAE,kBAEN,CAGA,IAAMkF,EAAUyB,EAAWmC,EAAM1D,IAC/B,OAAF7B,QAAE,IAAFA,KAAIiI,aAAatG,GACjBwF,GAAc,GACdvB,EAAMU,QACNd,EAAS,CACLtH,KAAM,0BAyEHwJ,GAAgBE,IAAYnF,IACnC4E,EAAc,GAAK,cAACrJ,EAAD,CACfE,KAAK,UACLC,MAAO1B,EAAE,iBACTkI,QAzEe,WAAO,IAAD,MACzBiB,EAAMS,OACNb,EAAS,CACLtH,KAAM,oBACNgK,QAAS,CACLC,WAAU,UAAE5C,EAAM5C,UAAU,UAAlB,aAAE,EAAoBd,GAChCuG,MAAK,UAAE7C,EAAM5C,UAAU,UAAlB,iBAAE,EAAoB9F,KAAK,UAA3B,aAAE,EAA6BgF,MAG5C2D,EAAS,CACLtH,KAAM,sBAgEND,KAAMiH,OAId,IAAMmD,EAAYzC,EAAMG,YAActD,EAAa,UAAY,UACzD6F,EAAS7D,EAAQ1I,GACjBwM,EAAgB,GAClBD,IACAC,EAAcD,OAASA,GAG3B,IAAMjG,EAAOkD,EAAMlD,MAAQ,IAAIG,KAC/B,OACI,eAACzE,EAAD,WACI,eAACW,EAAD,CAAgBR,KAAMmK,EAAtB,UACI,cAAC,IAAD,CAAavK,UAAU,4BACvB,sBACIA,UAAU,mBACV0K,aAAY5C,EAAM5G,MAFtB,SAGE/B,EAAW2I,EAAM5G,SACnB,cAACL,EAAD,CAAWC,OAAK,EAAhB,SACK6J,YAAOpG,EAAM,KAAMkG,QAG3BlB,EAAc,GAXnB,IAWwBA,EAAc,MGxM/B,SAASqB,EAAY9K,GAChC,IAAQnB,EAAMZ,IAANY,EAER,EAA0BX,mBAAS,IAAnC,mBAAQyH,EAAR,KAAcoF,EAAd,KACQnD,EAAa5H,EAAb4H,SAWR,OAAO,cAAC1G,EAAD,CACHC,SAVkB,SAAC6J,GACnBA,EAAGC,iBACHF,EAAQ,IACRnD,EAAS,CACLtH,KAAM,eACNgK,QAAS,CAAE3E,WAMftE,SAAU,SAAA2J,GAAE,OAAID,EAAQC,EAAGE,OAAO9J,QAClCE,YAAazC,EAAE,iBACf0B,MAAO1B,EAAE,gBACTuC,MAAOuE,ICvBA,SAASwF,IACpB,MAAoDjN,oBAAS,GAA7D,mBAAOkN,EAAP,KAA2BC,EAA3B,KACA,EAGInN,oBAAS,GAHb,mBACIoN,EADJ,KAEIC,EAFJ,KAKA,KAAM,iBAAkBhN,QACpB,MAAO,CAEH6M,oBAAoB,EACpBI,OAAQ,aACRF,4BACAG,8BAA+B,cAbD,4CAsBtC,4BAAApJ,EAAA,sEAC6BqJ,aAAaC,oBAD1C,OACUC,EADV,OAEIL,EAA4C,YAAfK,GAC7BP,GAAsB,GAH1B,4CAtBsC,sBAmCtC,OAlBAhN,qBAAU,WACNkN,EAAyD,YAA5BG,aAAaE,YAC1CP,EAAkD,YAA5BK,aAAaE,cACpC,IAeI,CACHR,qBACAI,OATJ,SAAgBK,GACZ,IAAIH,aAAa,kBAAmB,CAChCI,KAAMD,EACNE,SAAS,KAObT,4BACAG,8BAvCkC,4CCI1C,SAASO,EAAchM,GACnB,IACIiM,EAQAjM,EARAiM,WACAC,EAOAlM,EAPAkM,UAFJ,EASIlM,EANAoB,aAHJ,MAGY,KAHZ,IASIpB,EALAmM,sBAJJ,MAIqB,SAAAzM,GAAG,OAAIA,GAJ5B,IASIM,EAJAM,YALJ,MAKW,UALX,IASIN,EAHAoM,cANJ,WASIpM,EAFAqM,oBAPJ,MAOmB,aAPnB,IASIrM,EADAqB,gBARJ,MAQe,aARf,EAmBMiL,EAAkB,CACpB5L,QAAS,+DACTC,QAAS,uEACTC,QAAS,mEACT2L,OAAQ,2DACRC,UAAW,gEAGf,OACI,wBAAOtM,UAjBa,CACpBQ,QAAS,gBACTC,QAAS,kBACTC,QAAS,iBACT2L,OAAQ,eACRC,UAAW,iBAYuBlM,GAAlC,UACI,cAACS,EAAD,CAAWb,UAAU,OAArB,SAA6BgM,IAEzBE,EACI,iDACQH,GADR,IAEI/L,UAAS,+EAA0EoM,EAAgBhM,IACnGc,MAAOA,EACPqL,WAAS,EACTC,QAAS,SAAA1B,GAAE,OAAIA,EAAGE,OAAOyB,UACzBC,OAAQ,kBAAMR,GAAUC,GAAa,IACrChL,SAAU,SAAA2J,GAAE,OAAI3J,EAAS2E,OAAOgF,EAAGE,OAAO9J,YAG9C,sBAAMwJ,aAAYxJ,EAAOyL,SAAU,EAAGH,QAAS,kBAAMN,GAAUC,GAAa,IAAOnM,UAAS,wEAAmEoM,EAAgBhM,IAA/K,SACK6L,EAAenG,OAAO5E,SAQhC,SAAS0L,EAAW9M,GAC/B,IACIiE,EAWAjE,EAXAiE,GACAsG,EAUAvK,EAVAuK,WAFJ,EAYIvK,EATAwG,2BAHJ,MAG0B,EAH1B,IAYIxG,EARA2G,uBAJJ,MAIsB,GAJtB,IAYI3G,EAPAyG,mBALJ,MAKkB,EALlB,IAYIzG,EANA0G,qBANJ,MAMoB,GANpB,IAYI1G,EALA6H,kBAPJ,WAYI7H,EAJA+G,eARJ,MAQc,aARd,IAYI/G,EAHA4H,gBATJ,MASe,aATf,IAYI5H,EAFAyB,gBAVJ,WAYIzB,EADAZ,aAXJ,MAWY,OAXZ,EAcA,EAAwClB,mBAASsI,GAAjD,mBAAOuG,EAAP,KAAqBC,EAArB,KACA,EAAgC9O,mBAASyI,GAAzC,mBAAOsG,EAAP,KAAiBC,EAAjB,KACA,EAAwBhP,mBAASuI,GAAjC,mBAAO0G,EAAP,KAAaC,EAAb,KACA,EAA4BlP,mBAASwI,GAArC,mBAAO2G,EAAP,KAAeC,EAAf,KAEA,EAAoCpP,oBAAS,GAA7C,mBAAOqP,EAAP,KAAmBC,EAAnB,KACA,EAAoCtP,oBAAS,GAA7C,mBAAOuP,EAAP,KAAmBC,EAAnB,KACA,EAAwCxP,oBAAS,GAAjD,oBAAOyP,GAAP,MAAqBC,GAArB,MACA,GAAoC1P,oBAAS,GAA7C,qBAAO2P,GAAP,MAAmBC,GAAnB,MAEQtC,GAAWL,IAAXK,OACFuC,GAAeC,mBAEbnP,GAAMZ,IAANY,EACRR,qBAAU,YACFkP,GAAcE,GAAcE,IAAgBE,KAC5CjG,EAAS,CACLtH,KAAM,oBACNgK,QAAS,CACLE,MAAOvG,EACPsG,kBAKb,CACC3C,EAAU2F,EAAYE,EAAYI,GAClCF,GAAc1J,EAAIsG,IAGtBlM,qBAAU,WACQ,SAAVe,GAA6C,aAAzB2O,GAAaE,UACjCjB,EAAgB,GAChBE,EAAYvG,GACZyG,EAAQ3G,GACR6G,EAAU5G,MAEf,CAACC,EAAiBF,EAAaC,EAAetH,IAEjDf,qBAAU,WACN0P,GAAaE,QAAU7O,IACxB,CAACA,IAEJf,qBAAU,WACN,GAAc,WAAVe,IAAuBmO,EAAY,CACnC,IAAM5E,EAAWC,aAAY,WACzBoE,GAAgB,SAACnO,GAAD,OAAOmH,OAAOnH,GAAK,OACpC,KACH,OAAO,kBAAMgK,cAAcF,OAEhC,CAACvJ,EAAOmO,IAEXlP,qBAAU,WACN,GAAc,YAAVe,IAAwByO,GAAY,CACpC,IAAMlF,EAAWC,aAAY,WACzBsE,GAAY,SAACrO,GAAD,OAAOmH,OAAOnH,GAAK,OAChC,KACH,OAAO,kBAAMgK,cAAcF,OAEhC,CAACvJ,EAAOuH,EAAiBkH,KAE5BxP,qBAAU,WACW,IAAb4O,GACAzB,GAAO3M,GAAE,eAEd,CAACoO,IAEJ,IAAMiB,GAAoB,CACtB5N,KAAM,SACN6N,QAAS,OACTC,IAAK,IACLC,UAAW,WAGTC,GAAqB,aAAVlP,EAAuB,UAAY,UASpD,OACI,eAACuC,EAAD,CACIoF,QAASA,EACTwH,UAAStK,EACT/D,UAAU,6BACVuB,SAAUA,IAAaoG,EAJ3B,UAMI,qBAAK3H,UAAU,cAAf,SACI,cAAC8L,EAAD,CACIC,WAAYiC,GACZ9B,OAAQmB,IAAe1F,EACvBwE,aAAcmB,EACdnM,SAAU2L,EACV5L,MAAO2L,EACPZ,eAAgB9M,EAChBiB,KAAgB,WAAVlB,EAAqB,YAAckP,GACzCpC,UAAWrN,GAAE,QACb2P,aAAa,QAGrB,qBAAKtO,UAAU,cAAf,SACI,cAAC8L,EAAD,CACIC,WAAYiC,GACZ9B,OAAQqB,IAAe5F,EACvBwE,aAAcqB,EACdrM,SAAU+L,EACVhM,MAAO+L,EACP7M,KAAMgO,GACNpC,UAAWrN,GAAE,QACb2P,aAAa,QAGrB,qBAAKtO,UAAU,gBAAf,SACI,cAAC8L,EAAD,CACIC,WAAYiC,GACZ9B,OAAQuB,KAAiB9F,EACzBwE,aAAcuB,GACdvM,SAAUiM,EACVlM,MAAOiM,EACP/M,KAAMgO,GACNpC,UAAWrN,GAAE,UACb2P,aAAa,SAGrB,qBAAKtO,UAAU,cAAf,SACI,cAAC8L,EAAD,CACIC,WAAYiC,GACZ9B,OAAQyB,KAAehG,EACvBwE,aAAcyB,GACdzM,SAAU6L,EACV9L,MAAO6L,EAAW,EAAIA,GAAaA,EACnC3M,KAzDE,YAAVlB,EACO6N,EAAW,EAAI,SAAW,YAE9BqB,GAuDKnC,eAAgB9M,EAChB6M,UAAWrN,GAAE,QACb2P,aAAc7H,SC7MnB,SAAS8H,EAASzO,GAC7B,MAAuCA,EAA/B0O,kBAAR,MAAqB,EAArB,EAAwB7G,EAAe7H,EAAf6H,WAEhBhJ,EAAMZ,IAANY,EACR,EAA0BX,mBAASwQ,GAAnC,mBAAOtN,EAAP,KAAcuN,EAAd,KACA,EAA4BzQ,oBAAS,GAArC,mBAAO0Q,EAAP,KAAeC,EAAf,KAEMC,EAAY,CACdjQ,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,eACFA,EAAE,iBAGAkQ,EAAkB,CACpBlQ,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,cACFA,EAAE,gBAGN,OACI,qCACI,oBAAIqB,UAAU,+BACd,eAACyB,EAAD,WACI,uBAAMzB,UAAU,mDAAhB,UAAoErB,EAAE,OACtE,wBAAQkI,QAAS,kBAAM8H,GAAWD,IAAlC,SAA2C,cAAC,IAAD,CAAc1O,UAAU,0BACnE,uBACIA,UAAS,kBAAakB,GACtBd,KAAK,QACL8N,IAAI,IACJhN,MAAOA,EACPC,SAAU,SAAA2J,GAAE,OAAInD,GAAc8G,EAAS3D,EAAGE,OAAO9J,QACjD4N,IAAI,KACJC,KAAK,MAET,oBAAI/O,UAAU,mEAAd,SACKgP,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,KAAI,SAACC,GAAD,OAC9B,6BAAaA,EAAI,GAARA,QAIbV,GACI,qCACI,oBAAI1O,UAAU,oCACd,oBAAIA,UAAU,kDAAd,SAAiE4O,EAAU1N,EAAQ,KACnF,mBAAGlB,UAAU,0BAAb,SAAwC6O,EAAgB3N,EAAQ,c,MC/C7E,SAASmO,GAASvP,GAC7B,IACIiE,EAYAjE,EAZAiE,GACA0B,EAWA3F,EAXA2F,KACA1G,EAUAe,EAVAf,KAHJ,EAaIe,EATAwP,eAJJ,WAaIxP,EARAyP,cALJ,WAaIzP,EAPAyB,gBANJ,WAaIzB,EANA6E,kBAPJ,WAaI7E,EALA6H,kBARJ,WAaI7H,EAJA0O,kBATJ,MASe,EATf,IAaI1O,EAHA0P,yBAVJ,WAaI1P,EAFAyF,mBAXJ,MAWkB,KAXlB,IAaIzF,EADA4H,gBAZJ,MAYe,aAZf,EAeQ/I,EAAMZ,IAANY,EAoBF8Q,EAAgB,SAACnF,GACnB5C,EAAS,CACLtH,KAAM,oBACNgK,QAAS,CACLC,WAAYtG,EACZuG,YAKNoF,EAAe,SAACC,GAClBjI,EAAS,CACLtH,KAAM,gBACNgK,QAAS,CACLC,WAAYtG,EACZ4L,aAKZ,OACI,sBAAK3P,UAAU,oBAAoBqO,UAAStK,EAA5C,UACKyL,GAAqB7H,GAClB,sBAAK3H,UAAU,yCAAf,UACI,wBACI4P,SAAUL,EACV1I,QAAS,kBAAM6I,EAAa,IAC5B1P,UAAU,0BAHd,SAIC,cAAC,IAAD,MACD,wBACI4P,SAAUN,EACVzI,QAAS,kBAAM6I,GAAc,IAC7B1P,UAAU,0BAHd,SAIC,cAAC,IAAD,SAGT,cAACsB,EAAD,CAAOC,SAAUA,EAAjB,SACI,eAACC,EAAD,WACI,eAACI,EAAD,CAAS5B,UAAU,gBAAnB,UACI,cAAC,IAAD,CAAYA,UAAU,wBAD1B,IACmDyF,KAElD1G,EAAK8K,OAAS9K,EAAKoQ,KAAI,SAAC9I,GAAD,OACpB,cAACuG,EAAD,CAEI7I,GAAIsC,EAAItC,GACRsG,WAAYtG,EACZuC,oBAAqBD,EAAIC,oBACzBE,cAAeH,EAAIG,cACnBC,gBAAiBJ,EAAII,gBACrBF,YAAaF,EAAIE,YACjBM,QAAS,kBAAM4I,EAAcpJ,EAAItC,KACjC0L,cAAeA,EACflO,SAAU8E,EAAItC,KAAOwB,EACrBoC,WAAYA,EACZzI,MAAOmH,EAAInH,MACXwI,SAAUA,GAZLrB,EAAItC,OAeb,cAAClC,EAAD,UAAelD,EAAE,aAGjBgG,GAAc5F,EAAK8K,OAAS,GAC5B,cAAC0E,EAAD,CACIC,WAAYA,EACZ7G,WAAYA,SAK3B6H,GAAqB7H,GAClB,eAAC5F,EAAD,WAEQR,GAA4B,OAAhBgE,GACZ,cAACzD,EAAD,CAAa+E,QA3Fb,WAChBa,EAAS,CACLtH,KAAM,aACNgK,QAAS,CACLC,WAAYtG,MAuFJ,SACKpF,EAAE,gBAGX,cAACmD,EAAD,CAAa+E,QAtFZ,WACba,EAAS,CACLtH,KAAM,UACNgK,QAAS,CACLC,WAAYtG,MAkFR,SAAiCpF,EAAE,mB,sBCjIxC,SAASkR,KACpB,OAAOC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAAGC,SAAS,ICmInD,SAASC,GAAQzI,EAAO0I,GACnC,IAAMtM,EAAUuM,qBAAU3I,GAE1B,OAAO0I,EAAO/P,MACV,IAAK,cACD,OAAO+P,EAAO/F,QAClB,IAAK,UACD,OAhIZ,SAAmBvG,EAASuG,GACxB,IAAQC,EAAeD,EAAfC,WAEFvL,EAAW+E,EAAQgB,UAAU2E,MAC/B,SAAA6G,GAAE,OAAIA,EAAGtM,KAAOsG,KAEdiG,EAAOT,KAMb,OALA/Q,EAASC,KAAT,uBACOD,EAASC,MADhB,CAEI,CAAEgF,GAAIuM,EAAMpR,MAAO,UAEvB2E,EAAQ0B,YAAc+K,EACfzM,EAoHQ0M,CAAU1M,EAASsM,EAAO/F,SACrC,IAAK,aACD,OAnHZ,SAAmBvG,EAASuG,GACxB,IAAQC,EAAeD,EAAfC,WAEFvL,EAAW+E,EAAQgB,UAAU2E,MAC/B,SAAA6G,GAAE,OAAIA,EAAGtM,KAAOsG,KAEdmG,EAAW1R,EAASC,KAAK0R,WAAU,SAAAxR,GAAC,OAAIA,EAAE8E,KAAOF,EAAQ0B,eAK/D,OAJkB,IAAdiL,IACA1R,EAASC,KAAK2R,OAAOF,EAAU,GAC/B3M,EAAQ0B,YAAc,MAEnB1B,EAwGQ8M,CAAU9M,EAASsM,EAAO/F,SACrC,IAAK,oBACD,OAvGZ,SAAyBvG,EAASuG,GAC9B,IAAQE,EAAsBF,EAAtBE,MAAOD,EAAeD,EAAfC,WAKf,OAHAxG,EAAQ0B,YAAc+E,EACtBzG,EAAQ2B,iBAAmB6E,EAEpBxG,EAiGQ+M,CAAgB/M,EAASsM,EAAO/F,SAC3C,IAAK,mBACD,OAhGZ,SAAwBvG,EAAS3E,GAC7B,IAAMJ,EAAW+E,EAAQgB,UAAU2E,MAC/B,SAAA6G,GAAE,OAAIA,EAAGtM,KAAOF,EAAQ2B,oBAEtBgL,EAAW1R,EAASC,KAAK0R,WAC3B,SAAAxR,GAAC,OAAIA,EAAE8E,KAAOF,EAAQ0B,eAE1B,IAAkB,IAAdiL,EACA,OAAO3M,EAGX,IAAMgN,EAAe/R,EAASC,KAAKyR,GAAUtR,MACvC4R,EAAY5R,GAzDtB,SAAyBA,GACrB,IAAM6R,EAAS,CAAC,OAAQ,SAAU,UAAW,YACvCC,EAAQD,EAAON,WAAU,SAAAxR,GAAC,OAAIA,IAAMC,KAE1C,OAAO6R,GAAQC,EAAQ,GAAKD,EAAOlH,QAqDRoH,CACvBJ,GAGJ,GAAkB,aAAdC,IAA6B5R,EAAO,CACpC,IAAMgS,GAAaV,EAAW,GAAK1R,EAASC,KAAK8K,OACjDhG,EAAQ0B,YAAc2L,EAAY,EAC9BpS,EAASC,MACJyR,EAAW,GAAK1R,EAASC,KAAK8K,QACjC9F,GACF,KASR,OANAjF,EAASC,KAAKyR,GAAUtR,MAAQ4R,EAE3BjS,EAAkBC,KACnB+E,EAAQ0B,YAAc,MAGnB1B,EAiEQsN,CAAetN,GAC1B,IAAK,oBACD,OAhEZ,SAA8BA,GAAU,IAAD,EAI7BuN,GAHoBvN,EAAQgB,UAAU4L,WACxC,SAAAJ,GAAE,OAAIA,EAAGtM,KAAOF,EAAQ2B,oBAEiB,GAAK3B,EAAQgB,UAAUgF,OAC9DwH,EAAexN,EAAQgB,UAAUuM,GAIvC,OAHAvN,EAAQ2B,iBAAmB6L,EAAatN,GACxCF,EAAQ0B,aAAc,UAAA8L,EAAatS,KAAK,UAAlB,eAAsBgF,KAAM,KAE3CF,EAuDQyN,CAAqBzN,GAChC,IAAK,eACD,OAtDZ,SAAwBA,EAASuG,GAC7B,IAAQ3E,EAAS2E,EAAT3E,KAMR,OALA5B,EAAQgB,UAAUzB,KAAK,CACnBW,GAAI8L,KACJpK,OACA1G,KAAM,KAEH8E,EA+CQ0N,CAAe1N,EAASsM,EAAO/F,SAC1C,IAAK,mBACD,OA9CZ,SAAyBvG,GAErB,OADAA,EAAQc,YAAa,EACdd,EA4CQ2N,CAAgB3N,GAC3B,IAAK,gBACD,OA3CZ,SAAsBA,EAASuG,GAC3B,IAAQC,EAAuBD,EAAvBC,WAAYsF,EAAWvF,EAAXuF,OAEd8B,EAAgB5N,EAAQgB,UAAU4L,WAAU,SAAAhH,GAAC,OAAIA,EAAE1F,KAAOsG,KAEhE,IAAuB,IAAnBoH,EACA,OAAO5N,EAGX,IAAM6N,EAAWrS,KAAK6O,IAClB7O,KAAKyP,IAAI,EAAG2C,EAAgB9B,GAAS9L,EAAQgB,UAAUgF,OAAS,GAG9D8H,EAAY9N,EAAQgB,UAAU4M,GAC9BG,EAAY/N,EAAQgB,UAAU6M,GAKpC,OAHA7N,EAAQgB,UAAU4M,GAAiBG,EACnC/N,EAAQgB,UAAU6M,GAAYC,EAEvB9N,EAwBQ6L,CAAa7L,EAASsM,EAAO/F,SACxC,QACI,MAAM,IAAIyH,OC7IP,SAASC,GAAQhS,GAC5B,IAAQnB,EAAMZ,IAANY,EACAoF,EAAyBjE,EAAzBiE,GAAR,EAAiCjE,EAArBgF,iBAAZ,SAEM5C,EAAK+C,IACX,EAGIgG,IAFAM,EADJ,EACIA,8BACAL,EAFJ,EAEIA,mBAEJ,EAA4B6G,qBAAW7B,GAAS,MAAhD,mBAAOrM,EAAP,KAAgB6D,EAAhB,KAWA,OATAvJ,qBAAU,WACJ,OAAF+D,QAAE,IAAFA,KAAI8P,mBAAmBjO,EAAIe,GAAWO,MAAK,SAACxB,GACxC6D,EAAS,CACLtH,KAAM,cACNgK,QAASvG,SAGlB,CAAC3B,IAEC2B,EAKD,gCACI,yBAAQ7D,UAAU,yBAAlB,UACI,oBAAIA,UAAU,gEAAd,SACK6D,EAAQ4B,OAEZyF,GACD,wBACIrE,QAAS0E,EACTvL,UAAU,gCAFd,SAII,cAAC,IAAD,CAAQA,UAAU,aAEtB,cAAC,IAAD,CAAMA,UAAU,6BAA6BiS,GAAG,IAAhD,SAAqDtT,EAAE,cAE3D,iCAEQkF,EAAQgB,UAAUgF,OAAS,EACvB,oBAAI7J,UAAU,8BAAd,SAEQ6D,EAAQgB,UAAUsK,KAAI,SAACrQ,EAAUsQ,GAAX,OACtB,6BACI,cAACC,GAAD,CACItL,GAAIjF,EAASiF,GACbuL,QAAe,IAANF,EACTI,kBAAmB3L,EAAQc,WAC3B4K,OAAQH,IAAMvL,EAAQgB,UAAUgF,OAAS,EACzCtI,SAAUzC,EAASiF,KAAOF,EAAQ2B,kBAAoBV,EACtDH,YAAa9F,EAAkBC,GAC/B6I,YAAa7C,GAAajB,EAAQc,WAClCc,KAAM3G,EAAS2G,KACf1G,KAAMD,EAASC,KACfyP,WAAY1P,EAAS4H,IACrBnB,YAAa1B,EAAQ0B,YACrBmC,SAAUA,KAbT5I,EAASiF,SAmB1B,mBAAG/D,UAAU,4BAAb,SAA0CrB,EAAE,iBAGnDkF,EAAQc,aAAeG,GAAa,cAAC8F,EAAD,CAAalD,SAAUA,OAEhE,cAACF,EAAD,CACIG,YAAa7C,EACb2C,MAAO5D,EACP6D,SAAUA,OAnDX,KC/Bf,IAAMf,GAAU,CAAE7I,OAAID,QAUP,SAASqU,KACpB,MAAwClU,mBAAS,IAAjD,mBAAOmU,EAAP,KAAqBC,EAArB,KAEMlQ,EAAK+C,IACX,EAAwBlH,IAAhBY,EAAR,EAAQA,EAAGV,EAAX,EAAWA,SAEXE,qBAAU,WACJ,OAAF+D,QAAE,IAAFA,KAAI+B,WAAW,QAAQoB,KAAK+M,KAC7B,CAAClQ,IAEJ,IAAMmQ,EAAa,uCAAG,WAAOC,GAAP,SAAAnQ,EAAA,sDAChB,OAAFD,QAAE,IAAFA,KAAIqQ,cAAcD,GAClBF,EACID,EAAahO,QAAO,SAAAqO,GAAC,OAAIA,EAAErP,iBAAmBmP,MAHhC,2CAAH,sDAOnB,IAAKH,EAAatI,OACd,OAAO,KAGX,IAAMW,EAAS7D,GAAQ1I,GACjBwM,EAAgB,GAKtB,OAJID,IACAC,EAAcD,OAASA,GAGpB,gCACH,oBAAIxK,UAAU,8DAAd,SACKrB,EAAE,aAEP,oBAAIqB,UAAU,8BAAd,SACImS,EAAahD,KAAI,SAACtL,GAAD,OACb,eAAC,IAAD,CAAMoO,GAAI,CACNQ,SAAU,eACVC,OAAO,OAAD,OAAS7O,EAAQV,iBACKnD,UAAU,2EAH1C,UAII,wBACI6G,QAAS,SAACiE,GACNuH,EAAcxO,EAAQV,gBACtB2H,EAAGC,kBAEP/K,UAAU,2CALd,SAKyD,cAAC,IAAD,MACzD,qBAAIA,UAAU,+BAAd,UAA6C,cAAC,IAAD,CAAYA,UAAU,yBAAnE,IAA8F6D,EAAQ4B,QACtG,mBAAGzF,UAAU,wBAAb,SAAsC2K,YAAO9G,EAAQU,KAAM,MAAOkG,OAR9D5G,EAAQV,wBC9CjB,SAASwP,GAAW7S,GAC/B,IAAQnB,EAAMZ,IAANY,EAER,EAA0BX,mBAAS,IAAnC,mBAAQyH,EAAR,KAAcoF,EAAd,KAEA,EAAoC/K,EAA5B8S,oBAAR,MAAuB,aAAvB,EAQA,OAAO,cAAC5R,EAAD,CACHC,SAPa,SAAC6J,GACdA,EAAGC,iBACH6H,EAAanN,GACboF,EAAQ,KAKR1J,SAAU,SAAA2J,GAAE,OAAID,EAAQC,EAAGE,OAAO9J,QAClCE,YAAazC,EAAE,gBACf0B,MAAO1B,EAAE,eACTuC,MAAOuE,I,aCZTkB,GAAU,CAAE7I,OAAID,QAEP,SAASgV,GAAe/S,GACnC,IAAQ2F,EAA8B3F,EAA9B2F,KAAMqN,EAAwBhT,EAAxBgT,gBAAiB/O,EAAOjE,EAAPiE,GAE/B,EAA8B/F,mBAAS,MAAvC,mBAAO+U,EAAP,KAAgBC,EAAhB,KACM9Q,EAAK+C,IACX,EAAwBlH,IAAhBY,EAAR,EAAQA,EAAGV,EAAX,EAAWA,SAEXE,oBAAS,sBAAC,sBAAAgE,EAAA,sDACJ,OAAFD,QAAE,IAAFA,KAAIsC,gBAAgBT,GAAIsB,MAAK,SAAA4N,GACrBA,GACAD,EAAWC,EAAU1O,SAHvB,2CAMP,CAACrC,IAEJ,IAAMsI,EAAS7D,GAAQ1I,GACjBwM,EAAgB,GAKtB,OAJID,IACAC,EAAcD,OAASA,GAIvB,eAAC,IAAD,CAAMyH,GAAI,CAAEQ,SAAU,cAAeC,OAAO,OAAD,OAAS3O,IAAQ/D,UAAU,+EAAtE,UACI,wBAAQ6G,QAAS,SAACiE,GACdgI,EAAgB/O,GAChB+G,EAAGC,kBACJ/K,UAAU,6CAHb,SAG0D,cAAC,IAAD,MAC1D,qBAAIA,UAAU,iCAAd,UAA+C,cAAC,IAAD,CAAYA,UAAU,yBAArE,IAAgGyF,KAC/FsN,GACG,oBAAG/S,UAAU,0BAAb,UACKrB,EAAE,YADP,KACsBuU,aAAeH,EAAS,IAAIrO,KAAQ+F,SClC3D,SAAS0I,KACpB,IAAMjR,EAAK+C,IACHtG,EAAMZ,IAANY,EACR,EAAgCX,mBAAS,IAAzC,mBAAOoV,EAAP,KAAiBC,EAAjB,KAEAlV,qBAAU,WACJ,OAAF+D,QAAE,IAAFA,KAAI+B,WAAW,YAAYoB,KAAKgO,KACjC,CAACnR,IAEJ,IAAM0Q,EAAY,uCAAG,WAAOnN,GAAP,eAAAtD,EAAA,yDACX0B,EAAU,CACZE,GAAI8L,KAAWpK,OAAMZ,UAAW,KAGhC3C,EALa,gCAMPA,EAAGoR,YAAYzP,GANR,OASjBwP,EAAYD,EAASG,OAAO,CAAC1P,KATZ,2CAAH,sDAYZiP,EAAe,uCAAG,WAAO/O,GAAP,SAAA5B,EAAA,0DACD9D,OAAO6L,QAAQvL,EAAE,mBADhB,oBAGZuD,EAHY,gCAINA,EAAGsR,aAAazP,GAJV,OAOhBsP,EAAYD,EAASjP,QAAO,SAAAqO,GAAC,OAAIA,EAAEzO,KAAOA,MAP1B,2CAAH,sDAWrB,OACI,gCACI,oBAAI/D,UAAU,gEAAd,SACKrB,EAAE,mBAGHyU,EAASvJ,OAAS,EACd,oBAAI7J,UAAU,8BAAd,SAEQoT,EAASjE,KAAI,SAACtL,GAAD,OACT,cAACgP,GAAD,CAEI9O,GAAIF,EAAQE,GACZ0B,KAAM5B,EAAQ4B,KACdqN,gBAAiBA,GAHZjP,EAAQE,SAQ7B,mBAAG/D,UAAU,4BAAb,SAA0CrB,EAAE,gBAGpD,cAACgU,GAAD,CAAYC,aAAcA,OCzBvBa,OA7Bf,WACI,IAAMC,EAAgB,SAACC,GACnB,IAAI5P,EAAK,IAAI6P,gBAAgBD,EAAWE,SAASnB,QAAQpP,IAAI,MAEvDwB,EAAsC,gBAA1B6O,EAAWG,MAAMC,KAMnC,MAJ8B,iBAA1BJ,EAAWG,MAAMC,OACjBhQ,EAAK+B,OAAO/B,IAGT,cAAC+N,GAAD,CAAS/N,GAAIA,EAAIe,UAAWA,KAGvC,OACI,cAACjF,EAAD,UACI,cAAC,IAAD,CAAQmU,SAAUC,kBAAlB,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,IAAlB,UACI,cAACZ,GAAD,IACA,cAACjB,GAAD,OAEJ,cAAC,IAAD,CAAO6B,KAAK,eAAeI,OAAQT,IACnC,cAAC,IAAD,CAAOK,KAAK,cAAcI,OAAQT,YCzBtDU,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,GAAD,MAEF3O,SAAS4O,eAAe,W","file":"static/js/main.b1803a77.chunk.js","sourcesContent":["export const en = {\r\n    'no_exercise': 'No exercises to list.',\r\n    'start': 'Start',\r\n    'close': 'Close',\r\n    'complete': 'Complete',\r\n    'reset': 'Reset',\r\n    'sets': 'Sets',\r\n    'reps': 'Reps',\r\n    'history': 'History',\r\n    'view': 'View',\r\n    'last_run': 'Last run',\r\n    'time': 'Time',\r\n    'rest': 'Rest',\r\n    'weight': 'Weight',\r\n    'confirm_delete': 'Are you sure you want to delete this workout?',\r\n    'save_progress': 'Would you like to save your progress?',\r\n    'erase_workout': 'Are you sure you want to erase the current workout?',\r\n    'back': 'Back',\r\n    'reset_workout': 'Reset workout',\r\n    'finish_workout': 'Finish Workout',\r\n    'finish_exercise': 'Finish exercise',\r\n    'start_workout': 'Start workout',\r\n    'add_exercise': 'Add exercise',\r\n    'exercise_name': 'Exercise name',\r\n    'no_sets': 'No sets for this exercise.',\r\n    'remove_set': 'Remove set',\r\n    'add_set': 'Add set',\r\n    'rpe_title_1': 'Very light activity',\r\n    'rpe_title_2': 'Light activity',\r\n    'rpe_title_3': 'Light activity',\r\n    'rpe_title_4': 'Moderate activity',\r\n    'rpe_title_5': 'Moderate activity',\r\n    'rpe_title_6': 'Moderate activity',\r\n    'rpe_title_7': 'Vigorous activity',\r\n    'rpe_title_8': 'Vigorous activity',\r\n    'rpe_title_9': 'Very hard activity',\r\n    'rpe_title_10': 'Max effort activity',\r\n    'rpe_desc_1': 'Hardly any exertion, but more than sleeping, watching TV, etc.',\r\n    'rpe_desc_2': 'Could mantain for hours. Easy to breathe and carry a conversation.',\r\n    'rpe_desc_3': 'Could mantain for hours. Easy to breathe and carry a conversation.',\r\n    'rpe_desc_4': 'Breathing heavily, can mantain a conversation, but more challenging.',\r\n    'rpe_desc_5': 'Breathing heavily, can mantain a conversation, but more challenging.',\r\n    'rpe_desc_6': 'Breathing heavily, can mantain a conversation, but more challenging.',\r\n    'rpe_desc_7': 'Almost uncofortable, short of breath, can speak a sentence.',\r\n    'rpe_desc_8': 'Almost uncofortable, short of breath, can speak a sentence.',\r\n    'rpe_desc_9': 'Very difficult to mantain, can barely breathe, can speak a few words',\r\n    'rpe_desc_10': 'Almost impossible to keep going. Out of breath, unable to talk.',\r\n    'rpe': 'Rate of perceived exertion ',\r\n    'workouts_list': 'Workouts list',\r\n    'workout_name': 'Workout name',\r\n    'add_workout': 'Add workout',\r\n    'remove_workout': 'Remove workout',\r\n    'no_workout': 'No workout',\r\n    'load_error': 'Could not load data',\r\n    'times_up': 'Rest time\\'s up!',\r\n    'persist_error': 'Could not save data'\r\n};\r\n\r\nexport const pt = {\r\n    'no_exercise': 'Nenhum exercício para listar.',\r\n    'start': 'Iniciar',\r\n    'close': 'Fechar',\r\n    'complete': 'Completar',\r\n    'reset': 'Reiniciar',\r\n    'sets': 'Séries',\r\n    'reps': 'Repet.',\r\n    'time': 'Tempo',\r\n    'history': 'Histórico',\r\n    'view': 'Ver',\r\n    'last_run': 'Última vez',\r\n    'rest': 'Descanso',\r\n    'weight': 'Peso',\r\n    'confirm_delete': 'Tem certeza que deseja remover este treino?',\r\n    'save_progress': 'Você gostaria de salvar seu progresso?',\r\n    'erase_workout': 'Tem certeza que deseja apagar o treino atual?',\r\n    'back': 'Voltar',\r\n    'reset_workout': 'Apagar treino',\r\n    'finish_workout': 'Concluir treino',\r\n    'finish_exercise': 'Concluir exercício',\r\n    'start_workout': 'Iniciar treino',\r\n    'add_exercise': 'Adicionar exercício',\r\n    'exercise_name': 'Nome do exercício',\r\n    'no_sets': 'Nenhuma série para este exercício.',\r\n    'remove_set': 'Remover série',\r\n    'add_set': 'Adicionar série',\r\n    'rpe_title_1': 'Atividade muito leve',\r\n    'rpe_title_2': 'Atividade leve',\r\n    'rpe_title_3': 'Atividade leve',\r\n    'rpe_title_4': 'Atividade moderada',\r\n    'rpe_title_5': 'Atividade moderada',\r\n    'rpe_title_6': 'Atividade moderada',\r\n    'rpe_title_7': 'Atividade vigorosa',\r\n    'rpe_title_8': 'Atividade vigorosa',\r\n    'rpe_title_9': 'Atividade muito difícil',\r\n    'rpe_title_10': 'Esforço máximo',\r\n    'rpe_desc_1': 'Quase nenhum esforço, porém mais que assistir TV ou dormir.',\r\n    'rpe_desc_2': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\r\n    'rpe_desc_3': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\r\n    'rpe_desc_4': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\r\n    'rpe_desc_5': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\r\n    'rpe_desc_6': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\r\n    'rpe_desc_7': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\r\n    'rpe_desc_8': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\r\n    'rpe_desc_9': 'Muito difícil de manter, mal consegue respirar, consegue dizer apenas algumas palavras.',\r\n    'rpe_desc_10': 'Impossível continuar, totalmente sem fôlego, não consegue falar.',\r\n    'rpe': 'Escala de esforço ',\r\n    'workouts_list': 'Lista de treinos',\r\n    'workout_name': 'Nome do treino',\r\n    'add_workout': 'Adicionar treino',\r\n    'remove_workout': 'Remover treino',\r\n    'no_workout': 'Nenhum treino disponível',\r\n    'times_up': 'Tempo de descanso acabou!',\r\n    'load_error': 'Não foi possível carregar os dados',\r\n    'persist_error': 'Não foi possível salvar as alterações'\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport * as translations from '../util/translations';\r\n\r\nexport default function useTranslation() {\r\n    const [language, setLanguage] = useState('en');\r\n\r\n    useEffect(() => {\r\n        const navigatorLanguage = window.navigator.language.split('-')[0];\r\n        if (['en', 'pt'].includes(navigatorLanguage)) {\r\n            setLanguage(navigatorLanguage);\r\n        } else {\r\n            setLanguage('en');\r\n        }\r\n    }, []);\r\n\r\n    const fallback = translations.en;\r\n\r\n    const t = (key) => {\r\n        const translation = translations[language];\r\n\r\n        return translation[key] || fallback[key] || key;\r\n    };\r\n\r\n    return { t, language };\r\n}","export default function hasIncompleteSets(exercise) {\r\n    return exercise.sets.some(s => s.stage !== 'COMPLETE');\r\n}","export default function timeFormat(seconds) {\r\n    if (seconds < 0) {\r\n        return `-${timeFormat(Math.abs(seconds))}`;\r\n    }\r\n    const pad = (val) => `${val % 60}`.padStart(2, '0');\r\n    const minutes = Math.floor(seconds / 60);\r\n    if (minutes === 0) {\r\n        return `${seconds}`;\r\n    }\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        return `${hours}:${pad(minutes)}:${pad(seconds)}`;\r\n    }\r\n    return `${minutes}:${pad(seconds)}`;\r\n}","export function Container(props) {\r\n    const { children } = props;\r\n    return <div className='container bg-white max-w-5xl min-h-screen m-auto border shadow-md place-self-center pb-24'>{children}</div>;\r\n}\r\n\r\nexport function Footer(props) {\r\n    const { children } = props;\r\n    return <div className='fixed flex justify-center bottom-0 w-screen left-0'>\r\n        <div className='flex justify-end items-center border-t border-indigo-200 bg-white w-full max-w-5xl p-3 pb-8'>{children}</div>\r\n    </div>;\r\n}\r\n\r\nexport function Button(props) {\r\n    const { Icon, type='neutral', label, ...buttonProps } = props;\r\n\r\n    const colorClasses = {\r\n        primary: 'bg-blue-500 ml-2 border-blue-600 focus:ring-blue-200 active:bg-blue-700',\r\n        neutral: 'bg-indigo-500 ml-2 border-indigo-600 focus:ring-indigo-200 active:bg-indigo-700',\r\n        success: 'bg-green-500 ml-2 border-green-600 focus:ring-green-200 active:bg-green-700'\r\n    };\r\n\r\n    const colorClass = colorClasses[type] || colorClasses.neutral;\r\n\r\n    return (\r\n        <button {...buttonProps} className={`border flex uppercase focus:ring-2 text-sm items-center text-white px-3 py-2 rounded-md ${colorClass}`}>\r\n            {Icon && <Icon className='mr-1 text-lg' />} {label}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport function DecoratedBlock(props) {\r\n    const { type = 'neutral', children } = props;\r\n\r\n    const colorClasses = {\r\n        primary: 'border-blue-500 text-blue-700',\r\n        neutral: 'border-indigo-500 text-indigo-700',\r\n        success: 'border-green-500 text-green-700'\r\n    };\r\n\r\n    const colorClass = colorClasses[type] || colorClasses.neutral;\r\n\r\n    return (\r\n        <div className={`text-xl mr-auto border-l-2 pl-2 bg-white ${colorClass}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TextLabel(props) {\r\n    const { small = false, className, children } = props;\r\n\r\n    const sizeClass = small ? 'text-xs' : 'text-sm';\r\n\r\n    return (\r\n        <p className={`${sizeClass} uppercase tracking-wider ${className}`}>{children}</p>\r\n    );\r\n}\r\n\r\nexport function SingleInputForm(props) {\r\n    const { onSubmit, value, onChange, placeholder, label } = props;\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className='m-3 pt-3 border-t border-indigo-200'>\r\n            <div className='flex p-2 items-center bg-indigo-50 rounded-xl border border-indigo-200'>\r\n                <input required value={value} onChange={onChange}\r\n                    className='text-indigo-800 px-2 w-2 flex-1 py-1 rounded border border-indigo-200 placeholder-indigo-400 focus:ring-2 focus:ring-indigo-200'\r\n                    type='text' placeholder={placeholder} />\r\n            </div>\r\n            <div className='flex justify-end mt-1'>\r\n                <button\r\n                    className='text-indigo-500 text-sm px-1'> {label}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport function Block(props) {\r\n    const { isActive = false, type='neutral', children } = props;\r\n\r\n    const colorClasses = {\r\n        primary: `border-blue-200 bg-blue-50 ${isActive ? 'ring-2 ring-blue-200' : ''}`,\r\n        neutral: `border-indigo-200 bg-indigo-50 ${isActive ? 'ring-2 ring-indigo-200' : ''}`,\r\n        success: `border-green-200 bg-green-50 ${isActive ? 'ring-2 ring-green-200' : ''}`,\r\n    };\r\n\r\n    let colorClass = colorClasses[type] || colorClasses.neutral;\r\n\r\n    return <div className={`p-2 border ${colorClass} rounded-xl`}>{children}</div>;\r\n}\r\n\r\nexport function List(props) {\r\n    const { children } = props;\r\n    return <ul className='flex flex-col space-y-3'>{children}</ul>;\r\n}\r\n\r\nexport function ListItem(props) {\r\n    const { isActive, children, className, ...itemProps } = props;\r\n    const ring = isActive ? 'ring-2 ring-indigo-200 border-indigo-400' : '';\r\n    return <div {...itemProps} className={`bg-white p-2 rounded-md shadow border border-indigo-200 ${ring} ${className}`}>{children}</div>;\r\n}\r\n\r\nexport function TitleH3(props) {\r\n    const { children, className } = props;\r\n    return <h3 className={`text-lg font-semibold text-indigo-800 ${className}`}>{children}</h3>;\r\n}\r\n\r\nexport function EmptyMessage(props) {\r\n    const { children } = props;\r\n    return <p className='text-indigo-500 text-sm pb-1'>{children}</p>;\r\n}\r\n\r\nexport function LightButton(props) {\r\n    const { children, ...buttonProps } = props;\r\n    return <button {...buttonProps} className='text-indigo-500 text-sm px-1'>{children}</button>;\r\n}\r\n\r\nexport function BlockActions(props) {\r\n    const { children } = props;\r\n    return <div className='flex justify-end mt-1 space-x-4'>{children}</div>;\r\n}","import { openDB } from 'idb';\r\n\r\nexport default class Database {\r\n    constructor() {\r\n        this.db = null;\r\n    }\r\n    async init() {\r\n        if (!('indexedDB' in window)) {\r\n            alert('This app needs indexedDb support to run.');\r\n            return;\r\n        }\r\n        this.db = await openDB('workoutTracker', 1, {\r\n            upgrade(db) {\r\n                if (!db.objectStoreNames.contains('workouts')) {\r\n                    db.createObjectStore('workouts', { keyPath: 'id' });\r\n                }\r\n                if (!db.objectStoreNames.contains('logs')) {\r\n                    db.createObjectStore('logs', { autoIncrement: true });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async getAllData(storeName) {\r\n        const data = [];\r\n\r\n        const transaction = this.db.transaction(storeName, 'readonly');\r\n        const store = transaction.objectStore(storeName);\r\n\r\n        let cursor = await store.openCursor();\r\n        while(cursor) {\r\n            const value = cursor.value;\r\n            value.persistenceKey = cursor.key;\r\n            data.push(value);\r\n            cursor = await cursor.continue();\r\n        }\r\n\r\n        return data;  \r\n    }\r\n\r\n    getData(storeName, key) {\r\n        const transaction = this.db.transaction(storeName, 'readonly');\r\n        const store = transaction.objectStore(storeName);\r\n        return store.get(key);  \r\n    }\r\n\r\n    runInWorkouts(operation) {\r\n        const transaction = this.db.transaction('workouts', 'readwrite');\r\n        const store = transaction.objectStore('workouts');\r\n        operation(store);\r\n        return transaction.complete;  \r\n    }\r\n\r\n    runInLogs(operation) {\r\n        const transaction = this.db.transaction('logs', 'readwrite');\r\n        const store = transaction.objectStore('logs');\r\n        operation(store);\r\n        return transaction.complete;  \r\n    }\r\n\r\n    saveLogEntry(logEntry) {\r\n        return this.runInLogs((store) => store.add(logEntry));\r\n    }\r\n\r\n    eraseLogEntry(key) {\r\n        return this.runInLogs((store) => store.delete(key));\r\n    }\r\n\r\n    saveWorkout(workout) {\r\n        return this.runInWorkouts((store) => store.add(workout));\r\n    }\r\n\r\n    eraseWorkout(id) {\r\n        return this.runInWorkouts((store) => store.delete(id));\r\n    }\r\n\r\n    async getLastLogEntry(workoutId) {\r\n        const data = await this.getAllData('logs');\r\n\r\n        const lastLogEntry = data\r\n            .filter(entry => entry.id === workoutId)\r\n            .sort((a, b) => b.date - a.date);\r\n\r\n        return lastLogEntry[0];\r\n    }\r\n\r\n    async loadNewWorkout(id) {\r\n        const lastLogEntry = await this.getLastLogEntry(id);\r\n        const workout = lastLogEntry || await this.getData('workouts', id);\r\n\r\n        workout.date = new Date();\r\n        workout.isComplete = false;\r\n        workout.duration = 0;\r\n\r\n        for (const exercise of workout.exercises) {\r\n            for (const set of exercise.sets) {\r\n                set.stage = 'IDLE';\r\n            }\r\n        }\r\n\r\n        return workout;\r\n    }\r\n\r\n    async loadWorkoutFromLogs(id) {\r\n        const workout = await this.getData('logs', id);\r\n\r\n        workout.date = new Date(workout.date);\r\n\r\n        for (const exercise of workout.exercises) {\r\n            for (const set of exercise.sets) {\r\n                set.stage = 'COMPLETE';\r\n            }\r\n        }\r\n    \r\n        return workout;\r\n    }\r\n\r\n    loadWorkoutLogById(id, createNew = true) {\r\n        if (createNew) {\r\n            return this.loadNewWorkout(id);\r\n        }\r\n        return this.loadWorkoutFromLogs(id);\r\n    }\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport Database from '../util/workoutPersistence';\r\n\r\nexport default function usePersistence() {\r\n    const [db, setDb] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const database = new Database();\r\n        database.init().then(() => setDb(database));\r\n    }, []);\r\n\r\n    return db;\r\n}","export function getWorkout(id) {\r\n    const workout = {\r\n        id,\r\n        isComplete: true,\r\n        activeSetId: null,\r\n        activeExerciseId: null\r\n    };\r\n\r\n    workout.date = new Date();\r\n    workout.name = document.querySelector('.workout-name').textContent.trim();\r\n    workout.duration = Number(\r\n        document.querySelector('.workout-duration').dataset.value\r\n    );\r\n    workout.exercises = [];\r\n\r\n    const $exercises = document.querySelectorAll('.exercise');\r\n    for (const $exercise of $exercises) {\r\n        const exercise = {};\r\n        exercise.name = $exercise.querySelector(\r\n            '.exercise-name'\r\n        ).textContent.trim();\r\n        exercise.id = $exercise.dataset.id;\r\n        exercise.sets = [];\r\n\r\n        const $sets = $exercise.querySelectorAll('.set-display');\r\n        for (const $set of $sets) {\r\n            const set = {};\r\n            set.id = $set.dataset.id;\r\n            set.defaultDurationTime = Number(\r\n                $set.querySelector('.time .value').dataset.value\r\n            );\r\n            set.defaultReps = Number(\r\n                $set.querySelector('.reps .value').dataset.value\r\n            );\r\n            set.defaultWeight = Number(\r\n                $set.querySelector('.weight .value').dataset.value\r\n            );\r\n            set.defaultRestTime = Number(\r\n                $set.querySelector('.rest .value').dataset.value\r\n            );\r\n            set.stage = 'COMPLETE';\r\n            exercise.sets.push(set);\r\n        }\r\n        exercise.rpe = Number($exercise.querySelector('.rpe').value);\r\n        workout.exercises.push(exercise);\r\n    }\r\n\r\n    return workout;\r\n}\r\n\r\nexport default function serializeWorkout(id) {\r\n    return JSON.stringify(getWorkout(id));\r\n}","import { format } from 'date-fns';\r\n\r\nimport pt from 'date-fns/locale/pt-BR';\r\nimport en from 'date-fns/locale/en-US';\r\n\r\nconst locales = { pt, en };\r\n\r\nimport { useState } from 'react';\r\nimport useTranslation from '../hooks/useTranslation';\r\n\r\nimport {\r\n    BiArrowBack,\r\n    BiCheck,\r\n    BiPause,\r\n    BiPlay,\r\n    BiRefresh,\r\n    BiStar,\r\n    BiStopwatch,\r\n    BiTrophy\r\n} from 'react-icons/bi';\r\nimport hasIncompleteExercises from '../util/hasIncompleteExercises';\r\nimport hasIncompleteSets from '../util/hasIncompleteSets';\r\nimport timeFormat from '../util/timeFormat';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport { Button, DecoratedBlock, Footer, TextLabel } from '../ui';\r\nimport usePersistence from '../hooks/usePersistence';\r\nimport { getWorkout } from '../util/serializeWorkout';\r\nimport useTimer from '../hooks/useTimer';\r\n\r\nfunction CycleButton({ stage, onClick = () => {} }) {\r\n    const { t } = useTranslation();\r\n    \r\n    const labels = {\r\n        IDLE: t('start'),\r\n        ACTIVE: t('rest'),\r\n        RESTING: t('complete'),\r\n        COMPLETE: t('reset')\r\n    };\r\n\r\n    const icons = {\r\n        IDLE: BiPlay,\r\n        ACTIVE: BiPause,\r\n        RESTING: BiCheck,\r\n        COMPLETE: BiRefresh\r\n    };\r\n\r\n    const types = {\r\n        IDLE: 'neutral',\r\n        ACTIVE: 'neutral',\r\n        RESTING: 'neutral',\r\n        COMPLETE: 'primary'\r\n    };\r\n\r\n    const label = labels[stage];\r\n    const Icon = icons[stage];\r\n    const type = types[stage];\r\n\r\n    return (\r\n        <Button\r\n            onClick={onClick}\r\n            type={type}\r\n            label={label}\r\n            Icon={Icon}\r\n        />\r\n    );\r\n}\r\n\r\nexport default function Actions(props) {\r\n    const { state, dispatch, isReadOnly } = props;\r\n\r\n    const { t, language } = useTranslation();\r\n    const db = usePersistence();\r\n\r\n    const history = useHistory();\r\n\r\n    const timer = useTimer(state.duration || 0);\r\n    const [isComplete, setIsComplete] = useState(false);\r\n\r\n    const updateStage = () => {\r\n        dispatch({\r\n            type: 'UPDATE_SET_STAGE'\r\n        });\r\n    };\r\n\r\n    const completeExercise = () => {\r\n        dispatch({\r\n            type: 'COMPLETE_EXERCISE'\r\n        });\r\n    };\r\n\r\n    const completeWorkout = () => {\r\n        const willSave = window.confirm(\r\n            t('save_progress')\r\n        );\r\n        if (!willSave) {\r\n            return;\r\n        }\r\n        const workout = getWorkout(state.id);\r\n        db?.saveLogEntry(workout);\r\n        setIsComplete(true);\r\n        timer.pause();\r\n        dispatch({\r\n            type: 'COMPLETE_WORKOUT'\r\n        });\r\n    };\r\n\r\n    const onStartWorkout = () => {\r\n        timer.play();\r\n        dispatch({\r\n            type: 'UPDATE_ACTIVE_SET',\r\n            payload: {\r\n                exerciseId: state.exercises[0]?.id,\r\n                setId: state.exercises[0]?.sets[0]?.id,\r\n            }\r\n        });\r\n        dispatch({\r\n            type: 'UPDATE_SET_STAGE'\r\n        });\r\n    };\r\n\r\n    const onGoBack = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    let footerButtons = [null, null];\r\n\r\n    const exercise = state.exercises.find(\r\n        e => e.id === state.activeExerciseId\r\n    );\r\n\r\n    const set = exercise ? exercise.sets.find(\r\n        s => s.id === state.activeSetId\r\n    ) : null;\r\n\r\n    const hasActiveSet = Boolean(set);\r\n    const hasExercises = state.exercises.length > 0;\r\n    const hasSets = state.exercises[0]?.sets.length > 0;\r\n\r\n    if (isReadOnly) {\r\n        footerButtons[0] = <Button\r\n            type='primary'\r\n            label={t('back')}\r\n            onClick={onGoBack}\r\n            Icon={BiArrowBack}\r\n        />;\r\n    } else if (isComplete) {\r\n        footerButtons[0] = <Button\r\n            type='primary'\r\n            label={t('back')}\r\n            onClick={onGoBack}\r\n            Icon={BiArrowBack}\r\n        />;\r\n    } else if (timer.isRunning) {\r\n        if (hasActiveSet) {\r\n            footerButtons[0] = <CycleButton\r\n                onClick={updateStage}\r\n                stage={set.stage}\r\n            />;\r\n        }\r\n    \r\n        if (!hasIncompleteExercises(state)) {\r\n            footerButtons[1] = <Button\r\n                type='success'\r\n                label={t('finish_workout')}\r\n                Icon={BiTrophy}\r\n                onClick={completeWorkout}\r\n            />;\r\n        } else if (!hasIncompleteSets(exercise)) {\r\n            footerButtons[1] = <Button\r\n                type='success'\r\n                label={t('finish_exercise')}\r\n                Icon={BiStar}\r\n                onClick={completeExercise}\r\n            />;\r\n        }\r\n    } else if (hasExercises && hasSets && !isComplete) {\r\n        footerButtons[0] = <Button\r\n            type='primary'\r\n            label={t('start_workout')}\r\n            onClick={onStartWorkout}\r\n            Icon={BiPlay}\r\n        />;\r\n    }\r\n\r\n    const timerType = timer.isRunning || !isComplete ? 'neutral' : 'success';\r\n    const locale = locales[language];\r\n    const formatOptions = {};\r\n    if (locale) {\r\n        formatOptions.locale = locale;\r\n    }\r\n\r\n    const date = state.date || new Date();\r\n    return (\r\n        <Footer>\r\n            <DecoratedBlock type={timerType}>\r\n                <BiStopwatch className='inline -mt-1 mr-1 -ml-1' />\r\n                <time\r\n                    className='workout-duration'\r\n                    data-value={timer.value}\r\n                >{timeFormat(timer.value)}</time>\r\n                <TextLabel small>\r\n                    {format(date, 'PP', formatOptions)}\r\n                </TextLabel>\r\n            </DecoratedBlock>\r\n            {footerButtons[0]} {footerButtons[1]}\r\n        </Footer>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\n\r\nexport default function useTimer(initialTimer = 0) {\r\n    const [timer, setTimer] = useState(initialTimer);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [isBackground, setIsBackground] = useState(\r\n        document.visibilityState !== 'visible'\r\n    );\r\n    const localStorage = window.localStorage;\r\n\r\n    const play = () => setIsRunning(true);\r\n    const pause = () => setIsRunning(false);\r\n\r\n    useEffect(() => {\r\n        if (isRunning && !isBackground) {\r\n            const interval = setInterval(() => {\r\n                setTimer((t) => t + 1);\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [isRunning, isBackground]);\r\n\r\n    useEffect(() => {\r\n        const onVisibilityChange = () => {\r\n            setIsBackground(\r\n                document.visibilityState !== 'visible'\r\n            );\r\n        };\r\n        window.addEventListener(\r\n            'visibilitychange', onVisibilityChange\r\n        );\r\n\r\n        return () => window.removeEventListener(\r\n            'visibilitychange', onVisibilityChange\r\n        );\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isBackground) {\r\n            localStorage.setItem('lastTimer', Date.now());\r\n        } else if (isRunning) {\r\n            const lastTimer = Number(localStorage.getItem('lastTimer'));\r\n            if (lastTimer && isRunning) {\r\n                const ellapsed = Math.floor((Date.now() - lastTimer) / 1000);\r\n                setTimer(t => t + ellapsed);\r\n            }\r\n        }\r\n    }, [isBackground]);\r\n\r\n    return { play, pause, value: timer, isRunning };\r\n}\r\n","import hasIncompleteSets from './hasIncompleteSets';\r\n\r\nexport default function hasIncompleteExercises(workout) {\r\n    return workout.exercises.some(hasIncompleteSets);\r\n}","import { useState } from 'react';\r\nimport useTranslation from '../hooks/useTranslation';\r\n\r\nimport { SingleInputForm } from '../ui';\r\n\r\nexport default function AddExercise(props) {\r\n    const { t } = useTranslation();\r\n\r\n    const [ name, setName ] = useState('');\r\n    const { dispatch } = props;\r\n\r\n    const onAddExercise = (ev) => {\r\n        ev.preventDefault();\r\n        setName('');\r\n        dispatch({\r\n            type: 'ADD_EXERCISE',\r\n            payload: { name }\r\n        });\r\n    };\r\n\r\n    return <SingleInputForm\r\n        onSubmit={onAddExercise}\r\n        onChange={ev => setName(ev.target.value)}\r\n        placeholder={t('exercise_name')}\r\n        label={t('add_exercise')}\r\n        value={name}\r\n    />;\r\n}","import { useEffect, useState } from 'react';\r\n\r\nexport default function useNotification() {\r\n    const [hasAskedPermission, setHasAskedPermission] = useState(false);\r\n    const [\r\n        hasNotificationPermission,\r\n        setHasNotificationPermission\r\n    ] = useState(false);\r\n\r\n    if (!('Notification' in window)) {\r\n        return {\r\n            // Behave as if permission was asked, but denied\r\n            hasAskedPermission: true,\r\n            notify: () => {},\r\n            hasNotificationPermission,\r\n            requestNotificationPermission: () => {}\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        setHasNotificationPermission(Notification.permission === 'granted');\r\n        setHasAskedPermission(Notification.permission !== 'default');\r\n    }, []);\r\n\r\n    async function requestNotificationPermission() {\r\n        const permission = await Notification.requestPermission();\r\n        setHasNotificationPermission(permission === 'granted');\r\n        setHasAskedPermission(true);\r\n    }\r\n\r\n    function notify(msg) {\r\n        new Notification('Workout tracker', {\r\n            body: msg,\r\n            vibrate: true\r\n        });\r\n    }\r\n\r\n    return {\r\n        hasAskedPermission,\r\n        notify,\r\n        hasNotificationPermission,\r\n        requestNotificationPermission\r\n    };\r\n}","import { useEffect, useRef, useState } from 'react';\r\nimport timeFormat from '../util/timeFormat';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport { ListItem, TextLabel } from '../ui';\r\nimport useNotification from '../hooks/useNotification';\r\n\r\nfunction SetInputField(props) {\r\n    const {\r\n        inputProps,\r\n        labelText,\r\n        value = null,\r\n        formatFunction = val => val,\r\n        type = 'neutral',\r\n        isEdit = false,\r\n        onToggleEdit = () => {},\r\n        onChange = () => {}\r\n    } = props;\r\n\r\n    const labelColorClass = {\r\n        primary: 'text-blue-800',\r\n        neutral: 'text-indigo-800',\r\n        success: 'text-green-800',\r\n        danger: 'text-red-800',\r\n        highlight: 'text-cyan-800'\r\n    };\r\n    \r\n    const inputColorClass = {\r\n        primary: 'text-blue-800 bg-blue-50 border-blue-200 focus:ring-blue-100',\r\n        neutral: 'text-indigo-800 bg-indigo-50 border-indigo-200 focus:ring-indigo-100',\r\n        success: 'text-green-800 bg-green-50 border-green-200 focus:ring-green-100',\r\n        danger: 'text-red-800 bg-red-50 border-red-200 focus:ring-red-100',\r\n        highlight: 'text-cyan-800 bg-cyan-50 border-cyan-200 focus:ring-cyan-100'\r\n    };\r\n\r\n    return (\r\n        <label className={labelColorClass[type]}>\r\n            <TextLabel className='mb-1'>{labelText}</TextLabel>\r\n            {\r\n                isEdit ? (\r\n                    <input\r\n                        {...inputProps}\r\n                        className={`block tabuler-nums w-full px-1 rounded shadow-sm border focus:ring-2 ${inputColorClass[type]}`}\r\n                        value={value}\r\n                        autoFocus\r\n                        onFocus={ev => ev.target.select()}\r\n                        onBlur={() => isEdit && onToggleEdit(false)}\r\n                        onChange={ev => onChange(Number(ev.target.value))}\r\n                    ></input>\r\n                ) : (\r\n                    <span data-value={value} tabIndex={0} onFocus={() => isEdit || onToggleEdit(true)} className={`value block tabuler-nums w-full px-1 rounded shadow-sm border ${inputColorClass[type]}`}>\r\n                        {formatFunction(Number(value))}\r\n                    </span>\r\n                )\r\n            }\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default function SetDisplay(props) {\r\n    const {\r\n        id,\r\n        exerciseId,\r\n        defaultDurationTime = 0,\r\n        defaultRestTime = 30,\r\n        defaultReps = 8,\r\n        defaultWeight = 10,\r\n        isReadOnly = false,\r\n        onClick = () => {},\r\n        dispatch = () => {},\r\n        isActive = true,\r\n        stage = 'IDLE'\r\n    } = props;\r\n\r\n    const [durationTime, setDurationTime] = useState(defaultDurationTime);\r\n    const [restTime, setRestTime] = useState(defaultRestTime);\r\n    const [reps, setReps] = useState(defaultReps);\r\n    const [weight, setWeight] = useState(defaultWeight);\r\n\r\n    const [isEditTime, setIsEditTime] = useState(false);\r\n    const [isEditReps, setIsEditReps] = useState(false);\r\n    const [isEditWeight, setIsEditWeight] = useState(false);\r\n    const [isEditRest, setIsEditRest] = useState(false);\r\n\r\n    const { notify } = useNotification();\r\n    const prevStageRef = useRef();\r\n\r\n    const { t } = useTranslation();\r\n    useEffect(() => {\r\n        if (isEditTime || isEditReps || isEditWeight || isEditRest) {\r\n            dispatch({\r\n                type: 'UPDATE_ACTIVE_SET',\r\n                payload: {\r\n                    setId: id,\r\n                    exerciseId\r\n                }\r\n            });\r\n\r\n        }\r\n    }, [\r\n        dispatch, isEditTime, isEditReps, isEditRest,\r\n        isEditWeight, id, exerciseId\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (stage === 'IDLE' && prevStageRef.current === 'COMPLETE') {\r\n            setDurationTime(0);\r\n            setRestTime(defaultRestTime);\r\n            setReps(defaultReps);\r\n            setWeight(defaultWeight);\r\n        }\r\n    }, [defaultRestTime, defaultReps, defaultWeight, stage]);\r\n\r\n    useEffect(() => {\r\n        prevStageRef.current = stage;        \r\n    }, [stage]);\r\n\r\n    useEffect(() => {\r\n        if (stage === 'ACTIVE' && !isEditTime) {\r\n            const interval = setInterval(() => {\r\n                setDurationTime((t) => Number(t) + 1);\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [stage, isEditTime]);\r\n\r\n    useEffect(() => {\r\n        if (stage === 'RESTING' && !isEditRest) {\r\n            const interval = setInterval(() => {\r\n                setRestTime((t) => Number(t) - 1);\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [stage, defaultRestTime, isEditRest]);\r\n\r\n    useEffect(() => {\r\n        if (restTime === 0) {\r\n            notify(t('times_up'));\r\n        }\r\n    }, [restTime]);\r\n\r\n    const numericInputProps = {\r\n        type: 'number',\r\n        pattern: '\\\\d+',\r\n        min: '0',\r\n        inputMode: 'numeric',\r\n    };\r\n\r\n    const baseType = stage === 'COMPLETE' ? 'success' : 'neutral';\r\n\r\n    const getRestingType = () => {\r\n        if (stage === 'RESTING') {\r\n            return restTime < 0 ? 'danger' : 'highlight';\r\n        }\r\n        return baseType;\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            onClick={onClick}\r\n            data-id={id}\r\n            className='set-display flex space-x-2'\r\n            isActive={isActive && !isReadOnly}\r\n        >\r\n            <div className='time flex-1'>\r\n                <SetInputField\r\n                    inputProps={numericInputProps}\r\n                    isEdit={isEditTime && !isReadOnly}\r\n                    onToggleEdit={setIsEditTime}\r\n                    onChange={setDurationTime}\r\n                    value={durationTime}\r\n                    formatFunction={timeFormat}\r\n                    type={stage === 'ACTIVE' ? 'highlight' : baseType}\r\n                    labelText={t('time')}\r\n                    defaultValue='0'\r\n                />\r\n            </div>\r\n            <div className='reps flex-1'>\r\n                <SetInputField\r\n                    inputProps={numericInputProps}\r\n                    isEdit={isEditReps && !isReadOnly}\r\n                    onToggleEdit={setIsEditReps}\r\n                    onChange={setReps}\r\n                    value={reps}\r\n                    type={baseType}\r\n                    labelText={t('reps')}\r\n                    defaultValue='8'\r\n                />\r\n            </div>\r\n            <div className='weight flex-1'>\r\n                <SetInputField\r\n                    inputProps={numericInputProps}\r\n                    isEdit={isEditWeight && !isReadOnly}\r\n                    onToggleEdit={setIsEditWeight}\r\n                    onChange={setWeight}\r\n                    value={weight}\r\n                    type={baseType}\r\n                    labelText={t('weight')}\r\n                    defaultValue='10'\r\n                />\r\n            </div>\r\n            <div className='rest flex-1'>\r\n                <SetInputField\r\n                    inputProps={numericInputProps}\r\n                    isEdit={isEditRest && !isReadOnly}\r\n                    onToggleEdit={setIsEditRest}\r\n                    onChange={setRestTime}\r\n                    value={restTime > 0 ? restTime : - restTime}\r\n                    type={getRestingType()}\r\n                    formatFunction={timeFormat}\r\n                    labelText={t('rest')}\r\n                    defaultValue={defaultRestTime}\r\n                />\r\n            </div>\r\n        </ListItem>\r\n    );\r\n}","import { BiInfoCircle } from 'react-icons/bi';\r\nimport { useState } from 'react';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport { ListItem } from '../ui';\r\n\r\nexport default function RPEScale(props) {\r\n    const { defaultRPE = 5, isReadOnly } = props;\r\n\r\n    const { t } = useTranslation();\r\n    const [value, setValue] = useState(defaultRPE);\r\n    const [expand, setExpand] = useState(false);\r\n\r\n    const rpeTitles = [\r\n        t('rpe_title_1'),\r\n        t('rpe_title_2'),\r\n        t('rpe_title_3'),\r\n        t('rpe_title_4'),\r\n        t('rpe_title_5'),\r\n        t('rpe_title_6'),\r\n        t('rpe_title_7'),\r\n        t('rpe_title_8'),\r\n        t('rpe_title_9'),\r\n        t('rpe_title_10')\r\n    ];\r\n\r\n    const rpeDescriptions = [\r\n        t('rpe_desc_1'),\r\n        t('rpe_desc_2'),\r\n        t('rpe_desc_3'),\r\n        t('rpe_desc_4'),\r\n        t('rpe_desc_5'),\r\n        t('rpe_desc_6'),\r\n        t('rpe_desc_7'),\r\n        t('rpe_desc_8'),\r\n        t('rpe_desc_9'),\r\n        t('rpe_desc_10')\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <hr className='border-t border-indigo-200'></hr>\r\n            <ListItem>\r\n                <span className='uppercase text-sm tracking-wider text-indigo-700'>{t('rpe')}\r\n                <button onClick={() => setExpand(!expand)}><BiInfoCircle className='inline ml-1 mb-1' /></button></span>\r\n                <input\r\n                    className={`rpe val-${value}`}\r\n                    type='range'\r\n                    min='1'\r\n                    value={value}\r\n                    onChange={ev => isReadOnly || setValue(ev.target.value)}\r\n                    max='10'\r\n                    step='1'\r\n                />\r\n                <ul className='tracks flex w-full justify-between text-xs -mt-1 text-indigo-700'>\r\n                    {Array.from(Array(10).keys()).map((i) => \r\n                        <li key={i}>{i + 1}</li>\r\n                    )}\r\n                </ul>\r\n                {\r\n                    expand && (\r\n                        <>\r\n                            <hr className='mt-2 border-t border-indigo-200' />\r\n                            <h4 className='text-xs font-semibold mb-1 mt-2 text-indigo-700'>{rpeTitles[value - 1]}</h4>\r\n                            <p className='text-xs text-indigo-700'>{rpeDescriptions[value - 1]}</p>\r\n                        </>\r\n                    )\r\n                }\r\n            </ListItem>\r\n        </>\r\n    );\r\n}","import { BiChevronDown, BiChevronUp, BiDumbbell } from 'react-icons/bi';\r\n\r\nimport SetDisplay from './SetDisplay';\r\nimport RPEScale from './RPEScale';\r\n\r\nimport '../range.css';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport {\r\n    Block,\r\n    EmptyMessage,\r\n    List,\r\n    TitleH3,\r\n    LightButton,\r\n    BlockActions\r\n} from '../ui';\r\n\r\nexport default function Exercise(props) {\r\n    const {\r\n        id,\r\n        name,\r\n        sets,\r\n        isFirst = false,\r\n        isLast = false,\r\n        isActive = false,\r\n        isComplete = false,\r\n        isReadOnly=false,\r\n        defaultRPE=5,\r\n        isWorkoutComplete = false,\r\n        activeSetId = null,\r\n        dispatch = () => {},\r\n    } = props;\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const onRemoveSet = () => {\r\n        dispatch({\r\n            type: 'REMOVE_SET',\r\n            payload: {\r\n                exerciseId: id\r\n            }\r\n        });\r\n    };\r\n\r\n    const onAddSet = () => {\r\n        dispatch({\r\n            type: 'ADD_SET',\r\n            payload: {\r\n                exerciseId: id\r\n            }\r\n        });\r\n    };\r\n\r\n    const onActivateSet = (setId) => {\r\n        dispatch({\r\n            type: 'UPDATE_ACTIVE_SET',\r\n            payload: {\r\n                exerciseId: id,\r\n                setId\r\n            }\r\n        });\r\n    };\r\n\r\n    const moveExercise = (factor) => {\r\n        dispatch({\r\n            type: 'MOVE_EXERCISE',\r\n            payload: {\r\n                exerciseId: id,\r\n                factor\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='exercise relative' data-id={id}>\r\n            {isWorkoutComplete || isReadOnly || (\r\n                <div className='absolute top-1 right-1 text-indigo-500'>\r\n                    <button\r\n                        disabled={isLast}\r\n                        onClick={() => moveExercise(1)}\r\n                        className='disabled:opacity-50 p-2'\r\n                    ><BiChevronDown /></button>\r\n                    <button\r\n                        disabled={isFirst}\r\n                        onClick={() => moveExercise(-1)}\r\n                        className='disabled:opacity-50 p-2'\r\n                    ><BiChevronUp /></button>\r\n                </div>\r\n            )}\r\n            <Block isActive={isActive}>\r\n                <List>\r\n                    <TitleH3 className='exercise-name'>\r\n                        <BiDumbbell className='inline text-xl mb-1'/> {name}\r\n                    </TitleH3>\r\n                    {sets.length ? sets.map((set) =>\r\n                        <SetDisplay\r\n                            key={set.id}\r\n                            id={set.id}\r\n                            exerciseId={id}\r\n                            defaultDurationTime={set.defaultDurationTime}\r\n                            defaultWeight={set.defaultWeight}\r\n                            defaultRestTime={set.defaultRestTime}\r\n                            defaultReps={set.defaultReps}\r\n                            onClick={() => onActivateSet(set.id)}\r\n                            onActivateSet={onActivateSet}\r\n                            isActive={set.id === activeSetId}\r\n                            isReadOnly={isReadOnly}\r\n                            stage={set.stage}\r\n                            dispatch={dispatch}\r\n                        ></SetDisplay>\r\n                    ) : (\r\n                        <EmptyMessage>{t('no_sets')}</EmptyMessage>\r\n                    )}\r\n                    {\r\n                        isComplete && sets.length > 0 &&\r\n                        <RPEScale\r\n                            defaultRPE={defaultRPE}\r\n                            isReadOnly={isReadOnly}\r\n                        />\r\n                    }\r\n                </List>\r\n            </Block>\r\n            {isWorkoutComplete || isReadOnly || (\r\n                <BlockActions>\r\n                    {\r\n                        isActive && activeSetId !== null &&\r\n                        <LightButton onClick={onRemoveSet}>\r\n                            {t('remove_set')}\r\n                        </LightButton>\r\n                    }\r\n                    <LightButton onClick={onAddSet}>{t('add_set')}</LightButton>\r\n                </BlockActions>\r\n            )}\r\n        </div>\r\n    );\r\n}","export default function genHash() {\r\n    return crypto.getRandomValues(new Uint32Array(1))[0].toString(16);\r\n}","import { cloneDeep } from 'lodash';\r\nimport genHash from './genHash';\r\nimport hasIncompleteSets from './hasIncompleteSets';\r\n\r\nfunction getNextStageFor(stage) {\r\n    const stages = ['IDLE', 'ACTIVE', 'RESTING', 'COMPLETE'];\r\n    const index = stages.findIndex(s => s === stage);\r\n\r\n    return stages[(index + 1) % stages.length];\r\n}\r\n\r\nfunction addNewSet(workout, payload) {\r\n    const { exerciseId } = payload;\r\n\r\n    const exercise = workout.exercises.find(\r\n        ex => ex.id === exerciseId\r\n    );\r\n    const hash = genHash();\r\n    exercise.sets = [\r\n        ...exercise.sets,\r\n        { id: hash, stage: 'IDLE' }\r\n    ];\r\n    workout.activeSetId = hash;\r\n    return workout;\r\n}\r\n\r\nfunction removeSet(workout, payload) {\r\n    const { exerciseId } = payload;\r\n\r\n    const exercise = workout.exercises.find(\r\n        ex => ex.id === exerciseId\r\n    );\r\n    const setIndex = exercise.sets.findIndex(s => s.id === workout.activeSetId);\r\n    if (setIndex !== -1) {\r\n        exercise.sets.splice(setIndex, 1);\r\n        workout.activeSetId = null;\r\n    }\r\n    return workout;\r\n}\r\n\r\nfunction updateActiveSet(workout, payload) {\r\n    const { setId, exerciseId } = payload;\r\n\r\n    workout.activeSetId = setId;\r\n    workout.activeExerciseId = exerciseId;\r\n\r\n    return workout;\r\n}\r\n\r\nfunction updateSetStage(workout, stage) {\r\n    const exercise = workout.exercises.find(\r\n        ex => ex.id === workout.activeExerciseId\r\n    );\r\n    const setIndex = exercise.sets.findIndex(\r\n        s => s.id === workout.activeSetId\r\n    );\r\n    if (setIndex === -1) {\r\n        return workout;\r\n    }\r\n\r\n    const currentStage = exercise.sets[setIndex].stage;\r\n    const nextStage = stage || getNextStageFor(\r\n        currentStage\r\n    );\r\n\r\n    if (nextStage === 'COMPLETE' && !stage) {\r\n        const nextIndex = (setIndex + 1) % exercise.sets.length;\r\n        workout.activeSetId = nextIndex > 0 ?\r\n            exercise.sets[\r\n                (setIndex + 1) % exercise.sets.length\r\n            ].id :\r\n            null;\r\n    }\r\n\r\n    exercise.sets[setIndex].stage = nextStage;\r\n\r\n    if (!hasIncompleteSets(exercise)) {\r\n        workout.activeSetId = null;\r\n    }\r\n\r\n    return workout;\r\n}\r\n\r\nfunction updateActiveExercise(workout) {\r\n    const activeExerciseIdx = workout.exercises.findIndex(\r\n        ex => ex.id === workout.activeExerciseId\r\n    );\r\n    const nextExerciseIdx = (activeExerciseIdx + 1) % workout.exercises.length;\r\n    const nextExercise = workout.exercises[nextExerciseIdx];\r\n    workout.activeExerciseId = nextExercise.id;\r\n    workout.activeSetId = nextExercise.sets[0]?.id || null;\r\n\r\n    return workout;\r\n}\r\n\r\nfunction addNewExercise(workout, payload) {\r\n    const { name } = payload;\r\n    workout.exercises.push({\r\n        id: genHash(),\r\n        name,\r\n        sets: []\r\n    });\r\n    return workout;\r\n}\r\n\r\nfunction completeWorkout(workout) {\r\n    workout.isComplete = true;\r\n    return workout;\r\n}\r\n\r\nfunction moveExercise(workout, payload) {\r\n    const { exerciseId, factor } = payload;\r\n\r\n    const exerciseIndex = workout.exercises.findIndex(e => e.id === exerciseId);\r\n\r\n    if (exerciseIndex === -1) {\r\n        return workout;\r\n    }\r\n\r\n    const newIndex = Math.min(\r\n        Math.max(0, exerciseIndex + factor), workout.exercises.length - 1\r\n    );\r\n\r\n    const exerciseA = workout.exercises[exerciseIndex];\r\n    const exerciseB = workout.exercises[newIndex];\r\n\r\n    workout.exercises[exerciseIndex] = exerciseB;\r\n    workout.exercises[newIndex] = exerciseA;\r\n\r\n    return workout;\r\n}\r\n\r\nexport default function reducer(state, action) {\r\n    const workout = cloneDeep(state);\r\n\r\n    switch(action.type) {\r\n        case 'SET_WORKOUT':\r\n            return action.payload;\r\n        case 'ADD_SET':\r\n            return addNewSet(workout, action.payload);\r\n        case 'REMOVE_SET':\r\n            return removeSet(workout, action.payload);\r\n        case 'UPDATE_ACTIVE_SET':\r\n            return updateActiveSet(workout, action.payload);\r\n        case 'UPDATE_SET_STAGE':\r\n            return updateSetStage(workout);\r\n        case 'COMPLETE_EXERCISE':\r\n            return updateActiveExercise(workout);\r\n        case 'ADD_EXERCISE':\r\n            return addNewExercise(workout, action.payload);\r\n        case 'COMPLETE_WORKOUT':\r\n            return completeWorkout(workout);\r\n        case 'MOVE_EXERCISE':\r\n            return moveExercise(workout, action.payload);\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import { useEffect, useReducer } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Actions from './Actions';\r\nimport AddExercise from './AddExercise';\r\nimport Exercise from './Exercise';\r\n\r\nimport hasIncompleteSets from '../util/hasIncompleteSets';\r\nimport reducer from '../util/reducer';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport useNotification from '../hooks/useNotification';\r\nimport usePersistence from '../hooks/usePersistence';\r\nimport { BiBell } from 'react-icons/bi';\r\n\r\nexport default function Workout(props) {\r\n    const { t } = useTranslation();\r\n    const { id, createNew = true } = props;\r\n\r\n    const db = usePersistence();\r\n    const {\r\n        requestNotificationPermission,\r\n        hasAskedPermission\r\n    } = useNotification();\r\n    const [workout, dispatch] = useReducer(reducer, null);\r\n\r\n    useEffect(() => {\r\n        db?.loadWorkoutLogById(id, createNew).then((workout) => {\r\n            dispatch({\r\n                type: 'SET_WORKOUT',\r\n                payload: workout\r\n            });\r\n        });\r\n    }, [db]);\r\n\r\n    if (!workout) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className='flex items-center pt-4'>\r\n                <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pr-2'>\r\n                    {workout.name}\r\n                </h2>\r\n                {hasAskedPermission ||\r\n                <button\r\n                    onClick={requestNotificationPermission}\r\n                    className='p-1 text-base text-indigo-800'\r\n                >\r\n                    <BiBell className='inline' />\r\n                </button>}\r\n                <Link className='text-blue-500 ml-auto px-3' to='/'>{t('close')}</Link>\r\n            </header>\r\n            <main>\r\n                {\r\n                    workout.exercises.length > 0 ? (\r\n                        <ul className='flex flex-col space-y-4 p-3'>\r\n                            {\r\n                                workout.exercises.map((exercise, i) =>\r\n                                <li key={exercise.id}>\r\n                                    <Exercise\r\n                                        id={exercise.id}\r\n                                        isFirst={i === 0}\r\n                                        isWorkoutComplete={workout.isComplete}\r\n                                        isLast={i === workout.exercises.length - 1}\r\n                                        isActive={exercise.id === workout.activeExerciseId && createNew}\r\n                                        isComplete={!hasIncompleteSets(exercise)}\r\n                                        isReadOnly={!createNew || workout.isComplete}\r\n                                        name={exercise.name}\r\n                                        sets={exercise.sets}\r\n                                        defaultRPE={exercise.rpe}\r\n                                        activeSetId={workout.activeSetId}\r\n                                        dispatch={dispatch}\r\n                                    />\r\n                                </li>)\r\n                            }\r\n                        </ul>\r\n                    ) : (\r\n                        <p className='px-3 my-2 text-indigo-500'>{t('no_exercise')}</p>\r\n                    )\r\n                }\r\n                {workout.isComplete || !createNew || <AddExercise dispatch={dispatch} />}\r\n            </main>\r\n            <Actions\r\n                isReadOnly={!createNew}\r\n                state={workout}\r\n                dispatch={dispatch}\r\n            />\r\n        </div>\r\n    );\r\n}","import { format } from 'date-fns';\r\nimport pt from 'date-fns/locale/pt-BR';\r\nimport en from 'date-fns/locale/en-US';\r\n\r\nconst locales = { pt, en };\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport usePersistence from '../hooks/usePersistence';\r\n\r\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function WorkoutHistory() {\r\n    const [workoutsList, setWorkoutsList] = useState([]);\r\n\r\n    const db = usePersistence();\r\n    const { t, language } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        db?.getAllData('logs').then(setWorkoutsList);\r\n    }, [db]);\r\n\r\n    const onClickRemove = async (logKey) => {\r\n        db?.eraseLogEntry(logKey);\r\n        setWorkoutsList(\r\n            workoutsList.filter(w => w.persistenceKey !== logKey)\r\n        );\r\n    };\r\n\r\n    if (!workoutsList.length) {\r\n        return null;\r\n    }\r\n\r\n    const locale = locales[language];\r\n    const formatOptions = {};\r\n    if (locale) {\r\n        formatOptions.locale = locale;\r\n    }\r\n\r\n    return <div>\r\n        <h2 className='workout-name text-2xl text-blue-800 font-semibold px-3 pt-4'>\r\n            {t('history')}\r\n        </h2>\r\n        <ul className='flex flex-col space-y-4 p-3'>{\r\n            workoutsList.map((workout) => \r\n                <Link to={{\r\n                    pathname: '/viewWorkout',\r\n                    search: `?id=${workout.persistenceKey}`\r\n                }} key={workout.persistenceKey} className='p-2 border border-blue-200 relative flex flex-wrap bg-blue-50 rounded-xl'>\r\n                    <button\r\n                        onClick={(ev) => {\r\n                            onClickRemove(workout.persistenceKey);\r\n                            ev.preventDefault();\r\n                        }}\r\n                        className='absolute p-2 top-0 right-0 text-blue-400'><BiTrash /></button>\r\n                    <h2 className='text-blue-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {workout.name}</h2>\r\n                    <p className='text-blue-600 text-sm'>{format(workout.date, 'PPp', formatOptions)}</p>\r\n                </Link>\r\n            )\r\n        }</ul>\r\n    </div>;\r\n}","import { useState } from 'react';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport { SingleInputForm } from '../ui';\r\n\r\nexport default function AddWorkout(props) {\r\n    const { t } = useTranslation();\r\n\r\n    const [ name, setName ] = useState('');\r\n\r\n    const { onAddWorkout = () => {} } = props;\r\n\r\n    const onSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        onAddWorkout(name);\r\n        setName('');\r\n    };\r\n\r\n    return <SingleInputForm\r\n        onSubmit={onSubmit}\r\n        onChange={ev => setName(ev.target.value)}\r\n        placeholder={t('workout_name')}\r\n        label={t('add_workout')}\r\n        value={name}\r\n    />;\r\n}","import { formatDistance } from 'date-fns';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport pt from 'date-fns/locale/pt-BR';\r\nimport en from 'date-fns/locale/en-US';\r\nimport usePersistence from '../hooks/usePersistence';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst locales = { pt, en };\r\n\r\nexport default function WorkoutDisplay(props) {\r\n    const { name, onRemoveWorkout, id } = props;\r\n\r\n    const [lastRun, setLastRun] = useState(null);\r\n    const db = usePersistence();\r\n    const { t, language } = useTranslation();\r\n\r\n    useEffect(async () => {\r\n        db?.getLastLogEntry(id).then(lastEntry => {\r\n            if (lastEntry) {\r\n                setLastRun(lastEntry.date);\r\n            }\r\n        });\r\n    }, [db]);\r\n\r\n    const locale = locales[language];\r\n    const formatOptions = {};\r\n    if (locale) {\r\n        formatOptions.locale = locale;\r\n    }\r\n\r\n    return (\r\n        <Link to={{ pathname: '/newWorkout', search: `?id=${id}` }} className='p-2 border border-indigo-200 relative flex flex-wrap bg-indigo-50 rounded-xl'>\r\n            <button onClick={(ev) => {\r\n                onRemoveWorkout(id);\r\n                ev.preventDefault();\r\n            }} className='p-2 absolute top-0 right-0 text-indigo-400'><BiTrash /></button>\r\n            <h2 className='text-indigo-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {name}</h2>\r\n            {lastRun && (\r\n                <p className='text-indigo-600 text-sm'>\r\n                    {t('last_run')}: {formatDistance(lastRun, new Date(), formatOptions)}\r\n                </p>\r\n            )}\r\n        </Link>\r\n    );\r\n}","import { useEffect, useState } from 'react';\r\nimport useTranslation from '../hooks/useTranslation';\r\nimport AddWorkout from './AddWorkout';\r\nimport WorkoutDisplay from './WorkoutDisplay';\r\n\r\nimport genHash from '../util/genHash';\r\nimport usePersistence from '../hooks/usePersistence';\r\n\r\nexport default function WorkoutList() {\r\n    const db = usePersistence();\r\n    const { t } = useTranslation();\r\n    const [workouts, setWorkouts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db?.getAllData('workouts').then(setWorkouts);\r\n    }, [db]);\r\n\r\n    const onAddWorkout = async (name) => {\r\n        const workout = {\r\n            id: genHash(), name, exercises: []\r\n        };\r\n\r\n        if (db) {\r\n            await db.saveWorkout(workout);\r\n        }\r\n\r\n        setWorkouts(workouts.concat([workout]));\r\n    };\r\n\r\n    const onRemoveWorkout = async (id) => {\r\n        const willRemove = window.confirm(t('confirm_delete'));\r\n        if (willRemove) {\r\n            if (db) {\r\n                await db.eraseWorkout(id);\r\n            }\r\n\r\n            setWorkouts(workouts.filter(w => w.id !== id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pt-4'>\r\n                {t('workouts_list')}\r\n            </h2>\r\n            {\r\n                workouts.length > 0 ? (\r\n                    <ul className='flex flex-col space-y-4 p-3'>\r\n                        {\r\n                            workouts.map((workout) =>\r\n                                <WorkoutDisplay\r\n                                    key={workout.id}\r\n                                    id={workout.id}\r\n                                    name={workout.name}\r\n                                    onRemoveWorkout={onRemoveWorkout}\r\n                                />)\r\n                        }\r\n                    </ul>\r\n                ) : (\r\n                    <p className='px-3 my-2 text-indigo-500'>{t('no_workout')}</p>\r\n                )\r\n            }\r\n            <AddWorkout onAddWorkout={onAddWorkout} />\r\n        </div>\r\n    );\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Workout from './components/Workout';\r\nimport WorkoutHistory from './components/WorkoutHistory';\r\nimport WorkoutList from './components/WorkoutList';\r\n\r\nimport { Container } from './ui';\r\n\r\nfunction App() {\r\n    const renderWorkout = (routeProps) => {\r\n        let id = new URLSearchParams(routeProps.location.search).get('id');\r\n\r\n        const createNew = routeProps.match.path === '/newWorkout';\r\n\r\n        if (routeProps.match.path === '/viewWorkout') {\r\n            id = Number(id); // Logs have numeric ids\r\n        }\r\n\r\n        return <Workout id={id} createNew={createNew} />;\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <WorkoutList />\r\n                        <WorkoutHistory />\r\n                    </Route>\r\n                    <Route path='/viewWorkout' render={renderWorkout} />\r\n                    <Route path='/newWorkout' render={renderWorkout} />\r\n                </Switch>\r\n            </Router>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}