{"version":3,"sources":["util/translations.js","hooks/useTranslation.js","util/hasIncompleteSets.js","util/timeFormat.js","ui.js","util/workoutPersistence.js","hooks/usePersistence.js","util/serializeWorkout.js","components/Actions.js","util/hasIncompleteExercises.js","components/AddExercise.js","hooks/useNotification.js","hooks/useTimer.js","components/SetDisplay.js","components/RPEScale.js","components/Exercise.js","util/genHash.js","util/reducer.js","components/Workout.js","components/WorkoutHistory.js","components/AddWorkout.js","components/WorkoutDisplay.js","components/WorkoutList.js","App.js","index.js"],"names":["en","pt","useTranslation","useState","language","setLanguage","useEffect","navigatorLanguage","window","navigator","split","includes","fallback","translations","t","key","hasIncompleteSets","exercise","sets","some","s","stage","timeFormat","seconds","Math","abs","pad","val","padStart","minutes","floor","hours","Container","props","children","className","Footer","Button","Icon","type","label","buttonProps","colorClasses","primary","neutral","success","colorClass","DecoratedBlock","TextLabel","small","sizeClass","SingleInputForm","onSubmit","value","onChange","placeholder","required","Block","isActive","List","ListItem","itemProps","ring","TitleH3","onClick","EmptyMessage","LightButton","BlockActions","Database","this","db","a","alert","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","storeName","data","transaction","store","objectStore","openCursor","cursor","persistenceKey","push","continue","get","operation","complete","logEntry","runInLogs","add","delete","workout","runInWorkouts","id","workoutId","getAllData","lastLogEntry","filter","entry","sort","b","date","fromLogs","getData","Date","isComplete","duration","exercises","put","createNew","loadNewWorkout","loadWorkoutFromLogs","usePersistence","setDb","database","init","then","getWorkout","activeSetId","activeExerciseId","name","document","querySelector","textContent","trim","Number","dataset","$exercises","querySelectorAll","$exercise","$sets","$set","set","defaultDurationTime","defaultReps","defaultWeight","defaultRestTime","rpe","locales","CycleButton","labels","IDLE","ACTIVE","RESTING","COMPLETE","icons","BiPlay","BiPause","BiCheck","BiRefresh","Actions","state","dispatch","isReadOnly","timer","loadedId","setIsComplete","footerButtons","find","e","hasActiveSet","Boolean","hasExercises","length","hasSets","to","pathname","search","isRunning","BiStar","BiTrophy","confirm","saveLogEntry","pause","play","payload","exerciseId","setId","timerType","locale","formatOptions","data-value","format","AddExercise","setName","ev","preventDefault","target","useNotification","hasAskedPermission","setHasAskedPermission","hasNotificationPermission","setHasNotificationPermission","notify","requestNotificationPermission","Notification","requestPermission","permission","msg","body","vibrate","useTimer","timerId","initialTimer","increment","setTimer","setIsRunning","visibilityState","isBackground","setIsBackground","sessionStorage","interval","setInterval","max","clearInterval","onVisibilityChange","addEventListener","removeEventListener","setItem","now","lastTimer","getItem","ellapsed","SetInputField","inputProps","labelText","formatFunction","isEdit","onToggleEdit","inputColorClass","danger","highlight","autoFocus","onFocus","select","onBlur","tabIndex","SetDisplay","exerciseType","durationTimer","restTimer","notifiedDuration","setNotifiedDuration","notifiedRest","setNotifiedRest","reps","setReps","weight","setWeight","isEditTime","setIsEditTime","isEditReps","setIsEditReps","isEditWeight","setIsEditWeight","isEditRest","setIsEditRest","prevStageRef","useRef","current","isFinite","numericInputProps","pattern","min","inputMode","baseType","getTypeForTimer","baseStage","data-id","defaultValue","RPEScale","defaultRPE","setValue","expand","setExpand","rpeTitles","rpeDescriptions","step","Array","from","keys","map","i","Exercise","isFirst","isLast","defaultType","isWorkoutComplete","setType","onActivateSet","moveExercise","factor","typeIcons","cardio","data-type","disabled","newType","style","marginRight","genHash","crypto","getRandomValues","Uint32Array","toString","reducer","action","cloneDeep","ex","hash","addNewSet","setIndex","findIndex","splice","removeSet","updateActiveSet","currentStage","nextStage","stages","index","getNextStageFor","nextIndex","updateSetStage","exerciseIndex","updateExerciseType","nextExerciseIdx","nextExercise","updateActiveExercise","addNewExercise","completeWorkout","newIndex","exerciseA","exerciseB","removeExercise","Error","Workout","useReducer","loadWorkoutLogById","uiWorkout","saveWorkoutTemplate","WorkoutHistory","workoutsList","setWorkoutsList","onClickRemove","logKey","eraseLogEntry","w","sortedList","sortBy","valueOf","AddWorkout","onAddWorkout","WorkoutDisplay","onRemoveWorkout","lastRun","setLastRun","getLastLogEntry","lastEntry","formatDistance","WorkoutList","workouts","setWorkouts","saveWorkout","concat","eraseWorkout","App","renderWorkout","routeProps","URLSearchParams","location","match","path","basename","process","exact","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.080b5b58.chunk.js","sourcesContent":["export const en = {\n    'no_exercise': 'No exercises to list.',\n    'start': 'Start',\n    'close': 'Close',\n    'complete': 'Complete',\n    'reset': 'Reset',\n    'sets': 'Sets',\n    'reps': 'Reps',\n    'history': 'History',\n    'view': 'View',\n    'last_run': 'Last run',\n    'time': 'Time',\n    'rest': 'Rest',\n    'weight': 'Weight',\n    'confirm_delete': 'Are you sure you want to delete this workout?',\n    'save_progress': 'Would you like to save your progress?',\n    'erase_workout': 'Are you sure you want to erase the current workout?',\n    'back': 'Back',\n    'reset_workout': 'Reset workout',\n    'finish_workout': 'Complete',\n    'finish_exercise': 'Finish exercise',\n    'start_workout': 'Start workout',\n    'add_exercise': 'Add exercise',\n    'exercise_name': 'Exercise name',\n    'no_sets': 'No sets for this exercise.',\n    'remove_set': 'Remove set',\n    'remove_exercise': 'Remove exercise',\n    'add_set': 'Add set',\n    'rpe_title_1': 'Very light activity',\n    'rpe_title_2': 'Light activity',\n    'rpe_title_3': 'Light activity',\n    'rpe_title_4': 'Moderate activity',\n    'rpe_title_5': 'Moderate activity',\n    'rpe_title_6': 'Moderate activity',\n    'rpe_title_7': 'Vigorous activity',\n    'rpe_title_8': 'Vigorous activity',\n    'rpe_title_9': 'Very hard activity',\n    'rpe_title_10': 'Max effort activity',\n    'rpe_desc_1': 'Hardly any exertion, but more than sleeping, watching TV, etc.',\n    'rpe_desc_2': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_3': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_4': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_5': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_6': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_7': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_8': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_9': 'Very difficult to mantain, can barely breathe, can speak a few words',\n    'rpe_desc_10': 'Almost impossible to keep going. Out of breath, unable to talk.',\n    'rpe': 'Rate of perceived exertion ',\n    'workouts_list': 'Workouts list',\n    'workout_name': 'Workout name',\n    'add_workout': 'Add workout',\n    'remove_workout': 'Remove workout',\n    'no_workout': 'No workout',\n    'load_error': 'Could not load data',\n    'times_up': 'Rest time\\'s up!',\n    'duration_up': 'Exercise time\\'s up!',\n    'persist_error': 'Could not save data',\n    'start_workout_from_history': 'Use workout'\n};\n\nexport const pt = {\n    'no_exercise': 'Nenhum exercício para listar.',\n    'start': 'Iniciar',\n    'close': 'Fechar',\n    'complete': 'Completar',\n    'reset': 'Reiniciar',\n    'sets': 'Séries',\n    'reps': 'Repet.',\n    'time': 'Tempo',\n    'history': 'Histórico',\n    'view': 'Ver',\n    'last_run': 'Última vez',\n    'rest': 'Descanso',\n    'weight': 'Peso',\n    'confirm_delete': 'Tem certeza que deseja remover este treino?',\n    'save_progress': 'Você gostaria de salvar seu progresso?',\n    'erase_workout': 'Tem certeza que deseja apagar o treino atual?',\n    'back': 'Voltar',\n    'reset_workout': 'Apagar treino',\n    'finish_workout': 'Completar',\n    'finish_exercise': 'Concluir exercício',\n    'start_workout': 'Iniciar treino',\n    'add_exercise': 'Adicionar exercício',\n    'exercise_name': 'Nome do exercício',\n    'no_sets': 'Nenhuma série para este exercício.',\n    'remove_set': 'Remover série',\n    'remove_exercise': 'Remover exercício',\n    'add_set': 'Adicionar série',\n    'rpe_title_1': 'Atividade muito leve',\n    'rpe_title_2': 'Atividade leve',\n    'rpe_title_3': 'Atividade leve',\n    'rpe_title_4': 'Atividade moderada',\n    'rpe_title_5': 'Atividade moderada',\n    'rpe_title_6': 'Atividade moderada',\n    'rpe_title_7': 'Atividade vigorosa',\n    'rpe_title_8': 'Atividade vigorosa',\n    'rpe_title_9': 'Atividade muito difícil',\n    'rpe_title_10': 'Esforço máximo',\n    'rpe_desc_1': 'Quase nenhum esforço, porém mais que assistir TV ou dormir.',\n    'rpe_desc_2': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_3': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_4': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_5': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_6': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_7': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_8': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_9': 'Muito difícil de manter, mal consegue respirar, consegue dizer apenas algumas palavras.',\n    'rpe_desc_10': 'Impossível continuar, totalmente sem fôlego, não consegue falar.',\n    'rpe': 'Escala de esforço ',\n    'workouts_list': 'Lista de treinos',\n    'workout_name': 'Nome do treino',\n    'add_workout': 'Adicionar treino',\n    'remove_workout': 'Remover treino',\n    'no_workout': 'Nenhum treino disponível',\n    'times_up': 'Descanso acabou!',\n    'duration_up': 'Exercício acabou!',\n    'load_error': 'Não foi possível carregar os dados',\n    'persist_error': 'Não foi possível salvar as alterações',\n    'start_workout_from_history': 'Usar treino'\n};\n","import { useEffect, useState } from 'react';\nimport * as translations from '../util/translations';\n\nexport default function useTranslation() {\n    const [language, setLanguage] = useState('en');\n\n    useEffect(() => {\n        const navigatorLanguage = window.navigator.language.split('-')[0];\n        if (['en', 'pt'].includes(navigatorLanguage)) {\n            setLanguage(navigatorLanguage);\n        } else {\n            setLanguage('en');\n        }\n    }, []);\n\n    const fallback = translations.en;\n\n    const t = (key) => {\n        const translation = translations[language];\n\n        return translation[key] || fallback[key] || key;\n    };\n\n    return { t, language };\n}","export default function hasIncompleteSets(exercise) {\n    return exercise.sets.some(s => s.stage !== 'COMPLETE');\n}","export default function timeFormat(seconds) {\n    if (seconds < 0) {\n        return `-${timeFormat(Math.abs(seconds))}`;\n    }\n    const pad = (val) => `${val % 60}`.padStart(2, '0');\n    const minutes = Math.floor(seconds / 60);\n    if (minutes === 0) {\n        return `${seconds}`;\n    }\n    if (minutes >= 60) {\n        const hours = Math.floor(minutes / 60);\n        return `${hours}:${pad(minutes)}:${pad(seconds)}`;\n    }\n    return `${minutes}:${pad(seconds)}`;\n}","export function Container(props) {\n    const { children } = props;\n    return <div className='container bg-white max-w-5xl min-h-screen m-auto border shadow-md place-self-center pb-24'>{children}</div>;\n}\n\nexport function Footer(props) {\n    const { children } = props;\n    return <div className='fixed flex justify-center bottom-0 w-screen left-0'>\n        <div className='flex justify-end items-center border-t border-indigo-200 bg-white w-full max-w-5xl p-3 pb-8'>{children}</div>\n    </div>;\n}\n\nexport function Button(props) {\n    const { Icon, type='neutral', label, ...buttonProps } = props;\n\n    const colorClasses = {\n        primary: 'bg-blue-500 ml-2 border-blue-600 focus:ring-blue-200 active:bg-blue-700',\n        neutral: 'bg-indigo-500 ml-2 border-indigo-600 focus:ring-indigo-200 active:bg-indigo-700',\n        success: 'bg-green-500 ml-2 border-green-600 focus:ring-green-200 active:bg-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <button {...buttonProps} className={`border flex uppercase focus:ring-2 text-sm items-center text-white px-3 py-2 rounded-md ${colorClass}`}>\n            {Icon && <Icon className='mr-1 text-lg' />} {label}\n        </button>\n    );\n}\n\nexport function DecoratedBlock(props) {\n    const { type = 'neutral', children } = props;\n\n    const colorClasses = {\n        primary: 'border-blue-500 text-blue-700',\n        neutral: 'border-indigo-500 text-indigo-700',\n        success: 'border-green-500 text-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <div className={`text-xl mr-auto border-l-2 pl-2 bg-white ${colorClass}`}>\n            {children}\n        </div>\n    );\n}\n\nexport function TextLabel(props) {\n    const { small = false, className, children } = props;\n\n    const sizeClass = small ? 'text-xs' : 'text-sm';\n\n    return (\n        <p className={`${sizeClass} uppercase tracking-wider ${className}`}>{children}</p>\n    );\n}\n\nexport function SingleInputForm(props) {\n    const { onSubmit, value, onChange, placeholder, label } = props;\n\n    return (\n        <form onSubmit={onSubmit} className='m-3 pt-3 border-t border-indigo-200'>\n            <div className='flex p-2 items-center bg-indigo-50 rounded-xl border border-indigo-200'>\n                <input required value={value} onChange={onChange}\n                    className='text-indigo-800 px-2 w-2 flex-1 py-1 rounded border border-indigo-200 placeholder-indigo-400 focus:ring-2 focus:ring-indigo-200'\n                    type='text' placeholder={placeholder} />\n            </div>\n            <div className='flex justify-end mt-1'>\n                <button\n                    className='text-indigo-500 text-sm px-1'> {label}\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport function Block(props) {\n    const { isActive = false, type='neutral', children } = props;\n\n    const colorClasses = {\n        primary: `border-blue-200 bg-blue-50 ${isActive ? 'ring-2 ring-blue-200' : ''}`,\n        neutral: `border-indigo-200 bg-indigo-50 ${isActive ? 'ring-2 ring-indigo-200' : ''}`,\n        success: `border-green-200 bg-green-50 ${isActive ? 'ring-2 ring-green-200' : ''}`,\n    };\n\n    let colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return <div className={`p-2 border ${colorClass} rounded-xl`}>{children}</div>;\n}\n\nexport function List(props) {\n    const { children } = props;\n    return <ul className='flex flex-col space-y-3'>{children}</ul>;\n}\n\nexport function ListItem(props) {\n    const { isActive, children, className, ...itemProps } = props;\n    const ring = isActive ? 'ring-2 ring-indigo-200 border-indigo-400' : '';\n    return <div {...itemProps} className={`bg-white p-2 rounded-md shadow border border-indigo-200 ${ring} ${className}`}>{children}</div>;\n}\n\nexport function TitleH3(props) {\n    const { children, className, onClick } = props;\n    return <button onClick={onClick} className={`text-lg self-start font-semibold text-indigo-800 select-none cursor-pointer ${className}`}>{children}</button>;\n}\n\nexport function EmptyMessage(props) {\n    const { children } = props;\n    return <p className='text-indigo-500 text-sm pb-1'>{children}</p>;\n}\n\nexport function LightButton(props) {\n    const { children, ...buttonProps } = props;\n    return <button {...buttonProps} className='text-indigo-500 text-sm px-1'>{children}</button>;\n}\n\nexport function BlockActions(props) {\n    const { children } = props;\n    return <div className='flex justify-end mt-1 space-x-4'>{children}</div>;\n}","import { openDB } from 'idb';\n\nexport default class Database {\n    constructor() {\n        this.db = null;\n    }\n    async init() {\n        if (!('indexedDB' in window)) {\n            alert('This app needs indexedDb support to run.');\n            return;\n        }\n        this.db = await openDB('workoutTracker', 1, {\n            upgrade(db) {\n                if (!db.objectStoreNames.contains('workouts')) {\n                    db.createObjectStore('workouts', { keyPath: 'id' });\n                }\n                if (!db.objectStoreNames.contains('logs')) {\n                    db.createObjectStore('logs', { autoIncrement: true });\n                }\n            }\n        });\n    }\n\n    async getAllData(storeName) {\n        const data = [];\n\n        const transaction = this.db.transaction(storeName, 'readonly');\n        const store = transaction.objectStore(storeName);\n\n        let cursor = await store.openCursor();\n        while(cursor) {\n            const value = cursor.value;\n            value.persistenceKey = cursor.key;\n            data.push(value);\n            cursor = await cursor.continue();\n        }\n\n        return data;  \n    }\n\n    getData(storeName, key) {\n        const transaction = this.db.transaction(storeName, 'readonly');\n        const store = transaction.objectStore(storeName);\n        return store.get(key);  \n    }\n\n    runInWorkouts(operation) {\n        const transaction = this.db.transaction('workouts', 'readwrite');\n        const store = transaction.objectStore('workouts');\n        operation(store);\n        return transaction.complete;  \n    }\n\n    runInLogs(operation) {\n        const transaction = this.db.transaction('logs', 'readwrite');\n        const store = transaction.objectStore('logs');\n        operation(store);\n        return transaction.complete;  \n    }\n\n    saveLogEntry(logEntry) {\n        return this.runInLogs((store) => store.add(logEntry));\n    }\n\n    eraseLogEntry(key) {\n        return this.runInLogs((store) => store.delete(key));\n    }\n\n    saveWorkout(workout) {\n        return this.runInWorkouts((store) => store.add(workout));\n    }\n\n    eraseWorkout(id) {\n        return this.runInWorkouts((store) => store.delete(id));\n    }\n\n    async getLastLogEntry(workoutId) {\n        const data = await this.getAllData('logs');\n\n        const lastLogEntry = data\n            .filter(entry => entry.id === workoutId)\n            .sort((a, b) => b.date - a.date);\n\n        return lastLogEntry[0];\n    }\n\n    async loadNewWorkout(id, fromLogs) {\n        const workout = await this.getData(\n            fromLogs ? 'logs' : 'workouts', id\n        );\n\n        workout.date = new Date();\n        workout.isComplete = false;\n        workout.duration = 0;\n\n        for (const exercise of workout.exercises) {\n            for (const set of exercise.sets) {\n                set.stage = 'IDLE';\n            }\n        }\n\n        return workout;\n    }\n\n    async loadWorkoutFromLogs(id) {\n        const workout = await this.getData('logs', id);\n\n        workout.date = new Date(workout.date);\n\n        for (const exercise of workout.exercises) {\n            for (const set of exercise.sets) {\n                set.stage = 'COMPLETE';\n            }\n        }\n\n        return workout;\n    }\n\n    async saveWorkoutTemplate(id, exercises) {\n        const workout = await this.getData('workouts', id);\n        workout.exercises = exercises;\n        return this.runInWorkouts((store) => store.put(workout));\n    }\n\n    loadWorkoutLogById(id, createNew = true, fromLogs = false) {\n        if (createNew) {\n            return this.loadNewWorkout(id, fromLogs);\n        }\n        return this.loadWorkoutFromLogs(id);\n    }\n}\n","import { useEffect, useState } from 'react';\nimport Database from '../util/workoutPersistence';\n\nexport default function usePersistence() {\n    const [db, setDb] = useState(null);\n\n    useEffect(() => {\n        const database = new Database();\n        database.init().then(() => setDb(database));\n    }, []);\n\n    return db;\n}","export function getWorkout(id) {\n    const workout = {\n        id,\n        isComplete: true,\n        activeSetId: null,\n        activeExerciseId: null\n    };\n\n    workout.date = new Date();\n    workout.name = document.querySelector('.workout-name').textContent.trim();\n    workout.duration = Number(\n        document.querySelector('.workout-duration').dataset.value\n    );\n    workout.exercises = [];\n\n    const $exercises = document.querySelectorAll('.exercise');\n    for (const $exercise of $exercises) {\n        const exercise = {};\n        exercise.name = $exercise.querySelector(\n            '.exercise-name'\n        ).textContent.trim();\n        exercise.id = $exercise.dataset.id;\n        exercise.type = $exercise.dataset.type;\n        exercise.sets = [];\n\n        const $sets = $exercise.querySelectorAll('.set-display');\n        for (const $set of $sets) {\n            const set = {};\n            set.id = $set.dataset.id;\n            set.defaultDurationTime = Number(\n                $set.querySelector('.time .value')?.dataset?.value\n            );\n            set.defaultReps = Number(\n                $set.querySelector('.reps .value').dataset.value\n            );\n            set.defaultWeight = Number(\n                $set.querySelector('.weight .value').dataset.value\n            );\n            set.defaultRestTime = Number(\n                $set.querySelector('.rest .value').dataset.value\n            );\n            set.stage = 'COMPLETE';\n            exercise.sets.push(set);\n        }\n        exercise.rpe = Number($exercise.querySelector('.rpe')?.value) || 5;\n        workout.exercises.push(exercise);\n    }\n\n    return workout;\n}\n\nexport default function serializeWorkout(id) {\n    return JSON.stringify(getWorkout(id));\n}","import { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport {\n    BiCheck,\n    BiPause,\n    BiPlay,\n    BiRefresh,\n    BiStar,\n    BiStopwatch,\n    BiTrophy\n} from 'react-icons/bi';\nimport hasIncompleteExercises from '../util/hasIncompleteExercises';\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport timeFormat from '../util/timeFormat';\n\nimport { Button, DecoratedBlock, Footer, TextLabel } from '../ui';\nimport usePersistence from '../hooks/usePersistence';\nimport { getWorkout } from '../util/serializeWorkout';\n\nfunction CycleButton({ stage, onClick = () => {} }) {\n    const { t } = useTranslation();\n    \n    const labels = {\n        IDLE: t('start'),\n        ACTIVE: t('rest'),\n        RESTING: t('complete'),\n        COMPLETE: t('reset')\n    };\n\n    const icons = {\n        IDLE: BiPlay,\n        ACTIVE: BiPause,\n        RESTING: BiCheck,\n        COMPLETE: BiRefresh\n    };\n\n    const types = {\n        IDLE: 'neutral',\n        ACTIVE: 'neutral',\n        RESTING: 'neutral',\n        COMPLETE: 'primary'\n    };\n\n    const label = labels[stage];\n    const Icon = icons[stage];\n    const type = types[stage];\n\n    return (\n        <Button\n            onClick={onClick}\n            type={type}\n            label={label}\n            Icon={Icon}\n        />\n    );\n}\n\nexport default function Actions(props) {\n    const { state, dispatch, isReadOnly, timer, loadedId } = props;\n\n    const { t, language } = useTranslation();\n    const db = usePersistence();\n\n    const [isComplete, setIsComplete] = useState(false);\n\n    const updateStage = () => {\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    const completeExercise = () => {\n        dispatch({\n            type: 'COMPLETE_EXERCISE'\n        });\n    };\n\n    const completeWorkout = () => {\n        const willSave = window.confirm(\n            t('save_progress')\n        );\n        if (!willSave) {\n            return;\n        }\n        const workout = getWorkout(state.id);\n        db?.saveLogEntry(workout);\n        setIsComplete(true);\n        timer.pause();\n        dispatch({\n            type: 'COMPLETE_WORKOUT'\n        });\n    };\n\n    const onStartWorkout = () => {\n        timer.play();\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: state.exercises[0]?.id,\n                setId: state.exercises[0]?.sets[0]?.id,\n            }\n        });\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    let footerButtons = [null, null];\n\n    const exercise = state.exercises.find(\n        e => e.id === state.activeExerciseId\n    );\n\n    const set = exercise ? exercise.sets.find(\n        s => s.id === state.activeSetId\n    ) : null;\n\n    const hasActiveSet = Boolean(set);\n    const hasExercises = state.exercises.length > 0;\n    const hasSets = state.exercises[0]?.sets.length > 0;\n\n    if (!isReadOnly && !isComplete) {\n        if (timer.isRunning) {\n            if (hasActiveSet) {\n                footerButtons[0] = <CycleButton\n                    onClick={updateStage}\n                    stage={set.stage}\n                />;\n            }\n        \n            if (!hasIncompleteExercises(state)) {\n                footerButtons[1] = <Button\n                    type='success'\n                    label={t('finish_workout')}\n                    Icon={BiTrophy}\n                    onClick={completeWorkout}\n                />;\n            } else if (!hasIncompleteSets(exercise)) {\n                footerButtons[1] = <Button\n                    type='success'\n                    label={t('finish_exercise')}\n                    Icon={BiStar}\n                    onClick={completeExercise}\n                />;\n            }\n        } else if (hasExercises && hasSets && !isComplete) {\n            footerButtons[0] = <Button\n                type='primary'\n                label={t('start_workout')}\n                onClick={onStartWorkout}\n                Icon={BiPlay}\n            />;\n        }\n    } else {\n        footerButtons[0] = <Link to={{ pathname: '/newWorkout', search: `id=${loadedId}&fromLogs=true` }}>\n            <Button\n                type='primary'\n                label={t('start_workout_from_history')}\n                Icon={BiPlay}\n            />\n        </Link>;\n    }\n\n    const timerType = timer.isRunning || !isComplete ? 'neutral' : 'success';\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    const date = state.date || new Date();\n    return (\n        <Footer>\n            <DecoratedBlock type={timerType}>\n                <BiStopwatch className='inline -mt-1 mr-1 -ml-1' />\n                <time\n                    className='workout-duration'\n                    data-value={timer.value}\n                >{timeFormat(timer.value)}</time>\n                <TextLabel small>\n                    {format(date, 'PP', formatOptions)}\n                </TextLabel>\n            </DecoratedBlock>\n            {footerButtons[0]} {footerButtons[1]}\n        </Footer>\n    );\n}","import hasIncompleteSets from './hasIncompleteSets';\n\nexport default function hasIncompleteExercises(workout) {\n    return workout.exercises.some(hasIncompleteSets);\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport { SingleInputForm } from '../ui';\n\nexport default function AddExercise(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n    const { dispatch } = props;\n\n    const onAddExercise = (ev) => {\n        ev.preventDefault();\n        setName('');\n        dispatch({\n            type: 'ADD_EXERCISE',\n            payload: { name }\n        });\n    };\n\n    return <SingleInputForm\n        onSubmit={onAddExercise}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('exercise_name')}\n        label={t('add_exercise')}\n        value={name}\n    />;\n}","import { useEffect, useState } from 'react';\n\nexport default function useNotification() {\n    const [hasAskedPermission, setHasAskedPermission] = useState(false);\n    const [\n        hasNotificationPermission,\n        setHasNotificationPermission\n    ] = useState(false);\n\n    if (!('Notification' in window)) {\n        return {\n            // Behave as if permission was asked, but denied\n            hasAskedPermission: true,\n            notify: () => {},\n            hasNotificationPermission,\n            requestNotificationPermission: () => {}\n        };\n    }\n\n    useEffect(() => {\n        setHasNotificationPermission(Notification.permission === 'granted');\n        setHasAskedPermission(Notification.permission !== 'default');\n    }, []);\n\n    async function requestNotificationPermission() {\n        const permission = await Notification.requestPermission();\n        setHasNotificationPermission(permission === 'granted');\n        setHasAskedPermission(true);\n    }\n\n    function notify(msg) {\n        new Notification('Workout tracker', {\n            body: msg,\n            vibrate: true\n        });\n    }\n\n    return {\n        hasAskedPermission,\n        notify,\n        hasNotificationPermission,\n        requestNotificationPermission\n    };\n}","import { useEffect, useState } from 'react';\n\nexport default function useTimer(\n    timerId = 'timer', initialTimer = 0, increment = 1\n) {\n    const [timer, setTimer] = useState(initialTimer);\n    const [isRunning, setIsRunning] = useState(false);\n    const [isBackground, setIsBackground] = useState(\n        document.visibilityState !== 'visible'\n    );\n    const sessionStorage = window.sessionStorage;\n\n    const play = () => setIsRunning(true);\n    const pause = () => setIsRunning(false);\n\n    useEffect(() => {\n        if (isRunning && !isBackground) {\n            const interval = setInterval(() => {\n                setTimer((t) => Math.max(t + increment, 0));\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [isRunning, isBackground]);\n\n    useEffect(() => {\n        const onVisibilityChange = () => {\n            setIsBackground(\n                document.visibilityState !== 'visible'\n            );\n        };\n        window.addEventListener(\n            'visibilitychange', onVisibilityChange\n        );\n\n        return () => window.removeEventListener(\n            'visibilitychange', onVisibilityChange\n        );\n    }, []);\n\n    useEffect(() => {\n        if (isBackground) {\n            sessionStorage.setItem(timerId, Date.now());\n        } else if (isRunning) {\n            const lastTimer = Number(sessionStorage.getItem(timerId));\n            if (lastTimer && isRunning) {\n                const ellapsed = Math.floor(\n                    (Date.now() - lastTimer) / (1000 * increment)\n                );\n                setTimer(t => Math.max(t + ellapsed, 0));\n            }\n        }\n    }, [isBackground]);\n\n    return { play, pause, value: timer, isRunning, set: setTimer };\n}\n","import { useEffect, useRef, useState } from 'react';\nimport timeFormat from '../util/timeFormat';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem, TextLabel } from '../ui';\nimport useNotification from '../hooks/useNotification';\nimport useTimer from '../hooks/useTimer';\n\nfunction SetInputField(props) {\n    const {\n        inputProps,\n        labelText,\n        value = null,\n        formatFunction = val => val,\n        type = 'neutral',\n        isEdit = false,\n        onToggleEdit = () => {},\n        onChange = () => {}\n    } = props;\n\n    const labelColorClass = {\n        primary: 'text-blue-800',\n        neutral: 'text-indigo-800',\n        success: 'text-green-800',\n        danger: 'text-red-800',\n        highlight: 'text-cyan-800'\n    };\n    \n    const inputColorClass = {\n        primary: 'text-blue-800 bg-blue-50 border-blue-200 focus:ring-blue-100',\n        neutral: 'text-indigo-800 bg-indigo-50 border-indigo-200 focus:ring-indigo-100',\n        success: 'text-green-800 bg-green-50 border-green-200 focus:ring-green-100',\n        danger: 'text-red-800 bg-red-50 border-red-200 focus:ring-red-100',\n        highlight: 'text-cyan-800 bg-cyan-50 border-cyan-200 focus:ring-cyan-100'\n    };\n\n    return (\n        <label className={labelColorClass[type]}>\n            <TextLabel className='mb-1'>{labelText}</TextLabel>\n            {\n                isEdit ? (\n                    <input\n                        {...inputProps}\n                        className={`block tabuler-nums w-full px-1 rounded shadow-sm border focus:ring-2 ${inputColorClass[type]}`}\n                        value={value}\n                        autoFocus\n                        onFocus={ev => ev.target.select()}\n                        onBlur={() => isEdit && onToggleEdit(false)}\n                        onChange={ev => onChange(Number(ev.target.value))}\n                    ></input>\n                ) : (\n                    <span data-value={value} tabIndex={0} onFocus={() => isEdit || onToggleEdit(true)} className={`value block tabuler-nums w-full px-1 rounded shadow-sm border ${inputColorClass[type]}`}>\n                        {formatFunction(Number(value))}\n                    </span>\n                )\n            }\n        </label>\n    );\n}\n\nexport default function SetDisplay(props) {\n    const {\n        id,\n        exerciseType,\n        exerciseId,\n        defaultDurationTime = 0,\n        defaultRestTime = 30,\n        defaultReps = 8,\n        defaultWeight = 10,\n        isReadOnly = false,\n        onClick = () => {},\n        dispatch = () => {},\n        isActive = true,\n        stage = 'IDLE'\n    } = props;\n\n    const durationTimer = useTimer('durationTimer', defaultDurationTime, -1);\n    const restTimer = useTimer('restTimer', defaultRestTime, -1);\n\n    const [notifiedDuration, setNotifiedDuration] = useState(false);\n    const [notifiedRest, setNotifiedRest] = useState(true);\n\n    const [reps, setReps] = useState(defaultReps);\n    const [weight, setWeight] = useState(defaultWeight);\n\n    const [isEditTime, setIsEditTime] = useState(false);\n    const [isEditReps, setIsEditReps] = useState(false);\n    const [isEditWeight, setIsEditWeight] = useState(false);\n    const [isEditRest, setIsEditRest] = useState(false);\n\n    const { notify } = useNotification();\n    const prevStageRef = useRef();\n\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (stage === 'ACTIVE') {\n            setNotifiedDuration(false);\n            setNotifiedRest(false);\n        }\n    }, [stage]);\n\n    useEffect(() => {\n        if (isEditTime || isEditReps || isEditWeight || isEditRest) {\n            dispatch({\n                type: 'UPDATE_ACTIVE_SET',\n                payload: {\n                    setId: id,\n                    exerciseId\n                }\n            });\n\n        }\n    }, [\n        dispatch, isEditTime, isEditReps, isEditRest,\n        isEditWeight, id, exerciseId\n    ]);\n\n    useEffect(() => {\n        if (stage === 'COMPLETE' && restTimer.value < 0) {\n            restTimer.set((t) => defaultRestTime + Math.abs(t));\n        }\n    }, [stage, defaultRestTime]);\n\n    useEffect(() => {\n        if (stage === 'IDLE' && prevStageRef.current === 'COMPLETE') {\n            durationTimer.set(0);\n            restTimer.set(defaultRestTime);\n            setReps(defaultReps);\n            setWeight(defaultWeight);\n        }\n    }, [defaultRestTime, defaultReps, defaultWeight, stage]);\n\n    useEffect(() => {\n        prevStageRef.current = stage;        \n    }, [stage]);\n\n    useEffect(() => {\n        if (stage === 'ACTIVE' && !isEditTime && exerciseType == 'cardio') {\n            if (!Number.isFinite(durationTimer.value)) {\n                durationTimer.set(0);\n            }\n            durationTimer.play();\n        } else {\n            durationTimer.pause();\n        }\n    }, [stage, durationTimer, isEditTime, exerciseType]);\n\n    useEffect(() => {\n        if (stage === 'RESTING' && !isEditRest) {\n            restTimer.play();\n        } else {\n            restTimer.pause();\n        }\n    }, [stage, restTimer, isEditRest]);\n\n    useEffect(() => {\n        if (stage !== 'ACTIVE' || exerciseType !== 'cardio') {\n            return;\n        }\n\n        if (restTimer.value === 0 && !notifiedRest) {\n            notify(t('times_up'));\n            setNotifiedRest(true);\n        }\n\n        if (durationTimer.value === 0 && !notifiedDuration) {\n            notify(t('duration_up'));\n            setNotifiedDuration(true);\n        }\n    }, [restTimer, durationTimer, stage, exerciseType]);\n\n    const numericInputProps = {\n        type: 'number',\n        pattern: '\\\\d+',\n        min: '0',\n        inputMode: 'numeric',\n    };\n\n    const baseType = stage === 'COMPLETE' ? 'success' : 'neutral';\n\n    const getTypeForTimer = (timer, baseStage) => {\n        if (stage === baseStage) {\n            return timer.value < 0 ? 'danger' : 'highlight';\n        }\n        return baseType;\n    };\n\n    return (\n        <ListItem\n            onClick={onClick}\n            data-id={id}\n            className='set-display flex space-x-2'\n            isActive={isActive && !isReadOnly}\n        >\n            {\n                (\n                    Number.isFinite(durationTimer.value) &&\n                    exerciseType === 'cardio'\n                ) && (\n                    <div className='time flex-1'>\n                        <SetInputField\n                            inputProps={numericInputProps}\n                            isEdit={isEditTime && !isReadOnly}\n                            onToggleEdit={setIsEditTime}\n                            onChange={durationTimer.set}\n                            value={Math.abs(durationTimer.value)}\n                            formatFunction={timeFormat}\n                            type={getTypeForTimer(durationTimer, 'ACTIVE')}\n                            labelText={t('time')}\n                            defaultValue='0'\n                        />\n                    </div>\n                )\n            }\n            <div className='reps flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditReps && !isReadOnly}\n                    onToggleEdit={setIsEditReps}\n                    onChange={setReps}\n                    value={reps}\n                    type={baseType}\n                    labelText={t('reps')}\n                    defaultValue='8'\n                />\n            </div>\n            <div className='weight flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditWeight && !isReadOnly}\n                    onToggleEdit={setIsEditWeight}\n                    onChange={setWeight}\n                    value={weight}\n                    type={baseType}\n                    labelText={t('weight')}\n                    defaultValue='10'\n                />\n            </div>\n            <div className='rest flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditRest && !isReadOnly}\n                    onToggleEdit={setIsEditRest}\n                    onChange={restTimer.set}\n                    value={Math.abs(restTimer.value)}\n                    type={getTypeForTimer(restTimer, 'RESTING')}\n                    formatFunction={timeFormat}\n                    labelText={t('rest')}\n                    defaultValue={defaultRestTime}\n                />\n            </div>\n        </ListItem>\n    );\n}","import { BiInfoCircle } from 'react-icons/bi';\nimport { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem } from '../ui';\n\nexport default function RPEScale(props) {\n    const { defaultRPE = 5, isReadOnly } = props;\n\n    const { t } = useTranslation();\n    const [value, setValue] = useState(defaultRPE);\n    const [expand, setExpand] = useState(false);\n\n    const rpeTitles = [\n        t('rpe_title_1'),\n        t('rpe_title_2'),\n        t('rpe_title_3'),\n        t('rpe_title_4'),\n        t('rpe_title_5'),\n        t('rpe_title_6'),\n        t('rpe_title_7'),\n        t('rpe_title_8'),\n        t('rpe_title_9'),\n        t('rpe_title_10')\n    ];\n\n    const rpeDescriptions = [\n        t('rpe_desc_1'),\n        t('rpe_desc_2'),\n        t('rpe_desc_3'),\n        t('rpe_desc_4'),\n        t('rpe_desc_5'),\n        t('rpe_desc_6'),\n        t('rpe_desc_7'),\n        t('rpe_desc_8'),\n        t('rpe_desc_9'),\n        t('rpe_desc_10')\n    ];\n\n    return (\n        <>\n            <hr className='border-t border-indigo-200'></hr>\n            <ListItem>\n                <span className='uppercase text-sm tracking-wider text-indigo-700'>{t('rpe')}\n                <button onClick={() => setExpand(!expand)}><BiInfoCircle className='inline ml-1 mb-1' /></button></span>\n                <input\n                    className={`rpe val-${value}`}\n                    type='range'\n                    min='1'\n                    value={value}\n                    onChange={ev => isReadOnly || setValue(ev.target.value)}\n                    max='10'\n                    step='1'\n                />\n                <ul className='tracks flex w-full justify-between text-xs -mt-1 text-indigo-700'>\n                    {Array.from(Array(10).keys()).map((i) => \n                        <li key={i}>{i + 1}</li>\n                    )}\n                </ul>\n                {\n                    expand && (\n                        <>\n                            <hr className='mt-2 border-t border-indigo-200' />\n                            <h4 className='text-xs font-semibold mb-1 mt-2 text-indigo-700'>{rpeTitles[value - 1]}</h4>\n                            <p className='text-xs text-indigo-700'>{rpeDescriptions[value - 1]}</p>\n                        </>\n                    )\n                }\n            </ListItem>\n        </>\n    );\n}","import { BiChevronDown, BiChevronUp, BiDumbbell, BiRun } from 'react-icons/bi';\n\nimport SetDisplay from './SetDisplay';\nimport RPEScale from './RPEScale';\n\nimport '../range.css';\nimport useTranslation from '../hooks/useTranslation';\nimport {\n    Block,\n    EmptyMessage,\n    List,\n    TitleH3,\n    LightButton,\n    BlockActions\n} from '../ui';\nimport { useState } from 'react';\n\nexport default function Exercise(props) {\n    const {\n        id,\n        name,\n        sets,\n        isFirst = false,\n        isLast = false,\n        isActive = false,\n        isComplete = false,\n        isReadOnly=false,\n        defaultRPE=5,\n        defaultType='weight',\n        isWorkoutComplete = false,\n        activeSetId = null,\n        dispatch = () => {},\n    } = props;\n\n    const { t } = useTranslation();\n    const [type, setType] = useState(defaultType);\n\n    const onRemoveSet = () => {\n        dispatch({\n            type: 'REMOVE_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n    \n    const onRemoveExercise = () => {\n        dispatch({\n            type: 'REMOVE_EXERCISE',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onAddSet = () => {\n        dispatch({\n            type: 'ADD_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onActivateSet = (setId) => {\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: id,\n                setId\n            }\n        });\n    };\n\n    const moveExercise = (factor) => {\n        dispatch({\n            type: 'MOVE_EXERCISE',\n            payload: {\n                exerciseId: id,\n                factor\n            }\n        });\n    };\n\n    const typeIcons = {\n        cardio: <BiRun className='inline text-xl mb-1'/>,\n        weight: <BiDumbbell className='inline text-xl mb-1'/>\n    };\n\n    const toggleType = () => {\n        if (isReadOnly || isComplete) {\n            return;\n        }\n        const newType = type === 'cardio' ? 'weight' : 'cardio';\n        dispatch({\n            type: 'UPDATE_EXERCISE_TYPE',\n            payload: {\n                exerciseId: id, type: newType\n            }\n        });\n        setType(newType);\n    };\n\n    return (\n        <div className='exercise relative' data-id={id} data-type={type}>\n            {isWorkoutComplete || isReadOnly || (\n                <div className='absolute top-1 right-1 text-indigo-500'>\n                    <button\n                        disabled={isLast}\n                        onClick={() => moveExercise(1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronDown /></button>\n                    <button\n                        disabled={isFirst}\n                        onClick={() => moveExercise(-1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronUp /></button>\n                </div>\n            )}\n            <Block isActive={isActive}>\n                <List>\n                    <TitleH3 onClick={toggleType} className='exercise-name'>\n                        {typeIcons[type]} {name}\n                    </TitleH3>\n                    {sets.length ? sets.map((set) =>\n                        <SetDisplay\n                            key={set.id}\n                            id={set.id}\n                            exerciseType={type}\n                            exerciseId={id}\n                            defaultDurationTime={set.defaultDurationTime}\n                            defaultWeight={set.defaultWeight}\n                            defaultRestTime={set.defaultRestTime}\n                            defaultReps={set.defaultReps}\n                            onClick={() => onActivateSet(set.id)}\n                            onActivateSet={onActivateSet}\n                            isActive={set.id === activeSetId}\n                            isReadOnly={isReadOnly}\n                            stage={set.stage}\n                            dispatch={dispatch}\n                        ></SetDisplay>\n                    ) : (\n                        <EmptyMessage>{t('no_sets')}</EmptyMessage>\n                    )}\n                    {\n                        isComplete && sets.length > 0 &&\n                        <RPEScale\n                            defaultRPE={defaultRPE}\n                            isReadOnly={isReadOnly}\n                        />\n                    }\n                </List>\n            </Block>\n            {isWorkoutComplete || isReadOnly || (\n                <BlockActions>\n                    <LightButton onClick={onRemoveExercise} style={{ marginRight: 'auto' }}>\n                        {t('remove_exercise')}\n                    </LightButton>\n                    {\n                        isActive && activeSetId !== null &&\n                        <LightButton onClick={onRemoveSet}>\n                            {t('remove_set')}\n                        </LightButton>\n                    }\n                    <LightButton onClick={onAddSet}>{t('add_set')}</LightButton>\n                </BlockActions>\n            )}\n        </div>\n    );\n}","export default function genHash() {\n    return crypto.getRandomValues(new Uint32Array(1))[0].toString(16);\n}","import { cloneDeep } from 'lodash';\nimport genHash from './genHash';\nimport hasIncompleteSets from './hasIncompleteSets';\n\nfunction getNextStageFor(stage) {\n    const stages = ['IDLE', 'ACTIVE', 'RESTING', 'COMPLETE'];\n    const index = stages.findIndex(s => s === stage);\n\n    return stages[(index + 1) % stages.length];\n}\n\nfunction addNewSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const hash = genHash();\n    exercise.sets = [\n        ...exercise.sets,\n        { id: hash, stage: 'IDLE' }\n    ];\n    workout.activeSetId = hash;\n    return workout;\n}\n\nfunction removeSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const setIndex = exercise.sets.findIndex(s => s.id === workout.activeSetId);\n    if (setIndex !== -1) {\n        exercise.sets.splice(setIndex, 1);\n        workout.activeSetId = null;\n    }\n    return workout;\n}\n\nfunction removeExercise(workout, payload) {\n    const { exerciseId } = payload;\n\n    workout.exercises = workout.exercises.filter(\n        ex => ex.id !== exerciseId\n    );\n\n    return workout;\n}\n\nfunction updateActiveSet(workout, payload) {\n    const { setId, exerciseId } = payload;\n\n    workout.activeSetId = setId;\n    workout.activeExerciseId = exerciseId;\n\n    return workout;\n}\n\nfunction updateSetStage(workout, stage) {\n    const exercise = workout.exercises.find(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const setIndex = exercise.sets.findIndex(\n        s => s.id === workout.activeSetId\n    );\n    if (setIndex === -1) {\n        return workout;\n    }\n\n    const currentStage = exercise.sets[setIndex].stage;\n    const nextStage = stage || getNextStageFor(\n        currentStage\n    );\n\n    if (nextStage === 'COMPLETE' && !stage) {\n        const nextIndex = (setIndex + 1) % exercise.sets.length;\n        workout.activeSetId = nextIndex > 0 ?\n            exercise.sets[\n                (setIndex + 1) % exercise.sets.length\n            ].id :\n            null;\n    }\n\n    exercise.sets[setIndex].stage = nextStage;\n\n    if (!hasIncompleteSets(exercise)) {\n        workout.activeSetId = null;\n    }\n\n    return workout;\n}\n\nfunction updateActiveExercise(workout) {\n    const activeExerciseIdx = workout.exercises.findIndex(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const nextExerciseIdx = (activeExerciseIdx + 1) % workout.exercises.length;\n    const nextExercise = workout.exercises[nextExerciseIdx];\n    workout.activeExerciseId = nextExercise.id;\n    workout.activeSetId = nextExercise.sets[0]?.id || null;\n\n    return workout;\n}\n\nfunction addNewExercise(workout, payload) {\n    const { name } = payload;\n    workout.exercises.push({\n        id: genHash(),\n        name,\n        sets: []\n    });\n    return workout;\n}\n\nfunction completeWorkout(workout) {\n    workout.isComplete = true;\n    return workout;\n}\n\nfunction moveExercise(workout, payload) {\n    const { exerciseId, factor } = payload;\n\n    const exerciseIndex = workout.exercises.findIndex(e => e.id === exerciseId);\n\n    if (exerciseIndex === -1) {\n        return workout;\n    }\n\n    const newIndex = Math.min(\n        Math.max(0, exerciseIndex + factor), workout.exercises.length - 1\n    );\n\n    const exerciseA = workout.exercises[exerciseIndex];\n    const exerciseB = workout.exercises[newIndex];\n\n    workout.exercises[exerciseIndex] = exerciseB;\n    workout.exercises[newIndex] = exerciseA;\n\n    return workout;\n}\n\nfunction updateExerciseType(workout, payload) {\n    const { exerciseId, type } = payload;\n\n    const exerciseIndex = workout.exercises.findIndex(e => e.id === exerciseId);\n\n    if (exerciseIndex === -1) {\n        return workout;\n    }\n\n    workout.exercises[exerciseIndex].type = type;\n    return workout;\n}\n\nexport default function reducer(state, action) {\n    const workout = cloneDeep(state);\n\n    switch(action.type) {\n        case 'SET_WORKOUT':\n            return action.payload;\n        case 'ADD_SET':\n            return addNewSet(workout, action.payload);\n        case 'REMOVE_SET':\n            return removeSet(workout, action.payload);\n        case 'UPDATE_ACTIVE_SET':\n            return updateActiveSet(workout, action.payload);\n        case 'UPDATE_SET_STAGE':\n            return updateSetStage(workout); \n        case 'UPDATE_EXERCISE_TYPE':\n            return updateExerciseType(workout, action.payload);\n        case 'COMPLETE_EXERCISE':\n            return updateActiveExercise(workout);\n        case 'ADD_EXERCISE':\n            return addNewExercise(workout, action.payload);\n        case 'COMPLETE_WORKOUT':\n            return completeWorkout(workout);\n        case 'MOVE_EXERCISE':\n            return moveExercise(workout, action.payload);\n        case 'REMOVE_EXERCISE':\n            return removeExercise(workout, action.payload);\n        default:\n            throw new Error();\n    }\n}","import { useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Actions from './Actions';\nimport AddExercise from './AddExercise';\nimport Exercise from './Exercise';\n\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport reducer from '../util/reducer';\nimport useTranslation from '../hooks/useTranslation';\nimport useNotification from '../hooks/useNotification';\nimport usePersistence from '../hooks/usePersistence';\nimport { BiBell, BiChevronLeft, BiSave } from 'react-icons/bi';\nimport useTimer from '../hooks/useTimer';\nimport { getWorkout } from '../util/serializeWorkout';\n\nexport default function Workout(props) {\n    const { t } = useTranslation();\n    const { id, createNew = true, fromLogs = false } = props;\n\n    const db = usePersistence();\n    const {\n        requestNotificationPermission,\n        hasAskedPermission\n    } = useNotification();\n    const [workout, dispatch] = useReducer(reducer, null);\n    const timer = useTimer('mainTimer', 0);\n\n    useEffect(() => {\n        db?.loadWorkoutLogById(id, createNew, fromLogs)\n            .then((workout) => {\n                dispatch({\n                    type: 'SET_WORKOUT',\n                    payload: workout\n                });\n                timer.set(workout.duration);\n            });\n    }, [db, id, createNew, fromLogs]);\n\n    const onSaveWorkout = () => {\n        const uiWorkout = getWorkout(workout.id);\n        db.saveWorkoutTemplate(workout.id, uiWorkout.exercises);\n    };\n\n    if (!workout) {\n        return null;\n    }\n\n    return (\n        <div>\n            <header className='flex items-center pt-4'>\n                <Link className='text-indigo-500 px-3 pr-0 text-xl' to='/'><BiChevronLeft /></Link>\n                <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pr-2'>\n                    {workout.name}\n                </h2>\n                {hasAskedPermission ||\n                <button\n                    onClick={requestNotificationPermission}\n                    className='p-1 text-base text-indigo-800'\n                >\n                    <BiBell className='inline' />\n                </button>}\n                {createNew && !timer.isRunning && !workout.isComplete &&\n                <button onClick={onSaveWorkout} className='text-indigo-500 px-3 ml-auto text-xl' to='/'>\n                    <BiSave />\n                </button>}\n            </header>\n            <main>\n                {\n                    workout.exercises.length > 0 ? (\n                        <ul className='flex flex-col space-y-4 p-3'>\n                            {\n                                workout.exercises.map((exercise, i) =>\n                                <li key={exercise.id}>\n                                    <Exercise\n                                        id={exercise.id}\n                                        isFirst={i === 0}\n                                        isWorkoutComplete={workout.isComplete}\n                                        isLast={i === workout.exercises.length - 1}\n                                        isActive={exercise.id === workout.activeExerciseId && createNew}\n                                        isComplete={!hasIncompleteSets(exercise)}\n                                        isReadOnly={!createNew || workout.isComplete}\n                                        name={exercise.name}\n                                        sets={exercise.sets}\n                                        defaultRPE={exercise.rpe}\n                                        defaultType={exercise.type}\n                                        activeSetId={workout.activeSetId}\n                                        dispatch={dispatch}\n                                    />\n                                </li>)\n                            }\n                        </ul>\n                    ) : (\n                        <p className='px-3 my-2 text-indigo-500'>{t('no_exercise')}</p>\n                    )\n                }\n                {workout.isComplete || !createNew || <AddExercise dispatch={dispatch} />}\n            </main>\n            <Actions\n                timer={timer}\n                isReadOnly={!createNew}\n                loadedId={id}\n                state={workout}\n                dispatch={dispatch}\n            />\n        </div>\n    );\n}","import { format } from 'date-fns';\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useEffect, useState } from 'react';\n\nimport useTranslation from '../hooks/useTranslation';\nimport usePersistence from '../hooks/usePersistence';\n\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport { sortBy } from 'lodash';\n\nexport default function WorkoutHistory() {\n    const [workoutsList, setWorkoutsList] = useState([]);\n\n    const db = usePersistence();\n    const { t, language } = useTranslation();\n\n    useEffect(() => {\n        db?.getAllData('logs').then(setWorkoutsList);\n    }, [db]);\n\n    const onClickRemove = async (logKey) => {\n        db?.eraseLogEntry(logKey);\n        setWorkoutsList(\n            workoutsList.filter(w => w.persistenceKey !== logKey)\n        );\n    };\n\n    if (!workoutsList.length) {\n        return null;\n    }\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    const sortedList = sortBy(\n        workoutsList, w => -w.date.valueOf()\n    );\n\n    return <div>\n        <h2 className='workout-name text-2xl text-blue-800 font-semibold px-3 pt-4'>\n            {t('history')}\n        </h2>\n        <ul className='flex flex-col space-y-4 p-3'>{\n            sortedList.map((workout) => \n                <Link to={{\n                    pathname: '/viewWorkout',\n                    search: `?id=${workout.persistenceKey}`\n                }} key={workout.persistenceKey} className='p-2 border border-blue-200 relative flex flex-wrap bg-blue-50 rounded-xl'>\n                    <button\n                        onClick={(ev) => {\n                            onClickRemove(workout.persistenceKey);\n                            ev.preventDefault();\n                        }}\n                        className='absolute p-2 top-0 right-0 text-blue-400'><BiTrash /></button>\n                    <h2 className='text-blue-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {workout.name}</h2>\n                    <p className='text-blue-600 text-sm'>{format(workout.date, 'PPp', formatOptions)}</p>\n                </Link>\n            )\n        }</ul>\n    </div>;\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { SingleInputForm } from '../ui';\n\nexport default function AddWorkout(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n\n    const { onAddWorkout = () => {} } = props;\n\n    const onSubmit = (ev) => {\n        ev.preventDefault();\n        onAddWorkout(name);\n        setName('');\n    };\n\n    return <SingleInputForm\n        onSubmit={onSubmit}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('workout_name')}\n        label={t('add_workout')}\n        value={name}\n    />;\n}","import { formatDistance } from 'date-fns';\nimport useTranslation from '../hooks/useTranslation';\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\nimport usePersistence from '../hooks/usePersistence';\nimport { useEffect, useState } from 'react';\n\nconst locales = { pt, en };\n\nexport default function WorkoutDisplay(props) {\n    const { name, onRemoveWorkout, id } = props;\n\n    const [lastRun, setLastRun] = useState(null);\n    const db = usePersistence();\n    const { t, language } = useTranslation();\n\n    useEffect(async () => {\n        db?.getLastLogEntry(id).then(lastEntry => {\n            if (lastEntry) {\n                setLastRun(lastEntry.date);\n            }\n        });\n    }, [db]);\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    return (\n        <Link to={{ pathname: '/newWorkout', search: `?id=${id}` }} className='p-2 border border-indigo-200 relative flex flex-wrap bg-indigo-50 rounded-xl'>\n            <button onClick={(ev) => {\n                onRemoveWorkout(id);\n                ev.preventDefault();\n            }} className='p-2 absolute top-0 right-0 text-indigo-400'><BiTrash /></button>\n            <h2 className='text-indigo-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {name}</h2>\n            {lastRun && (\n                <p className='text-indigo-600 text-sm'>\n                    {t('last_run')}: {formatDistance(lastRun, new Date(), formatOptions)}\n                </p>\n            )}\n        </Link>\n    );\n}","import { useEffect, useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport AddWorkout from './AddWorkout';\nimport WorkoutDisplay from './WorkoutDisplay';\n\nimport genHash from '../util/genHash';\nimport usePersistence from '../hooks/usePersistence';\n\nexport default function WorkoutList() {\n    const db = usePersistence();\n    const { t } = useTranslation();\n    const [workouts, setWorkouts] = useState([]);\n\n    useEffect(() => {\n        db?.getAllData('workouts').then(setWorkouts);\n    }, [db]);\n\n    const onAddWorkout = async (name) => {\n        const workout = {\n            id: genHash(), name, exercises: []\n        };\n\n        if (db) {\n            await db.saveWorkout(workout);\n        }\n\n        setWorkouts(workouts.concat([workout]));\n    };\n\n    const onRemoveWorkout = async (id) => {\n        const willRemove = window.confirm(t('confirm_delete'));\n        if (willRemove) {\n            if (db) {\n                await db.eraseWorkout(id);\n            }\n\n            setWorkouts(workouts.filter(w => w.id !== id));\n        }\n    };\n\n    return (\n        <div>\n            <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pt-4'>\n                {t('workouts_list')}\n            </h2>\n            {\n                workouts.length > 0 ? (\n                    <ul className='flex flex-col space-y-4 p-3'>\n                        {\n                            workouts.map((workout) =>\n                                <WorkoutDisplay\n                                    key={workout.id}\n                                    id={workout.id}\n                                    name={workout.name}\n                                    onRemoveWorkout={onRemoveWorkout}\n                                />)\n                        }\n                    </ul>\n                ) : (\n                    <p className='px-3 my-2 text-indigo-500'>{t('no_workout')}</p>\n                )\n            }\n            <AddWorkout onAddWorkout={onAddWorkout} />\n        </div>\n    );\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Workout from './components/Workout';\nimport WorkoutHistory from './components/WorkoutHistory';\nimport WorkoutList from './components/WorkoutList';\n\nimport { Container } from './ui';\n\nfunction App() {\n    const renderWorkout = (routeProps) => {\n        let id = new URLSearchParams(routeProps.location.search).get('id');\n        let fromLogs = new URLSearchParams(routeProps.location.search).get('fromLogs');\n\n        const createNew = routeProps.match.path === '/newWorkout';\n\n        if (routeProps.match.path === '/viewWorkout' || fromLogs) {\n            id = Number(id); // Logs have numeric ids\n        }\n\n        return <Workout id={id} createNew={createNew} fromLogs={Boolean(fromLogs)} />;\n    };\n\n    return (\n        <Container>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/'>\n                        <WorkoutList />\n                        <WorkoutHistory />\n                    </Route>\n                    <Route path='/viewWorkout' render={renderWorkout} />\n                    <Route path='/newWorkout' render={renderWorkout} />\n                </Switch>\n            </Router>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}