{"version":3,"sources":["util/translations.js","hooks/useTranslation.js","util/hasIncompleteSets.js","util/timeFormat.js","ui.js","util/workoutPersistence.js","hooks/usePersistence.js","util/serializeWorkout.js","components/Actions.js","util/hasIncompleteExercises.js","components/AddExercise.js","hooks/useNotification.js","components/SetDisplay.js","components/RPEScale.js","components/Exercise.js","util/genHash.js","util/reducer.js","components/Workout.js","components/WorkoutHistory.js","components/AddWorkout.js","components/WorkoutDisplay.js","components/WorkoutList.js","App.js","index.js"],"names":["en","pt","useTranslation","useState","language","setLanguage","useEffect","navigatorLanguage","window","navigator","split","includes","fallback","translations","t","key","hasIncompleteSets","exercise","sets","some","s","stage","timeFormat","seconds","Math","abs","pad","val","padStart","minutes","floor","hours","Container","props","children","className","Footer","Button","Icon","type","label","buttonProps","colorClasses","primary","neutral","success","colorClass","DecoratedBlock","TextLabel","small","sizeClass","SingleInputForm","onSubmit","value","onChange","placeholder","required","Block","isActive","List","ListItem","itemProps","ring","TitleH3","EmptyMessage","LightButton","BlockActions","Database","this","db","a","alert","openDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","storeName","data","transaction","store","objectStore","openCursor","cursor","persistenceKey","push","continue","get","operation","complete","logEntry","runInLogs","add","delete","workout","runInWorkouts","id","workoutId","getAllData","lastLogEntry","filter","entry","sort","b","date","getLastLogEntry","getData","Date","isComplete","duration","exercises","createNew","loadNewWorkout","loadWorkoutFromLogs","usePersistence","setDb","database","init","then","getWorkout","activeSetId","activeExerciseId","name","document","querySelector","textContent","trim","Number","dataset","$exercises","querySelectorAll","$exercise","$sets","$set","set","defaultDurationTime","defaultReps","defaultWeight","defaultRestTime","rpe","locales","CycleButton","onClick","labels","IDLE","ACTIVE","RESTING","COMPLETE","icons","BiPlay","BiPause","BiCheck","BiRefresh","Actions","state","dispatch","isReadOnly","history","useHistory","timer","setTimer","setIsComplete","timerIsRunning","setTimerIsRunning","interval","setInterval","clearInterval","onGoBack","footerButtons","find","e","hasActiveSet","Boolean","hasExercises","length","hasSets","BiArrowBack","BiStar","BiTrophy","confirm","saveLogEntry","payload","exerciseId","setId","timerType","locale","formatOptions","data-value","format","AddExercise","setName","ev","preventDefault","target","useNotification","hasAskedPermission","setHasAskedPermission","hasNotificationPermission","setHasNotificationPermission","Notification","requestPermission","permission","notify","msg","body","vibrate","requestNotificationPermission","SetInputField","inputProps","labelText","formatFunction","isEdit","onToggleEdit","inputColorClass","danger","highlight","autoFocus","onFocus","select","onBlur","tabIndex","SetDisplay","durationTime","setDurationTime","restTime","setRestTime","reps","setReps","weight","setWeight","isEditTime","setIsEditTime","isEditReps","setIsEditReps","isEditWeight","setIsEditWeight","isEditRest","setIsEditRest","prevStageRef","useRef","current","numericInputProps","pattern","min","inputMode","baseType","data-id","defaultValue","RPEScale","defaultRPE","setValue","expand","setExpand","rpeTitles","rpeDescriptions","max","step","Array","from","keys","map","i","Exercise","isFirst","isLast","isWorkoutComplete","onActivateSet","moveExercise","factor","disabled","genHash","crypto","getRandomValues","Uint32Array","toString","reducer","action","cloneDeep","ex","hash","addNewSet","setIndex","findIndex","splice","removeSet","updateActiveSet","currentStage","nextStage","stages","index","getNextStageFor","nextIndex","updateSetStage","nextExerciseIdx","nextExercise","updateActiveExercise","addNewExercise","completeWorkout","exerciseIndex","newIndex","exerciseA","exerciseB","Error","Workout","useReducer","loadWorkoutLogById","to","WorkoutHistory","workoutsList","setWorkoutsList","onClickRemove","logKey","eraseLogEntry","w","pathname","search","AddWorkout","onAddWorkout","WorkoutDisplay","onRemoveWorkout","lastRun","setLastRun","lastEntry","formatDistance","WorkoutList","workouts","setWorkouts","saveWorkout","concat","eraseWorkout","App","renderWorkout","routeProps","URLSearchParams","location","match","path","basename","process","exact","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6ba28dd.chunk.js","sourcesContent":["export const en = {\n    'no_exercise': 'No exercises to list.',\n    'start': 'Start',\n    'close': 'Close',\n    'complete': 'Complete',\n    'reset': 'Reset',\n    'sets': 'Sets',\n    'reps': 'Reps',\n    'history': 'History',\n    'view': 'View',\n    'last_run': 'Last run',\n    'time': 'Time',\n    'rest': 'Rest',\n    'weight': 'Weight',\n    'confirm_delete': 'Are you sure you want to delete this workout?',\n    'save_progress': 'Would you like to save your progress?',\n    'erase_workout': 'Are you sure you want to erase the current workout?',\n    'back': 'Back',\n    'reset_workout': 'Reset workout',\n    'finish_workout': 'Finish Workout',\n    'finish_exercise': 'Finish exercise',\n    'start_workout': 'Start workout',\n    'add_exercise': 'Add exercise',\n    'exercise_name': 'Exercise name',\n    'no_sets': 'No sets for this exercise.',\n    'remove_set': 'Remove set',\n    'add_set': 'Add set',\n    'rpe_title_1': 'Very light activity',\n    'rpe_title_2': 'Light activity',\n    'rpe_title_3': 'Light activity',\n    'rpe_title_4': 'Moderate activity',\n    'rpe_title_5': 'Moderate activity',\n    'rpe_title_6': 'Moderate activity',\n    'rpe_title_7': 'Vigorous activity',\n    'rpe_title_8': 'Vigorous activity',\n    'rpe_title_9': 'Very hard activity',\n    'rpe_title_10': 'Max effort activity',\n    'rpe_desc_1': 'Hardly any exertion, but more than sleeping, watching TV, etc.',\n    'rpe_desc_2': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_3': 'Could mantain for hours. Easy to breathe and carry a conversation.',\n    'rpe_desc_4': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_5': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_6': 'Breathing heavily, can mantain a conversation, but more challenging.',\n    'rpe_desc_7': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_8': 'Almost uncofortable, short of breath, can speak a sentence.',\n    'rpe_desc_9': 'Very difficult to mantain, can barely breathe, can speak a few words',\n    'rpe_desc_10': 'Almost impossible to keep going. Out of breath, unable to talk.',\n    'rpe': 'Rate of perceived exertion ',\n    'workouts_list': 'Workouts list',\n    'workout_name': 'Workout name',\n    'add_workout': 'Add workout',\n    'remove_workout': 'Remove workout',\n    'no_workout': 'No workout',\n    'load_error': 'Could not load data',\n    'times_up': 'Rest time\\'s up!',\n    'persist_error': 'Could not save data'\n};\n\nexport const pt = {\n    'no_exercise': 'Nenhum exercício para listar.',\n    'start': 'Iniciar',\n    'close': 'Fechar',\n    'complete': 'Completar',\n    'reset': 'Reiniciar',\n    'sets': 'Séries',\n    'reps': 'Repet.',\n    'time': 'Tempo',\n    'history': 'Histórico',\n    'view': 'Ver',\n    'last_run': 'Última vez',\n    'rest': 'Descanso',\n    'weight': 'Peso',\n    'confirm_delete': 'Tem certeza que deseja remover este treino?',\n    'save_progress': 'Você gostaria de salvar seu progresso?',\n    'erase_workout': 'Tem certeza que deseja apagar o treino atual?',\n    'back': 'Voltar',\n    'reset_workout': 'Apagar treino',\n    'finish_workout': 'Concluir treino',\n    'finish_exercise': 'Concluir exercício',\n    'start_workout': 'Iniciar treino',\n    'add_exercise': 'Adicionar exercício',\n    'exercise_name': 'Nome do exercício',\n    'no_sets': 'Nenhuma série para este exercício.',\n    'remove_set': 'Remover série',\n    'add_set': 'Adicionar série',\n    'rpe_title_1': 'Atividade muito leve',\n    'rpe_title_2': 'Atividade leve',\n    'rpe_title_3': 'Atividade leve',\n    'rpe_title_4': 'Atividade moderada',\n    'rpe_title_5': 'Atividade moderada',\n    'rpe_title_6': 'Atividade moderada',\n    'rpe_title_7': 'Atividade vigorosa',\n    'rpe_title_8': 'Atividade vigorosa',\n    'rpe_title_9': 'Atividade muito difícil',\n    'rpe_title_10': 'Esforço máximo',\n    'rpe_desc_1': 'Quase nenhum esforço, porém mais que assistir TV ou dormir.',\n    'rpe_desc_2': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_3': 'Conseguiria manter por horas. Respira facilmente e consegue conversar normalmente.',\n    'rpe_desc_4': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_5': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_6': 'Respira com dificuldade, conseguiria manter uma conversa, mas seria mais difícil.',\n    'rpe_desc_7': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_8': 'Quase desconfortável, falta fôlego, consegue dizer uma frase no máximo.',\n    'rpe_desc_9': 'Muito difícil de manter, mal consegue respirar, consegue dizer apenas algumas palavras.',\n    'rpe_desc_10': 'Impossível continuar, totalmente sem fôlego, não consegue falar.',\n    'rpe': 'Escala de esforço ',\n    'workouts_list': 'Lista de treinos',\n    'workout_name': 'Nome do treino',\n    'add_workout': 'Adicionar treino',\n    'remove_workout': 'Remover treino',\n    'no_workout': 'Nenhum treino disponível',\n    'times_up': 'Tempo de descanso acabou!',\n    'load_error': 'Não foi possível carregar os dados',\n    'persist_error': 'Não foi possível salvar as alterações'\n};\n","import { useEffect, useState } from 'react';\nimport * as translations from '../util/translations';\n\nexport default function useTranslation() {\n    const [language, setLanguage] = useState('en');\n\n    useEffect(() => {\n        const navigatorLanguage = window.navigator.language.split('-')[0];\n        if (['en', 'pt'].includes(navigatorLanguage)) {\n            setLanguage(navigatorLanguage);\n        } else {\n            setLanguage('en');\n        }\n    }, []);\n\n    const fallback = translations.en;\n\n    const t = (key) => {\n        const translation = translations[language];\n\n        return translation[key] || fallback[key] || key;\n    };\n\n    return { t, language };\n}","export default function hasIncompleteSets(exercise) {\n    return exercise.sets.some(s => s.stage !== 'COMPLETE');\n}","export default function timeFormat(seconds) {\n    if (seconds < 0) {\n        return `-${timeFormat(Math.abs(seconds))}`;\n    }\n    const pad = (val) => `${val % 60}`.padStart(2, '0');\n    const minutes = Math.floor(seconds / 60);\n    if (minutes === 0) {\n        return `${seconds}`;\n    }\n    if (minutes >= 60) {\n        const hours = Math.floor(minutes / 60);\n        return `${hours}:${pad(minutes)}:${pad(seconds)}`;\n    }\n    return `${minutes}:${pad(seconds)}`;\n}","export function Container(props) {\n    const { children } = props;\n    return <div className='container bg-white max-w-5xl min-h-screen m-auto border shadow-md place-self-center'>{children}</div>;\n}\n\nexport function Footer(props) {\n    const { children } = props;\n    return <div className='fixed flex justify-center bottom-0 w-screen left-0'>\n        <div className='flex justify-end items-center border-t border-indigo-200 bg-white w-full max-w-5xl p-3 pb-8'>{children}</div>\n    </div>;\n}\n\nexport function Button(props) {\n    const { Icon, type='neutral', label, ...buttonProps } = props;\n\n    const colorClasses = {\n        primary: 'bg-blue-500 ml-2 border-blue-600 focus:ring-blue-200 active:bg-blue-700',\n        neutral: 'bg-indigo-500 ml-2 border-indigo-600 focus:ring-indigo-200 active:bg-indigo-700',\n        success: 'bg-green-500 ml-2 border-green-600 focus:ring-green-200 active:bg-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <button {...buttonProps} className={`border flex uppercase focus:ring-2 text-sm items-center text-white px-3 py-2 rounded-md ${colorClass}`}>\n            {Icon && <Icon className='mr-1 text-lg' />} {label}\n        </button>\n    );\n}\n\nexport function DecoratedBlock(props) {\n    const { type = 'neutral', children } = props;\n\n    const colorClasses = {\n        primary: 'border-blue-500 text-blue-700',\n        neutral: 'border-indigo-500 text-indigo-700',\n        success: 'border-green-500 text-green-700'\n    };\n\n    const colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return (\n        <div className={`text-xl mr-auto border-l-2 pl-2 bg-white ${colorClass}`}>\n            {children}\n        </div>\n    );\n}\n\nexport function TextLabel(props) {\n    const { small = false, className, children } = props;\n\n    const sizeClass = small ? 'text-xs' : 'text-sm';\n\n    return (\n        <p className={`${sizeClass} uppercase tracking-wider ${className}`}>{children}</p>\n    );\n}\n\nexport function SingleInputForm(props) {\n    const { onSubmit, value, onChange, placeholder, label } = props;\n\n    return (\n        <form onSubmit={onSubmit} className='m-3 pt-3 border-t border-indigo-200'>\n            <div className='flex p-2 items-center bg-indigo-50 rounded-xl border border-indigo-200'>\n                <input required value={value} onChange={onChange}\n                    className='text-indigo-800 px-2 w-2 flex-1 py-1 rounded border border-indigo-200 placeholder-indigo-400 focus:ring-2 focus:ring-indigo-200'\n                    type='text' placeholder={placeholder} />\n            </div>\n            <div className='flex justify-end mt-1'>\n                <button\n                    className='text-indigo-500 text-sm px-1'> {label}\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport function Block(props) {\n    const { isActive = false, type='neutral', children } = props;\n\n    const colorClasses = {\n        primary: `border-blue-200 bg-blue-50 ${isActive ? 'ring-2 ring-blue-200' : ''}`,\n        neutral: `border-indigo-200 bg-indigo-50 ${isActive ? 'ring-2 ring-indigo-200' : ''}`,\n        success: `border-green-200 bg-green-50 ${isActive ? 'ring-2 ring-green-200' : ''}`,\n    };\n\n    let colorClass = colorClasses[type] || colorClasses.neutral;\n\n    return <div className={`p-2 border ${colorClass} rounded-xl`}>{children}</div>;\n}\n\nexport function List(props) {\n    const { children } = props;\n    return <ul className='flex flex-col space-y-3'>{children}</ul>;\n}\n\nexport function ListItem(props) {\n    const { isActive, children, className, ...itemProps } = props;\n    const ring = isActive ? 'ring-2 ring-indigo-200 border-indigo-400' : '';\n    return <div {...itemProps} className={`bg-white p-2 rounded-md shadow border border-indigo-200 ${ring} ${className}`}>{children}</div>;\n}\n\nexport function TitleH3(props) {\n    const { children, className } = props;\n    return <h3 className={`text-lg font-semibold text-indigo-800 ${className}`}>{children}</h3>;\n}\n\nexport function EmptyMessage(props) {\n    const { children } = props;\n    return <p className='text-indigo-500 text-sm pb-1'>{children}</p>;\n}\n\nexport function LightButton(props) {\n    const { children, ...buttonProps } = props;\n    return <button {...buttonProps} className='text-indigo-500 text-sm px-1'>{children}</button>;\n}\n\nexport function BlockActions(props) {\n    const { children } = props;\n    return <div className='flex justify-end mt-1 space-x-4'>{children}</div>;\n}","import { openDB } from 'idb';\n\nexport default class Database {\n    constructor() {\n        this.db = null;\n    }\n    async init() {\n        if (!('indexedDB' in window)) {\n            alert('This app needs indexedDb support to run.');\n            return;\n        }\n        this.db = await openDB('workoutTracker', 1, {\n            upgrade(db) {\n                if (!db.objectStoreNames.contains('workouts')) {\n                    db.createObjectStore('workouts', { keyPath: 'id' });\n                }\n                if (!db.objectStoreNames.contains('logs')) {\n                    db.createObjectStore('logs', { autoIncrement: true });\n                }\n            }\n        });\n    }\n\n    async getAllData(storeName) {\n        const data = [];\n\n        const transaction = this.db.transaction(storeName, 'readonly');\n        const store = transaction.objectStore(storeName);\n\n        let cursor = await store.openCursor();\n        while(cursor) {\n            const value = cursor.value;\n            value.persistenceKey = cursor.key;\n            data.push(value);\n            cursor = await cursor.continue();\n        }\n\n        return data;  \n    }\n\n    getData(storeName, key) {\n        const transaction = this.db.transaction(storeName, 'readonly');\n        const store = transaction.objectStore(storeName);\n        return store.get(key);  \n    }\n\n    runInWorkouts(operation) {\n        const transaction = this.db.transaction('workouts', 'readwrite');\n        const store = transaction.objectStore('workouts');\n        operation(store);\n        return transaction.complete;  \n    }\n\n    runInLogs(operation) {\n        const transaction = this.db.transaction('logs', 'readwrite');\n        const store = transaction.objectStore('logs');\n        operation(store);\n        return transaction.complete;  \n    }\n\n    saveLogEntry(logEntry) {\n        return this.runInLogs((store) => store.add(logEntry));\n    }\n\n    eraseLogEntry(key) {\n        return this.runInLogs((store) => store.delete(key));\n    }\n\n    saveWorkout(workout) {\n        return this.runInWorkouts((store) => store.add(workout));\n    }\n\n    eraseWorkout(id) {\n        return this.runInWorkouts((store) => store.delete(id));\n    }\n\n    async getLastLogEntry(workoutId) {\n        const data = await this.getAllData('logs');\n\n        const lastLogEntry = data\n            .filter(entry => entry.id === workoutId)\n            .sort((a, b) => b.date - a.date);\n\n        return lastLogEntry[0];\n    }\n\n    async loadNewWorkout(id) {\n        const lastLogEntry = await this.getLastLogEntry(id);\n        const workout = lastLogEntry || await this.getData('workouts', id);\n\n        workout.date = new Date();\n        workout.isComplete = false;\n        workout.duration = 0;\n\n        for (const exercise of workout.exercises) {\n            for (const set of exercise.sets) {\n                set.stage = 'IDLE';\n            }\n        }\n\n        return workout;\n    }\n\n    async loadWorkoutFromLogs(id) {\n        const workout = await this.getData('logs', id);\n\n        workout.date = new Date(workout.date);\n\n        for (const exercise of workout.exercises) {\n            for (const set of exercise.sets) {\n                set.stage = 'COMPLETE';\n            }\n        }\n    \n        return workout;\n    }\n\n    loadWorkoutLogById(id, createNew = true) {\n        if (createNew) {\n            return this.loadNewWorkout(id);\n        }\n        return this.loadWorkoutFromLogs(id);\n    }\n}\n","import { useEffect, useState } from 'react';\nimport Database from '../util/workoutPersistence';\n\nexport default function usePersistence() {\n    const [db, setDb] = useState(null);\n\n    useEffect(() => {\n        const database = new Database();\n        database.init().then(() => setDb(database));\n    }, []);\n\n    return db;\n}","export function getWorkout(id) {\n    const workout = {\n        id,\n        isComplete: true,\n        activeSetId: null,\n        activeExerciseId: null\n    };\n\n    workout.date = new Date();\n    workout.name = document.querySelector('.workout-name').textContent.trim();\n    workout.duration = Number(\n        document.querySelector('.workout-duration').dataset.value\n    );\n    workout.exercises = [];\n\n    const $exercises = document.querySelectorAll('.exercise');\n    for (const $exercise of $exercises) {\n        const exercise = {};\n        exercise.name = $exercise.querySelector(\n            '.exercise-name'\n        ).textContent.trim();\n        exercise.id = $exercise.dataset.id;\n        exercise.sets = [];\n\n        const $sets = $exercise.querySelectorAll('.set-display');\n        for (const $set of $sets) {\n            const set = {};\n            set.id = $set.dataset.id;\n            set.defaultDurationTime = Number(\n                $set.querySelector('.time .value').dataset.value\n            );\n            set.defaultReps = Number(\n                $set.querySelector('.reps .value').dataset.value\n            );\n            set.defaultWeight = Number(\n                $set.querySelector('.weight .value').dataset.value\n            );\n            set.defaultRestTime = Number(\n                $set.querySelector('.rest .value').dataset.value\n            );\n            set.stage = 'COMPLETE';\n            exercise.sets.push(set);\n        }\n        exercise.rpe = Number($exercise.querySelector('.rpe').value);\n        workout.exercises.push(exercise);\n    }\n\n    return workout;\n}\n\nexport default function serializeWorkout(id) {\n    return JSON.stringify(getWorkout(id));\n}","import { format } from 'date-fns';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useEffect, useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport {\n    BiArrowBack,\n    BiCheck,\n    BiPause,\n    BiPlay,\n    BiRefresh,\n    BiStar,\n    BiStopwatch,\n    BiTrophy\n} from 'react-icons/bi';\nimport hasIncompleteExercises from '../util/hasIncompleteExercises';\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport timeFormat from '../util/timeFormat';\n\nimport { useHistory } from 'react-router';\nimport { Button, DecoratedBlock, Footer, TextLabel } from '../ui';\nimport usePersistence from '../hooks/usePersistence';\nimport { getWorkout } from '../util/serializeWorkout';\n\nfunction CycleButton({ stage, onClick = () => {} }) {\n    const { t } = useTranslation();\n    \n    const labels = {\n        IDLE: t('start'),\n        ACTIVE: t('rest'),\n        RESTING: t('complete'),\n        COMPLETE: t('reset')\n    };\n\n    const icons = {\n        IDLE: BiPlay,\n        ACTIVE: BiPause,\n        RESTING: BiCheck,\n        COMPLETE: BiRefresh\n    };\n\n    const types = {\n        IDLE: 'neutral',\n        ACTIVE: 'neutral',\n        RESTING: 'neutral',\n        COMPLETE: 'primary'\n    };\n\n    const label = labels[stage];\n    const Icon = icons[stage];\n    const type = types[stage];\n\n    return (\n        <Button\n            onClick={onClick}\n            type={type}\n            label={label}\n            Icon={Icon}\n        />\n    );\n}\n\nexport default function Actions(props) {\n    const { state, dispatch, isReadOnly } = props;\n\n    const { t, language } = useTranslation();\n    const db = usePersistence();\n\n    const history = useHistory();\n\n    const [timer, setTimer] = useState(state.duration || 0);\n    const [isComplete, setIsComplete] = useState(false);\n    const [timerIsRunning, setTimerIsRunning] = useState(false);\n\n    useEffect(() => {\n        if (!timerIsRunning) {\n            return;\n        }\n        const interval = setInterval(() => {\n            setTimer(t => t + 1);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [timerIsRunning]);\n\n    const updateStage = () => {\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    const completeExercise = () => {\n        dispatch({\n            type: 'COMPLETE_EXERCISE'\n        });\n    };\n\n    const completeWorkout = () => {\n        const willSave = window.confirm(\n            t('save_progress')\n        );\n        if (willSave) {\n            const workout = getWorkout(state.id);\n            db?.saveLogEntry(workout);\n        }\n        setIsComplete(true);\n        setTimerIsRunning(false);\n        dispatch({\n            type: 'COMPLETE_WORKOUT'\n        });\n    };\n\n    const onStartWorkout = () => {\n        setTimerIsRunning(true);\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: state.exercises[0]?.id,\n                setId: state.exercises[0]?.sets[0]?.id,\n            }\n        });\n        dispatch({\n            type: 'UPDATE_SET_STAGE'\n        });\n    };\n\n    const onGoBack = () => {\n        history.push('/');\n    };\n\n    let footerButtons = [null, null];\n\n    const exercise = state.exercises.find(\n        e => e.id === state.activeExerciseId\n    );\n\n    const set = exercise ? exercise.sets.find(\n        s => s.id === state.activeSetId\n    ) : null;\n\n    const hasActiveSet = Boolean(set);\n    const hasExercises = state.exercises.length > 0;\n    const hasSets = state.exercises[0]?.sets.length > 0;\n\n    if (isReadOnly) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('back')}\n            onClick={onGoBack}\n            Icon={BiArrowBack}\n        />;\n    } else if (isComplete) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('back')}\n            onClick={onGoBack}\n            Icon={BiArrowBack}\n        />;\n    } else if (timerIsRunning) {\n        if (hasActiveSet) {\n            footerButtons[0] = <CycleButton\n                onClick={updateStage}\n                stage={set.stage}\n            />;\n        }\n    \n        if (!hasIncompleteExercises(state)) {\n            footerButtons[1] = <Button\n                type='success'\n                label={t('finish_workout')}\n                Icon={BiTrophy}\n                onClick={completeWorkout}\n            />;\n        } else if (!hasIncompleteSets(exercise)) {\n            footerButtons[1] = <Button\n                type='success'\n                label={t('finish_exercise')}\n                Icon={BiStar}\n                onClick={completeExercise}\n            />;\n        }\n    } else if (hasExercises && hasSets && !isComplete) {\n        footerButtons[0] = <Button\n            type='primary'\n            label={t('start_workout')}\n            onClick={onStartWorkout}\n            Icon={BiPlay}\n        />;\n    }\n\n    const timerType = timerIsRunning || !isComplete ? 'neutral' : 'success';\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    const date = state.date || new Date();\n    return (\n        <Footer>\n            <DecoratedBlock type={timerType}>\n                <BiStopwatch className='inline -mt-1 mr-1 -ml-1' />\n                <time\n                    className='workout-duration'\n                    data-value={timer}\n                >{timeFormat(timer)}</time>\n                <TextLabel small>\n                    {format(date, 'PP', formatOptions)}\n                </TextLabel>\n            </DecoratedBlock>\n            {footerButtons[0]} {footerButtons[1]}\n        </Footer>\n    );\n}","import hasIncompleteSets from './hasIncompleteSets';\n\nexport default function hasIncompleteExercises(workout) {\n    return workout.exercises.some(hasIncompleteSets);\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\n\nimport { SingleInputForm } from '../ui';\n\nexport default function AddExercise(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n    const { dispatch } = props;\n\n    const onAddExercise = (ev) => {\n        ev.preventDefault();\n        setName('');\n        dispatch({\n            type: 'ADD_EXERCISE',\n            payload: { name }\n        });\n    };\n\n    return <SingleInputForm\n        onSubmit={onAddExercise}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('exercise_name')}\n        label={t('add_exercise')}\n        value={name}\n    />;\n}","import { useEffect, useState } from 'react';\n\nexport default function useNotification() {\n    const [hasAskedPermission, setHasAskedPermission] = useState(false);\n    const [\n        hasNotificationPermission,\n        setHasNotificationPermission\n    ] = useState(false);\n\n    useEffect(() => {\n        setHasNotificationPermission(Notification.permission === 'granted');\n        setHasAskedPermission(Notification.permission !== 'default');\n    }, []);\n\n    async function requestNotificationPermission() {\n        const permission = await Notification.requestPermission();\n        setHasNotificationPermission(permission === 'granted');\n        setHasAskedPermission(true);\n    }\n\n    function notify(msg) {\n        new Notification('Workout tracker', {\n            body: msg,\n            vibrate: true\n        });\n    }\n\n    return {\n        hasAskedPermission,\n        notify,\n        hasNotificationPermission,\n        requestNotificationPermission\n    };\n}","import { useEffect, useRef, useState } from 'react';\nimport timeFormat from '../util/timeFormat';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem, TextLabel } from '../ui';\nimport useNotification from '../hooks/useNotification';\n\nfunction SetInputField(props) {\n    const {\n        inputProps,\n        labelText,\n        value = null,\n        formatFunction = val => val,\n        type = 'neutral',\n        isEdit = false,\n        onToggleEdit = () => {},\n        onChange = () => {}\n    } = props;\n\n    const labelColorClass = {\n        primary: 'text-blue-800',\n        neutral: 'text-indigo-800',\n        success: 'text-green-800',\n        danger: 'text-red-800',\n        highlight: 'text-cyan-800'\n    };\n    \n    const inputColorClass = {\n        primary: 'text-blue-800 bg-blue-50 border-blue-200 focus:ring-blue-100',\n        neutral: 'text-indigo-800 bg-indigo-50 border-indigo-200 focus:ring-indigo-100',\n        success: 'text-green-800 bg-green-50 border-green-200 focus:ring-green-100',\n        danger: 'text-red-800 bg-red-50 border-red-200 focus:ring-red-100',\n        highlight: 'text-cyan-800 bg-cyan-50 border-cyan-200 focus:ring-cyan-100'\n    };\n\n    return (\n        <label className={labelColorClass[type]}>\n            <TextLabel className='mb-1'>{labelText}</TextLabel>\n            {\n                isEdit ? (\n                    <input\n                        {...inputProps}\n                        className={`block tabuler-nums w-full px-1 rounded shadow-sm border focus:ring-2 ${inputColorClass[type]}`}\n                        value={value}\n                        autoFocus\n                        onFocus={ev => ev.target.select()}\n                        onBlur={() => isEdit && onToggleEdit(false)}\n                        onChange={ev => onChange(Number(ev.target.value))}\n                    ></input>\n                ) : (\n                    <span data-value={value} tabIndex={0} onFocus={() => isEdit || onToggleEdit(true)} className={`value block tabuler-nums w-full px-1 rounded shadow-sm border ${inputColorClass[type]}`}>\n                        {formatFunction(Number(value))}\n                    </span>\n                )\n            }\n        </label>\n    );\n}\n\nexport default function SetDisplay(props) {\n    const {\n        id,\n        exerciseId,\n        defaultDurationTime = 0,\n        defaultRestTime = 30,\n        defaultReps = 8,\n        defaultWeight = 10,\n        isReadOnly = false,\n        onClick = () => {},\n        dispatch = () => {},\n        isActive = true,\n        stage = 'IDLE'\n    } = props;\n\n    const [durationTime, setDurationTime] = useState(defaultDurationTime);\n    const [restTime, setRestTime] = useState(defaultRestTime);\n    const [reps, setReps] = useState(defaultReps);\n    const [weight, setWeight] = useState(defaultWeight);\n\n    const [isEditTime, setIsEditTime] = useState(false);\n    const [isEditReps, setIsEditReps] = useState(false);\n    const [isEditWeight, setIsEditWeight] = useState(false);\n    const [isEditRest, setIsEditRest] = useState(false);\n\n    const { notify } = useNotification();\n    const prevStageRef = useRef();\n\n    const { t } = useTranslation();\n    useEffect(() => {\n        if (isEditTime || isEditReps || isEditWeight || isEditRest) {\n            dispatch({\n                type: 'UPDATE_ACTIVE_SET',\n                payload: {\n                    setId: id,\n                    exerciseId\n                }\n            });\n\n        }\n    }, [\n        dispatch, isEditTime, isEditReps, isEditRest,\n        isEditWeight, id, exerciseId\n    ]);\n\n    useEffect(() => {\n        if (stage === 'IDLE' && prevStageRef.current === 'COMPLETE') {\n            setDurationTime(0);\n            setRestTime(defaultRestTime);\n            setReps(defaultReps);\n            setWeight(defaultWeight);\n        }\n    }, [defaultRestTime, defaultReps, defaultWeight, stage]);\n\n    useEffect(() => {\n        prevStageRef.current = stage;        \n    }, [stage]);\n\n    useEffect(() => {\n        if (stage === 'ACTIVE' && !isEditTime) {\n            const interval = setInterval(() => {\n                setDurationTime((t) => Number(t) + 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [stage, isEditTime]);\n\n    useEffect(() => {\n        if (stage === 'RESTING' && !isEditRest) {\n            const interval = setInterval(() => {\n                setRestTime((t) => Number(t) - 1);\n            }, 1000);\n            return () => clearInterval(interval);\n        }\n    }, [stage, defaultRestTime, isEditRest]);\n\n    useEffect(() => {\n        if (restTime === 0) {\n            notify(t('times_up'));\n        }\n    }, [restTime]);\n\n    const numericInputProps = {\n        type: 'number',\n        pattern: '\\\\d+',\n        min: '0',\n        inputMode: 'numeric',\n    };\n\n    const baseType = stage === 'COMPLETE' ? 'success' : 'neutral';\n\n    const getRestingType = () => {\n        if (stage === 'RESTING') {\n            return restTime < 0 ? 'danger' : 'highlight';\n        }\n        return baseType;\n    };\n\n    return (\n        <ListItem\n            onClick={onClick}\n            data-id={id}\n            className='set-display flex space-x-2'\n            isActive={isActive && !isReadOnly}\n        >\n            <div className='time flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditTime && !isReadOnly}\n                    onToggleEdit={setIsEditTime}\n                    onChange={setDurationTime}\n                    value={durationTime}\n                    formatFunction={timeFormat}\n                    type={stage === 'ACTIVE' ? 'highlight' : baseType}\n                    labelText={t('time')}\n                    defaultValue='0'\n                />\n            </div>\n            <div className='reps flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditReps && !isReadOnly}\n                    onToggleEdit={setIsEditReps}\n                    onChange={setReps}\n                    value={reps}\n                    type={baseType}\n                    labelText={t('reps')}\n                    defaultValue='8'\n                />\n            </div>\n            <div className='weight flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditWeight && !isReadOnly}\n                    onToggleEdit={setIsEditWeight}\n                    onChange={setWeight}\n                    value={weight}\n                    type={baseType}\n                    labelText={t('weight')}\n                    defaultValue='10'\n                />\n            </div>\n            <div className='rest flex-1'>\n                <SetInputField\n                    inputProps={numericInputProps}\n                    isEdit={isEditRest && !isReadOnly}\n                    onToggleEdit={setIsEditRest}\n                    onChange={setRestTime}\n                    value={restTime > 0 ? restTime : - restTime}\n                    type={getRestingType()}\n                    formatFunction={timeFormat}\n                    labelText={t('rest')}\n                    defaultValue={defaultRestTime}\n                />\n            </div>\n        </ListItem>\n    );\n}","import { BiInfoCircle } from 'react-icons/bi';\nimport { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { ListItem } from '../ui';\n\nexport default function RPEScale(props) {\n    const { defaultRPE = 5, isReadOnly } = props;\n\n    const { t } = useTranslation();\n    const [value, setValue] = useState(defaultRPE);\n    const [expand, setExpand] = useState(false);\n\n    const rpeTitles = [\n        t('rpe_title_1'),\n        t('rpe_title_2'),\n        t('rpe_title_3'),\n        t('rpe_title_4'),\n        t('rpe_title_5'),\n        t('rpe_title_6'),\n        t('rpe_title_7'),\n        t('rpe_title_8'),\n        t('rpe_title_9'),\n        t('rpe_title_10')\n    ];\n\n    const rpeDescriptions = [\n        t('rpe_desc_1'),\n        t('rpe_desc_2'),\n        t('rpe_desc_3'),\n        t('rpe_desc_4'),\n        t('rpe_desc_5'),\n        t('rpe_desc_6'),\n        t('rpe_desc_7'),\n        t('rpe_desc_8'),\n        t('rpe_desc_9'),\n        t('rpe_desc_10')\n    ];\n\n    return (\n        <>\n            <hr className='border-t border-indigo-200'></hr>\n            <ListItem>\n                <span className='uppercase text-sm tracking-wider text-indigo-700'>{t('rpe')}\n                <button onClick={() => setExpand(!expand)}><BiInfoCircle className='inline ml-1 mb-1' /></button></span>\n                <input\n                    className={`rpe val-${value}`}\n                    type='range'\n                    min='1'\n                    value={value}\n                    onChange={ev => isReadOnly || setValue(ev.target.value)}\n                    max='10'\n                    step='1'\n                />\n                <ul className='tracks flex w-full justify-between text-xs -mt-1 text-indigo-700'>\n                    {Array.from(Array(10).keys()).map((i) => \n                        <li key={i}>{i + 1}</li>\n                    )}\n                </ul>\n                {\n                    expand && (\n                        <>\n                            <hr className='mt-2 border-t border-indigo-200' />\n                            <h4 className='text-xs font-semibold mb-1 mt-2 text-indigo-700'>{rpeTitles[value - 1]}</h4>\n                            <p className='text-xs text-indigo-700'>{rpeDescriptions[value - 1]}</p>\n                        </>\n                    )\n                }\n            </ListItem>\n        </>\n    );\n}","import { BiChevronDown, BiChevronUp, BiDumbbell } from 'react-icons/bi';\n\nimport SetDisplay from './SetDisplay';\nimport RPEScale from './RPEScale';\n\nimport '../range.css';\nimport useTranslation from '../hooks/useTranslation';\nimport {\n    Block,\n    EmptyMessage,\n    List,\n    TitleH3,\n    LightButton,\n    BlockActions\n} from '../ui';\n\nexport default function Exercise(props) {\n    const {\n        id,\n        name,\n        sets,\n        isFirst = false,\n        isLast = false,\n        isActive = false,\n        isComplete = false,\n        isReadOnly=false,\n        defaultRPE=5,\n        isWorkoutComplete = false,\n        activeSetId = null,\n        dispatch = () => {},\n    } = props;\n\n    const { t } = useTranslation();\n\n    const onRemoveSet = () => {\n        dispatch({\n            type: 'REMOVE_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onAddSet = () => {\n        dispatch({\n            type: 'ADD_SET',\n            payload: {\n                exerciseId: id\n            }\n        });\n    };\n\n    const onActivateSet = (setId) => {\n        dispatch({\n            type: 'UPDATE_ACTIVE_SET',\n            payload: {\n                exerciseId: id,\n                setId\n            }\n        });\n    };\n\n    const moveExercise = (factor) => {\n        dispatch({\n            type: 'MOVE_EXERCISE',\n            payload: {\n                exerciseId: id,\n                factor\n            }\n        });\n    };\n\n    return (\n        <div className='exercise relative' data-id={id}>\n            {isWorkoutComplete || isReadOnly || (\n                <div className='absolute top-1 right-1 text-indigo-500'>\n                    <button\n                        disabled={isLast}\n                        onClick={() => moveExercise(1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronDown /></button>\n                    <button\n                        disabled={isFirst}\n                        onClick={() => moveExercise(-1)}\n                        className='disabled:opacity-50 p-2'\n                    ><BiChevronUp /></button>\n                </div>\n            )}\n            <Block isActive={isActive}>\n                <List>\n                    <TitleH3 className='exercise-name'>\n                        <BiDumbbell className='inline text-xl mb-1'/> {name}\n                    </TitleH3>\n                    {sets.length ? sets.map((set) =>\n                        <SetDisplay\n                            key={set.id}\n                            id={set.id}\n                            exerciseId={id}\n                            defaultDurationTime={set.defaultDurationTime}\n                            defaultWeight={set.defaultWeight}\n                            defaultRestTime={set.defaultRestTime}\n                            defaultReps={set.defaultReps}\n                            onClick={() => onActivateSet(set.id)}\n                            onActivateSet={onActivateSet}\n                            isActive={set.id === activeSetId}\n                            isReadOnly={isReadOnly}\n                            stage={set.stage}\n                            dispatch={dispatch}\n                        ></SetDisplay>\n                    ) : (\n                        <EmptyMessage>{t('no_sets')}</EmptyMessage>\n                    )}\n                    {\n                        isComplete && sets.length > 0 &&\n                        <RPEScale\n                            defaultRPE={defaultRPE}\n                            isReadOnly={isReadOnly}\n                        />\n                    }\n                </List>\n            </Block>\n            {isWorkoutComplete || isReadOnly || (\n                <BlockActions>\n                    {\n                        isActive && activeSetId !== null &&\n                        <LightButton onClick={onRemoveSet}>\n                            {t('remove_set')}\n                        </LightButton>\n                    }\n                    <LightButton onClick={onAddSet}>{t('add_set')}</LightButton>\n                </BlockActions>\n            )}\n        </div>\n    );\n}","export default function genHash() {\n    return crypto.getRandomValues(new Uint32Array(1))[0].toString(16);\n}","import { cloneDeep } from 'lodash';\nimport genHash from './genHash';\nimport hasIncompleteSets from './hasIncompleteSets';\n\nfunction getNextStageFor(stage) {\n    const stages = ['IDLE', 'ACTIVE', 'RESTING', 'COMPLETE'];\n    const index = stages.findIndex(s => s === stage);\n\n    return stages[(index + 1) % stages.length];\n}\n\nfunction addNewSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const hash = genHash();\n    exercise.sets = [\n        ...exercise.sets,\n        { id: hash, stage: 'IDLE' }\n    ];\n    workout.activeSetId = hash;\n    return workout;\n}\n\nfunction removeSet(workout, payload) {\n    const { exerciseId } = payload;\n\n    const exercise = workout.exercises.find(\n        ex => ex.id === exerciseId\n    );\n    const setIndex = exercise.sets.findIndex(s => s.id === workout.activeSetId);\n    if (setIndex !== -1) {\n        exercise.sets.splice(setIndex, 1);\n        workout.activeSetId = null;\n    }\n    return workout;\n}\n\nfunction updateActiveSet(workout, payload) {\n    const { setId, exerciseId } = payload;\n\n    workout.activeSetId = setId;\n    workout.activeExerciseId = exerciseId;\n\n    return workout;\n}\n\nfunction updateSetStage(workout, stage) {\n    const exercise = workout.exercises.find(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const setIndex = exercise.sets.findIndex(\n        s => s.id === workout.activeSetId\n    );\n    if (setIndex === -1) {\n        return workout;\n    }\n\n    const currentStage = exercise.sets[setIndex].stage;\n    const nextStage = stage || getNextStageFor(\n        currentStage\n    );\n\n    if (nextStage === 'COMPLETE' && !stage) {\n        const nextIndex = (setIndex + 1) % exercise.sets.length;\n        workout.activeSetId = nextIndex > 0 ?\n            exercise.sets[\n                (setIndex + 1) % exercise.sets.length\n            ].id :\n            null;\n    }\n\n    exercise.sets[setIndex].stage = nextStage;\n\n    if (!hasIncompleteSets(exercise)) {\n        workout.activeSetId = null;\n    }\n\n    return workout;\n}\n\nfunction updateActiveExercise(workout) {\n    const activeExerciseIdx = workout.exercises.findIndex(\n        ex => ex.id === workout.activeExerciseId\n    );\n    const nextExerciseIdx = (activeExerciseIdx + 1) % workout.exercises.length;\n    const nextExercise = workout.exercises[nextExerciseIdx];\n    workout.activeExerciseId = nextExercise.id;\n    workout.activeSetId = nextExercise.sets[0]?.id || null;\n\n    return workout;\n}\n\nfunction addNewExercise(workout, payload) {\n    const { name } = payload;\n    workout.exercises.push({\n        id: genHash(),\n        name,\n        sets: []\n    });\n    return workout;\n}\n\nfunction completeWorkout(workout) {\n    workout.isComplete = true;\n    return workout;\n}\n\nfunction moveExercise(workout, payload) {\n    const { exerciseId, factor } = payload;\n\n    const exerciseIndex = workout.exercises.findIndex(e => e.id === exerciseId);\n\n    if (exerciseIndex === -1) {\n        return workout;\n    }\n\n    const newIndex = Math.min(\n        Math.max(0, exerciseIndex + factor), workout.exercises.length - 1\n    );\n\n    const exerciseA = workout.exercises[exerciseIndex];\n    const exerciseB = workout.exercises[newIndex];\n\n    workout.exercises[exerciseIndex] = exerciseB;\n    workout.exercises[newIndex] = exerciseA;\n\n    return workout;\n}\n\nexport default function reducer(state, action) {\n    const workout = cloneDeep(state);\n\n    switch(action.type) {\n        case 'SET_WORKOUT':\n            return action.payload;\n        case 'ADD_SET':\n            return addNewSet(workout, action.payload);\n        case 'REMOVE_SET':\n            return removeSet(workout, action.payload);\n        case 'UPDATE_ACTIVE_SET':\n            return updateActiveSet(workout, action.payload);\n        case 'UPDATE_SET_STAGE':\n            return updateSetStage(workout);\n        case 'COMPLETE_EXERCISE':\n            return updateActiveExercise(workout);\n        case 'ADD_EXERCISE':\n            return addNewExercise(workout, action.payload);\n        case 'COMPLETE_WORKOUT':\n            return completeWorkout(workout);\n        case 'MOVE_EXERCISE':\n            return moveExercise(workout, action.payload);\n        default:\n            throw new Error();\n    }\n}","import { useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Actions from './Actions';\nimport AddExercise from './AddExercise';\nimport Exercise from './Exercise';\n\nimport hasIncompleteSets from '../util/hasIncompleteSets';\nimport reducer from '../util/reducer';\nimport useTranslation from '../hooks/useTranslation';\nimport useNotification from '../hooks/useNotification';\nimport usePersistence from '../hooks/usePersistence';\nimport { BiBell } from 'react-icons/bi';\n\nexport default function Workout(props) {\n    const { t } = useTranslation();\n    const { id, createNew = true } = props;\n\n    const db = usePersistence();\n    const {\n        requestNotificationPermission,\n        hasAskedPermission\n    } = useNotification();\n    const [workout, dispatch] = useReducer(reducer, null);\n\n    useEffect(() => {\n        db?.loadWorkoutLogById(id, createNew).then((workout) => {\n            dispatch({\n                type: 'SET_WORKOUT',\n                payload: workout\n            });\n        });\n    }, [db]);\n\n    if (!workout) {\n        return null;\n    }\n\n    return (\n        <div>\n            <header className='flex items-center pt-4'>\n                <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pr-2'>\n                    {workout.name}\n                </h2>\n                <button\n                    onClick={requestNotificationPermission}\n                    className='p-1 text-base text-indigo-800'\n                >\n                    {hasAskedPermission || <BiBell className='inline' />}\n                </button>\n                <Link className='text-blue-500 ml-auto px-3' to='/'>{t('close')}</Link>\n            </header>\n            <main>\n                {\n                    workout.exercises.length > 0 ? (\n                        <ul className='flex flex-col space-y-4 p-3'>\n                            {\n                                workout.exercises.map((exercise, i) =>\n                                <li key={exercise.id}>\n                                    <Exercise\n                                        id={exercise.id}\n                                        isFirst={i === 0}\n                                        isWorkoutComplete={workout.isComplete}\n                                        isLast={i === workout.exercises.length - 1}\n                                        isActive={exercise.id === workout.activeExerciseId && createNew}\n                                        isComplete={!hasIncompleteSets(exercise)}\n                                        isReadOnly={!createNew || workout.isComplete}\n                                        name={exercise.name}\n                                        sets={exercise.sets}\n                                        defaultRPE={exercise.rpe}\n                                        activeSetId={workout.activeSetId}\n                                        dispatch={dispatch}\n                                    />\n                                </li>)\n                            }\n                        </ul>\n                    ) : (\n                        <p className='px-3 my-2 text-indigo-500'>{t('no_exercise')}</p>\n                    )\n                }\n                {workout.isComplete || !createNew || <AddExercise dispatch={dispatch} />}\n            </main>\n            <Actions\n                isReadOnly={!createNew}\n                state={workout}\n                dispatch={dispatch}\n            />\n        </div>\n    );\n}","import { format } from 'date-fns';\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\n\nconst locales = { pt, en };\n\nimport { useEffect, useState } from 'react';\n\nimport useTranslation from '../hooks/useTranslation';\nimport usePersistence from '../hooks/usePersistence';\n\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nexport default function WorkoutHistory() {\n    const [workoutsList, setWorkoutsList] = useState([]);\n\n    const db = usePersistence();\n    const { t, language } = useTranslation();\n\n    useEffect(() => {\n        db?.getAllData('logs').then(setWorkoutsList);\n    }, [db]);\n\n    const onClickRemove = async (logKey) => {\n        db?.eraseLogEntry(logKey);\n        setWorkoutsList(\n            workoutsList.filter(w => w.persistenceKey !== logKey)\n        );\n    };\n\n    if (!workoutsList.length) {\n        return null;\n    }\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    return <div>\n        <h2 className='workout-name text-2xl text-blue-800 font-semibold px-3 pt-4'>\n            {t('history')}\n        </h2>\n        <ul className='flex flex-col space-y-4 p-3'>{\n            workoutsList.map((workout) => \n                <Link to={{\n                    pathname: '/viewWorkout',\n                    search: `?id=${workout.persistenceKey}`\n                }} key={workout.persistenceKey} className='p-2 border border-blue-200 relative flex flex-wrap bg-blue-50 rounded-xl'>\n                    <button\n                        onClick={(ev) => {\n                            onClickRemove(workout.persistenceKey);\n                            ev.preventDefault();\n                        }}\n                        className='absolute p-2 top-0 right-0 text-blue-400'><BiTrash /></button>\n                    <h2 className='text-blue-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {workout.name}</h2>\n                    <p className='text-blue-600 text-sm'>{format(workout.date, 'PP', formatOptions)}</p>\n                </Link>\n            )\n        }</ul>\n    </div>;\n}","import { useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport { SingleInputForm } from '../ui';\n\nexport default function AddWorkout(props) {\n    const { t } = useTranslation();\n\n    const [ name, setName ] = useState('');\n\n    const { onAddWorkout = () => {} } = props;\n\n    const onSubmit = (ev) => {\n        ev.preventDefault();\n        onAddWorkout(name);\n        setName('');\n    };\n\n    return <SingleInputForm\n        onSubmit={onSubmit}\n        onChange={ev => setName(ev.target.value)}\n        placeholder={t('workout_name')}\n        label={t('add_workout')}\n        value={name}\n    />;\n}","import { formatDistance } from 'date-fns';\nimport useTranslation from '../hooks/useTranslation';\nimport { BiDumbbell, BiTrash } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nimport pt from 'date-fns/locale/pt-BR';\nimport en from 'date-fns/locale/en-US';\nimport usePersistence from '../hooks/usePersistence';\nimport { useEffect, useState } from 'react';\n\nconst locales = { pt, en };\n\nexport default function WorkoutDisplay(props) {\n    const { name, onRemoveWorkout, id } = props;\n\n    const [lastRun, setLastRun] = useState(null);\n    const db = usePersistence();\n    const { t, language } = useTranslation();\n\n    useEffect(async () => {\n        db?.getLastLogEntry(id).then(lastEntry => {\n            if (lastEntry) {\n                setLastRun(lastEntry.date);\n            }\n        });\n    }, [db]);\n\n    const locale = locales[language];\n    const formatOptions = {};\n    if (locale) {\n        formatOptions.locale = locale;\n    }\n\n    return (\n        <Link to={{ pathname: '/newWorkout', search: `?id=${id}` }} className='p-2 border border-indigo-200 relative flex flex-wrap bg-indigo-50 rounded-xl'>\n            <button onClick={(ev) => {\n                onRemoveWorkout(id);\n                ev.preventDefault();\n            }} className='p-2 absolute top-0 right-0 text-indigo-400'><BiTrash /></button>\n            <h2 className='text-indigo-700 w-full text-md'><BiDumbbell className='-mt-1 inline text-lg' /> {name}</h2>\n            {lastRun && (\n                <p className='text-indigo-600 text-sm'>\n                    {t('last_run')}: {formatDistance(lastRun, new Date(), formatOptions)}\n                </p>\n            )}\n        </Link>\n    );\n}","import { useEffect, useState } from 'react';\nimport useTranslation from '../hooks/useTranslation';\nimport AddWorkout from './AddWorkout';\nimport WorkoutDisplay from './WorkoutDisplay';\n\nimport genHash from '../util/genHash';\nimport usePersistence from '../hooks/usePersistence';\n\nexport default function WorkoutList() {\n    const db = usePersistence();\n    const { t } = useTranslation();\n    const [workouts, setWorkouts] = useState([]);\n\n    useEffect(() => {\n        db?.getAllData('workouts').then(setWorkouts);\n    }, [db]);\n\n    const onAddWorkout = async (name) => {\n        const workout = {\n            id: genHash(), name, exercises: []\n        };\n\n        if (db) {\n            await db.saveWorkout(workout);\n        }\n\n        setWorkouts(workouts.concat([workout]));\n    };\n\n    const onRemoveWorkout = async (id) => {\n        const willRemove = window.confirm(t('confirm_delete'));\n        if (willRemove) {\n            if (db) {\n                await db.eraseWorkout(id);\n            }\n\n            setWorkouts(workouts.filter(w => w.id !== id));\n        }\n    };\n\n    return (\n        <div>\n            <h2 className='workout-name text-2xl text-indigo-800 font-semibold px-3 pt-4'>\n                {t('workouts_list')}\n            </h2>\n            {\n                workouts.length > 0 ? (\n                    <ul className='flex flex-col space-y-4 p-3'>\n                        {\n                            workouts.map((workout) =>\n                                <WorkoutDisplay\n                                    key={workout.id}\n                                    id={workout.id}\n                                    name={workout.name}\n                                    onRemoveWorkout={onRemoveWorkout}\n                                />)\n                        }\n                    </ul>\n                ) : (\n                    <p className='px-3 my-2 text-indigo-500'>{t('no_workout')}</p>\n                )\n            }\n            <AddWorkout onAddWorkout={onAddWorkout} />\n        </div>\n    );\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Workout from './components/Workout';\nimport WorkoutHistory from './components/WorkoutHistory';\nimport WorkoutList from './components/WorkoutList';\n\nimport { Container } from './ui';\n\nfunction App() {\n    const renderWorkout = (routeProps) => {\n        let id = new URLSearchParams(routeProps.location.search).get('id');\n\n        const createNew = routeProps.match.path === '/newWorkout';\n\n        if (routeProps.match.path === '/viewWorkout') {\n            id = Number(id); // Logs have numeric ids\n        }\n\n        return <Workout id={id} createNew={createNew} />;\n    };\n\n    return (\n        <Container>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/'>\n                        <WorkoutList />\n                        <WorkoutHistory />\n                    </Route>\n                    <Route path='/viewWorkout' render={renderWorkout} />\n                    <Route path='/newWorkout' render={renderWorkout} />\n                </Switch>\n            </Router>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}